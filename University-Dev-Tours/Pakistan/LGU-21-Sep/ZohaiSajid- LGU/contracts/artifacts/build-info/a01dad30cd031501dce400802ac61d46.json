{
	"id": "a01dad30cd031501dce400802ac61d46",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/CoreLoanPlatform.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract CoreLoanPlatform is Ownable {\n    using SafeERC20 for IERC20;\n\n    IERC20 public immutable USD;\n    IERC20 public immutable BTC;\n\n    uint256 public constant COLLATERAL_RATIO = 150; // 150% collateralization\n    uint256 public constant BORROWABLE_RATIO = 80; // 80% of collateral can be borrowed\n    uint256 public constant INTEREST_RATE = 5; // 5% interest rate\n    uint256 public constant LOAN_DURATION = 30 days;\n    uint256 private constant SECONDS_IN_A_DAY = 86400;\n\n    uint256 private totalStaked = 0; //Counter for total staked\n    uint256 private totalBorrowed = 0; //Counter for total borrowed\n\n    struct Loan {\n        uint256 amount;\n        uint256 collateral;\n        uint256 timestamp;\n        bool active;\n    }\n\n    mapping(address => Loan) public loans;\n    mapping(address => uint256) public userCollateral;\n    mapping(address => uint256) public lenderBalances;\n\n    event LoanTaken(\n        address indexed borrower,\n        uint256 amount,\n        uint256 collateral\n    );\n    event LoanRepaid(\n        address indexed borrower,\n        uint256 amount,\n        uint256 interest\n    );\n    event CollateralDeposited(address indexed user, uint256 amount);\n    event CollateralWithdrawn(address indexed user, uint256 amount);\n    event BTCDeposited(address indexed lender, uint256 amount);\n    event BTCWithdrawn(address indexed lender, uint256 amount);\n\n    constructor(address _USD, address _BTC) Ownable(msg.sender) {\n        require(\n            _USD != address(0) && _BTC != address(0),\n            \"Invalid token addresses\"\n        );\n        USD = IERC20(_USD);\n        BTC = IERC20(_BTC);\n    }\n\n    function depositCollateral(uint256 amount) external {\n        require(amount > 0, \"Amount must be greater than 0\");\n        USD.safeTransferFrom(msg.sender, address(this), amount);\n        userCollateral[msg.sender] += amount;\n        emit CollateralDeposited(msg.sender, amount);\n    }\n\n    function withdrawCollateral(uint256 amount) external {\n        require(amount > 0, \"Amount must be greater than 0\");\n        require(\n            userCollateral[msg.sender] >= amount,\n            \"Insufficient collateral\"\n        );\n        uint256 borrowedAmount = loans[msg.sender].active\n            ? loans[msg.sender].amount\n            : 0;\n        uint256 requiredCollateral = (borrowedAmount * COLLATERAL_RATIO) / 100;\n        require(\n            userCollateral[msg.sender] - amount >= requiredCollateral,\n            \"Withdrawal would undercollateralize loan\"\n        );\n        userCollateral[msg.sender] -= amount;\n        USD.safeTransfer(msg.sender, amount);\n        emit CollateralWithdrawn(msg.sender, amount);\n    }\n\n    function borrowBTC(uint256 amount) external {\n        require(amount > 0, \"Amount must be greater than 0\");\n        require(\n            !loans[msg.sender].active,\n            \"Existing loan must be repaid first\"\n        );\n\n        uint256 requiredCollateral = (amount * COLLATERAL_RATIO) / 100;\n        require(\n            userCollateral[msg.sender] >= requiredCollateral,\n            \"Insufficient collateral\"\n        );\n\n        uint256 maxBorrowable = (userCollateral[msg.sender] *\n            BORROWABLE_RATIO) / 100;\n        require(amount <= maxBorrowable, \"Borrow amount exceeds limit\");\n\n        require(\n            BTC.balanceOf(address(this)) >= amount,\n            \"Insufficient BTC in contract\"\n        );\n\n        loans[msg.sender] = Loan(\n            amount,\n            requiredCollateral,\n            block.timestamp,\n            true\n        );\n        BTC.safeTransfer(msg.sender, amount);\n\n        totalBorrowed = totalBorrowed + amount;\n\n        emit LoanTaken(msg.sender, amount, requiredCollateral);\n    }\n\n    function getBorrowableAmount(address user) external view returns (uint256) {\n        return (userCollateral[user] * BORROWABLE_RATIO) / 100;\n    }\n\n    function getUserCollateral(address user) external view returns (uint256) {\n        return userCollateral[user];\n    }\n\n    function depositBTC(uint256 amount) external {\n        require(amount > 0, \"Amount must be greater than 0\");\n        BTC.safeTransferFrom(msg.sender, address(this), amount);\n        lenderBalances[msg.sender] += amount;\n        totalStaked = totalStaked + amount;\n        emit BTCDeposited(msg.sender, amount);\n    }\n\n    function withdrawBTC(uint256 amount) external {\n        require(amount > 0, \"Amount must be greater than 0\");\n        require(lenderBalances[msg.sender] >= amount, \"Insufficient balance\");\n        lenderBalances[msg.sender] -= amount;\n        totalStaked = totalStaked - amount;\n        BTC.safeTransfer(msg.sender, amount);\n        emit BTCWithdrawn(msg.sender, amount);\n    }\n\n    function getUserStaked(address user) external view returns (uint256) {\n        return lenderBalances[user];\n    }\n\n    function getCurrentApy() external pure returns (uint256) {\n        return INTEREST_RATE;\n    }\n\n    function repayLoan(address user) external {\n        Loan storage loan = loans[user];\n        require(loan.active, \"No active loan\");\n        uint256 daysElapsed = (block.timestamp - loan.timestamp) /\n            SECONDS_IN_A_DAY;\n        require(daysElapsed <= 30, \"Loan duration exceeded 30 days\");\n        uint256 interest = (loan.amount * INTEREST_RATE * daysElapsed) / 36500;\n        uint256 totalRepayment = loan.amount + interest;\n        BTC.safeTransferFrom(user, address(this), totalRepayment);\n        loan.active = false;\n        totalBorrowed = totalBorrowed - loan.amount;\n        emit LoanRepaid(msg.sender, loan.amount, interest);\n    }\n\n    function calculateInterest(address user) external view returns (uint256) {\n        Loan storage loan = loans[user];\n        if (loan.active) {\n            uint256 daysElapsed = (block.timestamp - loan.timestamp) /\n                SECONDS_IN_A_DAY;\n            uint256 interest = (loan.amount * INTEREST_RATE * daysElapsed) /\n                36500;\n            return interest;\n        } else {\n            return 0;\n        }\n    }\n\n    function getLoanDetails(address borrower)\n        external\n        view\n        returns (Loan memory)\n    {\n        return loans[borrower];\n    }\n\n    function getLenderBalance(address lender) external view returns (uint256) {\n        return lenderBalances[lender];\n    }\n\n    function getTotalStaked() external view returns (uint256) {\n        return totalStaked;\n    }\n\n    function getTotalBorrowed() external view returns (uint256) {\n        return totalBorrowed;\n    }\n\n    function getUserBorrowed(address user) external view returns (uint256) {\n        Loan storage loan = loans[user];\n        if (loan.active) {\n            return loan.amount;\n        }\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC20Permit} from \"../extensions/IERC20Permit.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev An operation with an ERC20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data);\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "paris"
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220790cc5d829cdd523109635cdc36118ea87744ec188d287e9a9d3d75ab2ef589964736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220790cc5d829cdd523109635cdc36118ea87744ec188d287e9a9d3d75ab2ef589964736f6c634300081a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0xCC5D829CDD523109635CDC36118EA87744EC188D287E9A9D3D7 GAS 0xB2 0xEF PC SWAP10 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "751:5018:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220790cc5d829cdd523109635cdc36118ea87744ec188d287e9a9d3d75ab2ef589964736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0xCC5D829CDD523109635CDC36118EA87744EC188D287E9A9D3D7 GAS 0xB2 0xEF PC SWAP10 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "751:5018:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220790cc5d829cdd523109635cdc36118ea87744ec188d287e9a9d3d75ab2ef589964736f6c634300081a0033",
									".code": [
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/CoreLoanPlatform.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202c20ce2cd636b0b9ce4334d4fe9de79178d515dc9cb8b512f02392e7f8bc320164736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202c20ce2cd636b0b9ce4334d4fe9de79178d515dc9cb8b512f02392e7f8bc320164736f6c634300081a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C KECCAK256 0xCE 0x2C 0xD6 CALLDATASIZE 0xB0 0xB9 0xCE NUMBER CALLVALUE 0xD4 INVALID SWAP14 0xE7 SWAP2 PUSH25 0xD515DC9CB8B512F02392E7F8BC320164736F6C634300081A00 CALLER ",
							"sourceMap": "195:6066:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202c20ce2cd636b0b9ce4334d4fe9de79178d515dc9cb8b512f02392e7f8bc320164736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C KECCAK256 0xCE 0x2C 0xD6 CALLDATASIZE 0xB0 0xB9 0xCE NUMBER CALLVALUE 0xD4 INVALID SWAP14 0xE7 SWAP2 PUSH25 0xD515DC9CB8B512F02392E7F8BC320164736F6C634300081A00 CALLER ",
							"sourceMap": "195:6066:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202c20ce2cd636b0b9ce4334d4fe9de79178d515dc9cb8b512f02392e7f8bc320164736f6c634300081a0033",
									".code": [
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/CoreLoanPlatform.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/CoreLoanPlatform.sol": {
				"CoreLoanPlatform": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_USD",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_BTC",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "lender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "BTCDeposited",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "lender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "BTCWithdrawn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "CollateralDeposited",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "CollateralWithdrawn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "borrower",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "interest",
									"type": "uint256"
								}
							],
							"name": "LoanRepaid",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "borrower",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "collateral",
									"type": "uint256"
								}
							],
							"name": "LoanTaken",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "BORROWABLE_RATIO",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "BTC",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "COLLATERAL_RATIO",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "INTEREST_RATE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LOAN_DURATION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "USD",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "borrowBTC",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "calculateInterest",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "depositBTC",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "depositCollateral",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getBorrowableAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCurrentApy",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "lender",
									"type": "address"
								}
							],
							"name": "getLenderBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "borrower",
									"type": "address"
								}
							],
							"name": "getLoanDetails",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "collateral",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "timestamp",
											"type": "uint256"
										},
										{
											"internalType": "bool",
											"name": "active",
											"type": "bool"
										}
									],
									"internalType": "struct CoreLoanPlatform.Loan",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTotalBorrowed",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTotalStaked",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getUserBorrowed",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getUserCollateral",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getUserStaked",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "lenderBalances",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "loans",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "collateral",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "active",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "repayLoan",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userCollateral",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawBTC",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawCollateral",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/CoreLoanPlatform.sol\":235:6920  contract CoreLoanPlatform is Ownable {... */\n  mstore(0x40, 0xc0)\n    /* \"contracts/CoreLoanPlatform.sol\":750:751  0 */\n  0x00\n    /* \"contracts/CoreLoanPlatform.sol\":720:751  uint256 private totalStaked = 0 */\n  0x01\n  sstore\n    /* \"contracts/CoreLoanPlatform.sol\":816:817  0 */\n  0x00\n    /* \"contracts/CoreLoanPlatform.sol\":784:817  uint256 private totalBorrowed = 0 */\n  0x02\n  sstore\n    /* \"contracts/CoreLoanPlatform.sol\":1624:1867  constructor(address _USD, address _BTC) Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/CoreLoanPlatform.sol\":1672:1682  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_7\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_11)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/CoreLoanPlatform.sol\":1731:1732  0 */\n  0x00\n    /* \"contracts/CoreLoanPlatform.sol\":1715:1733  _USD != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/CoreLoanPlatform.sol\":1715:1719  _USD */\n  dup3\n    /* \"contracts/CoreLoanPlatform.sol\":1715:1733  _USD != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n  iszero\n    /* \"contracts/CoreLoanPlatform.sol\":1715:1755  _USD != address(0) && _BTC != address(0) */\n  dup1\n  iszero\n  tag_13\n  jumpi\n  pop\n    /* \"contracts/CoreLoanPlatform.sol\":1753:1754  0 */\n  0x00\n    /* \"contracts/CoreLoanPlatform.sol\":1737:1755  _BTC != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/CoreLoanPlatform.sol\":1737:1741  _BTC */\n  dup2\n    /* \"contracts/CoreLoanPlatform.sol\":1737:1755  _BTC != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n  iszero\n    /* \"contracts/CoreLoanPlatform.sol\":1715:1755  _USD != address(0) && _BTC != address(0) */\ntag_13:\n    /* \"contracts/CoreLoanPlatform.sol\":1694:1804  require(... */\n  tag_14\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_15\n  swap1\n  tag_16\n  jump\t// in\ntag_15:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_14:\n    /* \"contracts/CoreLoanPlatform.sol\":1827:1831  _USD */\n  dup2\n    /* \"contracts/CoreLoanPlatform.sol\":1814:1832  USD = IERC20(_USD) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/CoreLoanPlatform.sol\":1855:1859  _BTC */\n  dup1\n    /* \"contracts/CoreLoanPlatform.sol\":1842:1860  BTC = IERC20(_BTC) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xa0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/CoreLoanPlatform.sol\":1624:1867  constructor(address _USD, address _BTC) Ownable(msg.sender) {... */\n  pop\n  pop\n    /* \"contracts/CoreLoanPlatform.sol\":235:6920  contract CoreLoanPlatform is Ownable {... */\n  jump(tag_17)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_20:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_22:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_23:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_36\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_22\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_24:\n    /* \"#utility.yul\":641:665   */\n  tag_38\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_23\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_39\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_39:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_25:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_41\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_24\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1352   */\ntag_3:\n    /* \"#utility.yul\":924:930   */\n  0x00\n    /* \"#utility.yul\":932:938   */\n  dup1\n    /* \"#utility.yul\":981:983   */\n  0x40\n    /* \"#utility.yul\":969:978   */\n  dup4\n    /* \"#utility.yul\":960:967   */\n  dup6\n    /* \"#utility.yul\":956:979   */\n  sub\n    /* \"#utility.yul\":952:984   */\n  slt\n    /* \"#utility.yul\":949:1068   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":987:1066   */\n  tag_44\n  tag_20\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":949:1068   */\ntag_43:\n    /* \"#utility.yul\":1107:1108   */\n  0x00\n    /* \"#utility.yul\":1132:1196   */\n  tag_45\n    /* \"#utility.yul\":1188:1195   */\n  dup6\n    /* \"#utility.yul\":1179:1185   */\n  dup3\n    /* \"#utility.yul\":1168:1177   */\n  dup7\n    /* \"#utility.yul\":1164:1186   */\n  add\n    /* \"#utility.yul\":1132:1196   */\n  tag_25\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":1122:1196   */\n  swap3\n  pop\n    /* \"#utility.yul\":1078:1206   */\n  pop\n    /* \"#utility.yul\":1245:1247   */\n  0x20\n    /* \"#utility.yul\":1271:1335   */\n  tag_46\n    /* \"#utility.yul\":1327:1334   */\n  dup6\n    /* \"#utility.yul\":1318:1324   */\n  dup3\n    /* \"#utility.yul\":1307:1316   */\n  dup7\n    /* \"#utility.yul\":1303:1325   */\n  add\n    /* \"#utility.yul\":1271:1335   */\n  tag_25\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":1261:1335   */\n  swap2\n  pop\n    /* \"#utility.yul\":1216:1345   */\n  pop\n    /* \"#utility.yul\":845:1352   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1358:1476   */\ntag_26:\n    /* \"#utility.yul\":1445:1469   */\n  tag_48\n    /* \"#utility.yul\":1463:1468   */\n  dup2\n    /* \"#utility.yul\":1445:1469   */\n  tag_23\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1440:1443   */\n  dup3\n    /* \"#utility.yul\":1433:1470   */\n  mstore\n    /* \"#utility.yul\":1358:1476   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1482:1704   */\ntag_9:\n    /* \"#utility.yul\":1575:1579   */\n  0x00\n    /* \"#utility.yul\":1613:1615   */\n  0x20\n    /* \"#utility.yul\":1602:1611   */\n  dup3\n    /* \"#utility.yul\":1598:1616   */\n  add\n    /* \"#utility.yul\":1590:1616   */\n  swap1\n  pop\n    /* \"#utility.yul\":1626:1697   */\n  tag_50\n    /* \"#utility.yul\":1694:1695   */\n  0x00\n    /* \"#utility.yul\":1683:1692   */\n  dup4\n    /* \"#utility.yul\":1679:1696   */\n  add\n    /* \"#utility.yul\":1670:1676   */\n  dup5\n    /* \"#utility.yul\":1626:1697   */\n  tag_26\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":1482:1704   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1710:1879   */\ntag_27:\n    /* \"#utility.yul\":1794:1805   */\n  0x00\n    /* \"#utility.yul\":1828:1834   */\n  dup3\n    /* \"#utility.yul\":1823:1826   */\n  dup3\n    /* \"#utility.yul\":1816:1835   */\n  mstore\n    /* \"#utility.yul\":1868:1872   */\n  0x20\n    /* \"#utility.yul\":1863:1866   */\n  dup3\n    /* \"#utility.yul\":1859:1873   */\n  add\n    /* \"#utility.yul\":1844:1873   */\n  swap1\n  pop\n    /* \"#utility.yul\":1710:1879   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1885:2058   */\ntag_28:\n    /* \"#utility.yul\":2025:2050   */\n  0x496e76616c696420746f6b656e20616464726573736573000000000000000000\n    /* \"#utility.yul\":2021:2022   */\n  0x00\n    /* \"#utility.yul\":2013:2019   */\n  dup3\n    /* \"#utility.yul\":2009:2023   */\n  add\n    /* \"#utility.yul\":2002:2051   */\n  mstore\n    /* \"#utility.yul\":1885:2058   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2064:2430   */\ntag_29:\n    /* \"#utility.yul\":2206:2209   */\n  0x00\n    /* \"#utility.yul\":2227:2294   */\n  tag_54\n    /* \"#utility.yul\":2291:2293   */\n  0x17\n    /* \"#utility.yul\":2286:2289   */\n  dup4\n    /* \"#utility.yul\":2227:2294   */\n  tag_27\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":2220:2294   */\n  swap2\n  pop\n    /* \"#utility.yul\":2303:2396   */\n  tag_55\n    /* \"#utility.yul\":2392:2395   */\n  dup3\n    /* \"#utility.yul\":2303:2396   */\n  tag_28\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":2421:2423   */\n  0x20\n    /* \"#utility.yul\":2416:2419   */\n  dup3\n    /* \"#utility.yul\":2412:2424   */\n  add\n    /* \"#utility.yul\":2405:2424   */\n  swap1\n  pop\n    /* \"#utility.yul\":2064:2430   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2436:2855   */\ntag_16:\n    /* \"#utility.yul\":2602:2606   */\n  0x00\n    /* \"#utility.yul\":2640:2642   */\n  0x20\n    /* \"#utility.yul\":2629:2638   */\n  dup3\n    /* \"#utility.yul\":2625:2643   */\n  add\n    /* \"#utility.yul\":2617:2643   */\n  swap1\n  pop\n    /* \"#utility.yul\":2689:2698   */\n  dup2\n    /* \"#utility.yul\":2683:2687   */\n  dup2\n    /* \"#utility.yul\":2679:2699   */\n  sub\n    /* \"#utility.yul\":2675:2676   */\n  0x00\n    /* \"#utility.yul\":2664:2673   */\n  dup4\n    /* \"#utility.yul\":2660:2677   */\n  add\n    /* \"#utility.yul\":2653:2700   */\n  mstore\n    /* \"#utility.yul\":2717:2848   */\n  tag_57\n    /* \"#utility.yul\":2843:2847   */\n  dup2\n    /* \"#utility.yul\":2717:2848   */\n  tag_29\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":2709:2848   */\n  swap1\n  pop\n    /* \"#utility.yul\":2436:2855   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"contracts/CoreLoanPlatform.sol\":235:6920  contract CoreLoanPlatform is Ownable {... */\ntag_17:\n  mload(0x80)\n  mload(0xa0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xceebc1e79b37113a3784d9bbf48b7ad015159a0fad39f370ddaba6e9581bdbc5\")\n  0x00\n  assignImmutable(\"0xb687940cdede3d6e24b115affb282228515a5bf2ffa7b65269e2dfb5ea745e96\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/CoreLoanPlatform.sol\":235:6920  contract CoreLoanPlatform is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xa6b6d798\n      gt\n      tag_31\n      jumpi\n      dup1\n      0xe02a4dfd\n      gt\n      tag_32\n      jumpi\n      dup1\n      0xe8a7da8e\n      gt\n      tag_33\n      jumpi\n      dup1\n      0xe8a7da8e\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xf4925de5\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xf69f1e4a\n      eq\n      tag_30\n      jumpi\n      jump(tag_2)\n    tag_33:\n      dup1\n      0xe02a4dfd\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xe11932cf\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xe86ef40b\n      eq\n      tag_26\n      jumpi\n      jump(tag_2)\n    tag_32:\n      dup1\n      0xbd09085a\n      gt\n      tag_34\n      jumpi\n      dup1\n      0xbd09085a\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xd1a40564\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xd9e69a05\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xdac3fc3f\n      eq\n      tag_23\n      jumpi\n      jump(tag_2)\n    tag_34:\n      dup1\n      0xa6b6d798\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xb6f7132f\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xbad4a01f\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_31:\n      dup1\n      0x691d1eb3\n      gt\n      tag_35\n      jumpi\n      dup1\n      0x73b4086b\n      gt\n      tag_36\n      jumpi\n      dup1\n      0x73b4086b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x90b4588b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa27a944d\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_36:\n      dup1\n      0x691d1eb3\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x6e35f124\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_35:\n      dup1\n      0x1bf6c21b\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x1bf6c21b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x2792949d\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x5b72a33a\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x6112fe2e\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_37:\n      dup1\n      0x0307c4a1\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0917e776\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x190ef1e6\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/CoreLoanPlatform.sol\":6609:6706  function getTotalBorrowed() external view returns (uint256) {... */\n    tag_3:\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CoreLoanPlatform.sol\":6510:6603  function getTotalStaked() external view returns (uint256) {... */\n    tag_4:\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CoreLoanPlatform.sol\":5139:5790  function repayLoan(address user) external {... */\n    tag_5:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n    tag_45:\n      stop\n        /* \"contracts/CoreLoanPlatform.sol\":311:338  IERC20 public immutable USD */\n    tag_6:\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CoreLoanPlatform.sol\":344:371  IERC20 public immutable BTC */\n    tag_7:\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CoreLoanPlatform.sol\":544:585  uint256 public constant INTEREST_RATE = 5 */\n    tag_8:\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CoreLoanPlatform.sol\":2165:2897  function withdrawCollateral(uint256 amount) external {... */\n    tag_9:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      tag_62\n      jump\t// in\n    tag_59:\n      stop\n        /* \"contracts/CoreLoanPlatform.sol\":3940:4086  function getBorrowableAmount(address user) external view returns (uint256) {... */\n    tag_10:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_64:\n      tag_65\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CoreLoanPlatform.sol\":456:501  uint256 public constant BORROWABLE_RATIO = 80 */\n    tag_11:\n      tag_67\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_12:\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n      stop\n        /* \"contracts/CoreLoanPlatform.sol\":978:1015  mapping(address => Loan) public loans */\n    tag_13:\n      tag_72\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_73\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_73:\n      tag_74\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      tag_75\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_14:\n      tag_77\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CoreLoanPlatform.sol\":4537:4914  function withdrawBTC(uint256 amount) external {... */\n    tag_15:\n      tag_81\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_82\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_82:\n      tag_83\n      jump\t// in\n    tag_81:\n      stop\n        /* \"contracts/CoreLoanPlatform.sol\":1076:1125  mapping(address => uint256) public lenderBalances */\n    tag_16:\n      tag_84\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_85\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_85:\n      tag_86\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      tag_87\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CoreLoanPlatform.sol\":4215:4531  function depositBTC(uint256 amount) external {... */\n    tag_17:\n      tag_88\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_89\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_89:\n      tag_90\n      jump\t// in\n    tag_88:\n      stop\n        /* \"contracts/CoreLoanPlatform.sol\":4092:4209  function getUserCollateral(address user) external view returns (uint256) {... */\n    tag_18:\n      tag_91\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_92\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_92:\n      tag_93\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      tag_94\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CoreLoanPlatform.sol\":1873:2159  function depositCollateral(uint256 amount) external {... */\n    tag_19:\n      tag_95\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_96\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_96:\n      tag_97\n      jump\t// in\n    tag_95:\n      stop\n        /* \"contracts/CoreLoanPlatform.sol\":6384:6504  function getLenderBalance(address lender) external view returns (uint256) {... */\n    tag_20:\n      tag_98\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_99\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_99:\n      tag_100\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      tag_101\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CoreLoanPlatform.sol\":2903:3934  function borrowBTC(uint256 amount) external {... */\n    tag_21:\n      tag_102\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_103\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_103:\n      tag_104\n      jump\t// in\n    tag_102:\n      stop\n        /* \"contracts/CoreLoanPlatform.sol\":378:424  uint256 public constant COLLATERAL_RATIO = 150 */\n    tag_22:\n      tag_105\n      tag_106\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      tag_107\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CoreLoanPlatform.sol\":4920:5033  function getUserStaked(address user) external view returns (uint256) {... */\n    tag_23:\n      tag_108\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_109\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_109:\n      tag_110\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      tag_111\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CoreLoanPlatform.sol\":611:658  uint256 public constant LOAN_DURATION = 30 days */\n    tag_24:\n      tag_112\n      tag_113\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      tag_114\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CoreLoanPlatform.sol\":5796:6227  function calculateInterest(address user) external view returns (uint256) {... */\n    tag_25:\n      tag_115\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_116\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_116:\n      tag_117\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      tag_118\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CoreLoanPlatform.sol\":6712:6918  function getUserBorrowed(address user) external view returns (uint256) {... */\n    tag_26:\n      tag_119\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_120\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_120:\n      tag_121\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      tag_122\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CoreLoanPlatform.sol\":6233:6378  function getLoanDetails(address borrower)... */\n    tag_27:\n      tag_123\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_124\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_124:\n      tag_125\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      tag_126\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_28:\n      tag_128\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_129\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_129:\n      tag_130\n      jump\t// in\n    tag_128:\n      stop\n        /* \"contracts/CoreLoanPlatform.sol\":5039:5133  function getCurrentApy() external pure returns (uint256) {... */\n    tag_29:\n      tag_131\n      tag_132\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      tag_133\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CoreLoanPlatform.sol\":1021:1070  mapping(address => uint256) public userCollateral */\n    tag_30:\n      tag_134\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_135\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_135:\n      tag_136\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      tag_137\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_137:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CoreLoanPlatform.sol\":6609:6706  function getTotalBorrowed() external view returns (uint256) {... */\n    tag_39:\n        /* \"contracts/CoreLoanPlatform.sol\":6660:6667  uint256 */\n      0x00\n        /* \"contracts/CoreLoanPlatform.sol\":6686:6699  totalBorrowed */\n      sload(0x02)\n        /* \"contracts/CoreLoanPlatform.sol\":6679:6699  return totalBorrowed */\n      swap1\n      pop\n        /* \"contracts/CoreLoanPlatform.sol\":6609:6706  function getTotalBorrowed() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CoreLoanPlatform.sol\":6510:6603  function getTotalStaked() external view returns (uint256) {... */\n    tag_43:\n        /* \"contracts/CoreLoanPlatform.sol\":6559:6566  uint256 */\n      0x00\n        /* \"contracts/CoreLoanPlatform.sol\":6585:6596  totalStaked */\n      sload(0x01)\n        /* \"contracts/CoreLoanPlatform.sol\":6578:6596  return totalStaked */\n      swap1\n      pop\n        /* \"contracts/CoreLoanPlatform.sol\":6510:6603  function getTotalStaked() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CoreLoanPlatform.sol\":5139:5790  function repayLoan(address user) external {... */\n    tag_48:\n        /* \"contracts/CoreLoanPlatform.sol\":5191:5208  Loan storage loan */\n      0x00\n        /* \"contracts/CoreLoanPlatform.sol\":5211:5216  loans */\n      0x03\n        /* \"contracts/CoreLoanPlatform.sol\":5211:5222  loans[user] */\n      0x00\n        /* \"contracts/CoreLoanPlatform.sol\":5217:5221  user */\n      dup4\n        /* \"contracts/CoreLoanPlatform.sol\":5211:5222  loans[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/CoreLoanPlatform.sol\":5191:5222  Loan storage loan = loans[user] */\n      swap1\n      pop\n        /* \"contracts/CoreLoanPlatform.sol\":5240:5244  loan */\n      dup1\n        /* \"contracts/CoreLoanPlatform.sol\":5240:5251  loan.active */\n      0x03\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/CoreLoanPlatform.sol\":5232:5270  require(loan.active, \"No active loan\") */\n      tag_141\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_142\n      swap1\n      tag_143\n      jump\t// in\n    tag_142:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_141:\n        /* \"contracts/CoreLoanPlatform.sol\":5280:5299  uint256 daysElapsed */\n      0x00\n        /* \"contracts/CoreLoanPlatform.sol\":708:713  86400 */\n      0x015180\n        /* \"contracts/CoreLoanPlatform.sol\":5321:5325  loan */\n      dup3\n        /* \"contracts/CoreLoanPlatform.sol\":5321:5335  loan.timestamp */\n      0x02\n      add\n      sload\n        /* \"contracts/CoreLoanPlatform.sol\":5303:5318  block.timestamp */\n      timestamp\n        /* \"contracts/CoreLoanPlatform.sol\":5303:5335  block.timestamp - loan.timestamp */\n      tag_144\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_144:\n        /* \"contracts/CoreLoanPlatform.sol\":5302:5367  (block.timestamp - loan.timestamp) /... */\n      tag_146\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_146:\n        /* \"contracts/CoreLoanPlatform.sol\":5280:5367  uint256 daysElapsed = (block.timestamp - loan.timestamp) /... */\n      swap1\n      pop\n        /* \"contracts/CoreLoanPlatform.sol\":5400:5402  30 */\n      0x1e\n        /* \"contracts/CoreLoanPlatform.sol\":5385:5396  daysElapsed */\n      dup2\n        /* \"contracts/CoreLoanPlatform.sol\":5385:5402  daysElapsed <= 30 */\n      gt\n      iszero\n        /* \"contracts/CoreLoanPlatform.sol\":5377:5437  require(daysElapsed <= 30, \"Loan duration exceeded 30 days\") */\n      tag_148\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_149\n      swap1\n      tag_150\n      jump\t// in\n    tag_149:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_148:\n        /* \"contracts/CoreLoanPlatform.sol\":5447:5463  uint256 interest */\n      0x00\n        /* \"contracts/CoreLoanPlatform.sol\":5512:5517  36500 */\n      0x8e94\n        /* \"contracts/CoreLoanPlatform.sol\":5497:5508  daysElapsed */\n      dup3\n        /* \"contracts/CoreLoanPlatform.sol\":584:585  5 */\n      0x05\n        /* \"contracts/CoreLoanPlatform.sol\":5467:5471  loan */\n      dup6\n        /* \"contracts/CoreLoanPlatform.sol\":5467:5478  loan.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/CoreLoanPlatform.sol\":5467:5494  loan.amount * INTEREST_RATE */\n      tag_151\n      swap2\n      swap1\n      tag_152\n      jump\t// in\n    tag_151:\n        /* \"contracts/CoreLoanPlatform.sol\":5467:5508  loan.amount * INTEREST_RATE * daysElapsed */\n      tag_153\n      swap2\n      swap1\n      tag_152\n      jump\t// in\n    tag_153:\n        /* \"contracts/CoreLoanPlatform.sol\":5466:5517  (loan.amount * INTEREST_RATE * daysElapsed) / 36500 */\n      tag_154\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_154:\n        /* \"contracts/CoreLoanPlatform.sol\":5447:5517  uint256 interest = (loan.amount * INTEREST_RATE * daysElapsed) / 36500 */\n      swap1\n      pop\n        /* \"contracts/CoreLoanPlatform.sol\":5527:5549  uint256 totalRepayment */\n      0x00\n        /* \"contracts/CoreLoanPlatform.sol\":5566:5574  interest */\n      dup2\n        /* \"contracts/CoreLoanPlatform.sol\":5552:5556  loan */\n      dup5\n        /* \"contracts/CoreLoanPlatform.sol\":5552:5563  loan.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/CoreLoanPlatform.sol\":5552:5574  loan.amount + interest */\n      tag_155\n      swap2\n      swap1\n      tag_156\n      jump\t// in\n    tag_155:\n        /* \"contracts/CoreLoanPlatform.sol\":5527:5574  uint256 totalRepayment = loan.amount + interest */\n      swap1\n      pop\n        /* \"contracts/CoreLoanPlatform.sol\":5584:5641  BTC.safeTransferFrom(user, address(this), totalRepayment) */\n      tag_157\n        /* \"contracts/CoreLoanPlatform.sol\":5605:5609  user */\n      dup6\n        /* \"contracts/CoreLoanPlatform.sol\":5619:5623  this */\n      address\n        /* \"contracts/CoreLoanPlatform.sol\":5626:5640  totalRepayment */\n      dup4\n        /* \"contracts/CoreLoanPlatform.sol\":5584:5587  BTC */\n      immutable(\"0xceebc1e79b37113a3784d9bbf48b7ad015159a0fad39f370ddaba6e9581bdbc5\")\n        /* \"contracts/CoreLoanPlatform.sol\":5584:5604  BTC.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_158\n      swap1\n        /* \"contracts/CoreLoanPlatform.sol\":5584:5641  BTC.safeTransferFrom(user, address(this), totalRepayment) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_157:\n        /* \"contracts/CoreLoanPlatform.sol\":5665:5670  false */\n      0x00\n        /* \"contracts/CoreLoanPlatform.sol\":5651:5655  loan */\n      dup5\n        /* \"contracts/CoreLoanPlatform.sol\":5651:5662  loan.active */\n      0x03\n      add\n      0x00\n        /* \"contracts/CoreLoanPlatform.sol\":5651:5670  loan.active = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/CoreLoanPlatform.sol\":5712:5716  loan */\n      dup4\n        /* \"contracts/CoreLoanPlatform.sol\":5712:5723  loan.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/CoreLoanPlatform.sol\":5696:5709  totalBorrowed */\n      sload(0x02)\n        /* \"contracts/CoreLoanPlatform.sol\":5696:5723  totalBorrowed - loan.amount */\n      tag_159\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_159:\n        /* \"contracts/CoreLoanPlatform.sol\":5680:5693  totalBorrowed */\n      0x02\n        /* \"contracts/CoreLoanPlatform.sol\":5680:5723  totalBorrowed = totalBorrowed - loan.amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CoreLoanPlatform.sol\":5749:5759  msg.sender */\n      caller\n        /* \"contracts/CoreLoanPlatform.sol\":5738:5783  LoanRepaid(msg.sender, loan.amount, interest) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc7ce0a35f17b490de2a317e7fecb2cae86b1abffb03800b2f492823521382698\n        /* \"contracts/CoreLoanPlatform.sol\":5761:5765  loan */\n      dup6\n        /* \"contracts/CoreLoanPlatform.sol\":5761:5772  loan.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/CoreLoanPlatform.sol\":5774:5782  interest */\n      dup5\n        /* \"contracts/CoreLoanPlatform.sol\":5738:5783  LoanRepaid(msg.sender, loan.amount, interest) */\n      mload(0x40)\n      tag_160\n      swap3\n      swap2\n      swap1\n      tag_161\n      jump\t// in\n    tag_160:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/CoreLoanPlatform.sol\":5181:5790  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/CoreLoanPlatform.sol\":5139:5790  function repayLoan(address user) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/CoreLoanPlatform.sol\":311:338  IERC20 public immutable USD */\n    tag_50:\n      immutable(\"0xb687940cdede3d6e24b115affb282228515a5bf2ffa7b65269e2dfb5ea745e96\")\n      dup2\n      jump\t// out\n        /* \"contracts/CoreLoanPlatform.sol\":344:371  IERC20 public immutable BTC */\n    tag_54:\n      immutable(\"0xceebc1e79b37113a3784d9bbf48b7ad015159a0fad39f370ddaba6e9581bdbc5\")\n      dup2\n      jump\t// out\n        /* \"contracts/CoreLoanPlatform.sol\":544:585  uint256 public constant INTEREST_RATE = 5 */\n    tag_57:\n        /* \"contracts/CoreLoanPlatform.sol\":584:585  5 */\n      0x05\n        /* \"contracts/CoreLoanPlatform.sol\":544:585  uint256 public constant INTEREST_RATE = 5 */\n      dup2\n      jump\t// out\n        /* \"contracts/CoreLoanPlatform.sol\":2165:2897  function withdrawCollateral(uint256 amount) external {... */\n    tag_62:\n        /* \"contracts/CoreLoanPlatform.sol\":2245:2246  0 */\n      0x00\n        /* \"contracts/CoreLoanPlatform.sol\":2236:2242  amount */\n      dup2\n        /* \"contracts/CoreLoanPlatform.sol\":2236:2246  amount > 0 */\n      gt\n        /* \"contracts/CoreLoanPlatform.sol\":2228:2280  require(amount > 0, \"Amount must be greater than 0\") */\n      tag_163\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_164\n      swap1\n      tag_165\n      jump\t// in\n    tag_164:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_163:\n        /* \"contracts/CoreLoanPlatform.sol\":2341:2347  amount */\n      dup1\n        /* \"contracts/CoreLoanPlatform.sol\":2311:2325  userCollateral */\n      0x04\n        /* \"contracts/CoreLoanPlatform.sol\":2311:2337  userCollateral[msg.sender] */\n      0x00\n        /* \"contracts/CoreLoanPlatform.sol\":2326:2336  msg.sender */\n      caller\n        /* \"contracts/CoreLoanPlatform.sol\":2311:2337  userCollateral[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/CoreLoanPlatform.sol\":2311:2347  userCollateral[msg.sender] >= amount */\n      lt\n      iszero\n        /* \"contracts/CoreLoanPlatform.sol\":2290:2396  require(... */\n      tag_166\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_167\n      swap1\n      tag_168\n      jump\t// in\n    tag_167:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_166:\n        /* \"contracts/CoreLoanPlatform.sol\":2406:2428  uint256 borrowedAmount */\n      0x00\n        /* \"contracts/CoreLoanPlatform.sol\":2431:2436  loans */\n      0x03\n        /* \"contracts/CoreLoanPlatform.sol\":2431:2448  loans[msg.sender] */\n      0x00\n        /* \"contracts/CoreLoanPlatform.sol\":2437:2447  msg.sender */\n      caller\n        /* \"contracts/CoreLoanPlatform.sol\":2431:2448  loans[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/CoreLoanPlatform.sol\":2431:2455  loans[msg.sender].active */\n      0x03\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/CoreLoanPlatform.sol\":2431:2510  loans[msg.sender].active... */\n      tag_169\n      jumpi\n        /* \"contracts/CoreLoanPlatform.sol\":2509:2510  0 */\n      0x00\n        /* \"contracts/CoreLoanPlatform.sol\":2431:2510  loans[msg.sender].active... */\n      jump(tag_170)\n    tag_169:\n        /* \"contracts/CoreLoanPlatform.sol\":2470:2475  loans */\n      0x03\n        /* \"contracts/CoreLoanPlatform.sol\":2470:2487  loans[msg.sender] */\n      0x00\n        /* \"contracts/CoreLoanPlatform.sol\":2476:2486  msg.sender */\n      caller\n        /* \"contracts/CoreLoanPlatform.sol\":2470:2487  loans[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/CoreLoanPlatform.sol\":2470:2494  loans[msg.sender].amount */\n      0x00\n      add\n      sload\n        /* \"contracts/CoreLoanPlatform.sol\":2431:2510  loans[msg.sender].active... */\n    tag_170:\n        /* \"contracts/CoreLoanPlatform.sol\":2406:2510  uint256 borrowedAmount = loans[msg.sender].active... */\n      swap1\n      pop\n        /* \"contracts/CoreLoanPlatform.sol\":2520:2546  uint256 requiredCollateral */\n      0x00\n        /* \"contracts/CoreLoanPlatform.sol\":2587:2590  100 */\n      0x64\n        /* \"contracts/CoreLoanPlatform.sol\":421:424  150 */\n      0x96\n        /* \"contracts/CoreLoanPlatform.sol\":2550:2564  borrowedAmount */\n      dup4\n        /* \"contracts/CoreLoanPlatform.sol\":2550:2583  borrowedAmount * COLLATERAL_RATIO */\n      tag_171\n      swap2\n      swap1\n      tag_152\n      jump\t// in\n    tag_171:\n        /* \"contracts/CoreLoanPlatform.sol\":2549:2590  (borrowedAmount * COLLATERAL_RATIO) / 100 */\n      tag_172\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_172:\n        /* \"contracts/CoreLoanPlatform.sol\":2520:2590  uint256 requiredCollateral = (borrowedAmount * COLLATERAL_RATIO) / 100 */\n      swap1\n      pop\n        /* \"contracts/CoreLoanPlatform.sol\":2660:2678  requiredCollateral */\n      dup1\n        /* \"contracts/CoreLoanPlatform.sol\":2650:2656  amount */\n      dup4\n        /* \"contracts/CoreLoanPlatform.sol\":2621:2635  userCollateral */\n      0x04\n        /* \"contracts/CoreLoanPlatform.sol\":2621:2647  userCollateral[msg.sender] */\n      0x00\n        /* \"contracts/CoreLoanPlatform.sol\":2636:2646  msg.sender */\n      caller\n        /* \"contracts/CoreLoanPlatform.sol\":2621:2647  userCollateral[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/CoreLoanPlatform.sol\":2621:2656  userCollateral[msg.sender] - amount */\n      tag_173\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_173:\n        /* \"contracts/CoreLoanPlatform.sol\":2621:2678  userCollateral[msg.sender] - amount >= requiredCollateral */\n      lt\n      iszero\n        /* \"contracts/CoreLoanPlatform.sol\":2600:2744  require(... */\n      tag_174\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_175\n      swap1\n      tag_176\n      jump\t// in\n    tag_175:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_174:\n        /* \"contracts/CoreLoanPlatform.sol\":2784:2790  amount */\n      dup3\n        /* \"contracts/CoreLoanPlatform.sol\":2754:2768  userCollateral */\n      0x04\n        /* \"contracts/CoreLoanPlatform.sol\":2754:2780  userCollateral[msg.sender] */\n      0x00\n        /* \"contracts/CoreLoanPlatform.sol\":2769:2779  msg.sender */\n      caller\n        /* \"contracts/CoreLoanPlatform.sol\":2754:2780  userCollateral[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/CoreLoanPlatform.sol\":2754:2790  userCollateral[msg.sender] -= amount */\n      dup3\n      dup3\n      sload\n      tag_177\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_177:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CoreLoanPlatform.sol\":2800:2836  USD.safeTransfer(msg.sender, amount) */\n      tag_178\n        /* \"contracts/CoreLoanPlatform.sol\":2817:2827  msg.sender */\n      caller\n        /* \"contracts/CoreLoanPlatform.sol\":2829:2835  amount */\n      dup5\n        /* \"contracts/CoreLoanPlatform.sol\":2800:2803  USD */\n      immutable(\"0xb687940cdede3d6e24b115affb282228515a5bf2ffa7b65269e2dfb5ea745e96\")\n        /* \"contracts/CoreLoanPlatform.sol\":2800:2816  USD.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_179\n      swap1\n        /* \"contracts/CoreLoanPlatform.sol\":2800:2836  USD.safeTransfer(msg.sender, amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_178:\n        /* \"contracts/CoreLoanPlatform.sol\":2871:2881  msg.sender */\n      caller\n        /* \"contracts/CoreLoanPlatform.sol\":2851:2890  CollateralWithdrawn(msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc30fcfbcaac9e0deffa719714eaa82396ff506a0d0d0eebe170830177288715d\n        /* \"contracts/CoreLoanPlatform.sol\":2883:2889  amount */\n      dup5\n        /* \"contracts/CoreLoanPlatform.sol\":2851:2890  CollateralWithdrawn(msg.sender, amount) */\n      mload(0x40)\n      tag_180\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_180:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/CoreLoanPlatform.sol\":2218:2897  {... */\n      pop\n      pop\n        /* \"contracts/CoreLoanPlatform.sol\":2165:2897  function withdrawCollateral(uint256 amount) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/CoreLoanPlatform.sol\":3940:4086  function getBorrowableAmount(address user) external view returns (uint256) {... */\n    tag_65:\n        /* \"contracts/CoreLoanPlatform.sol\":4006:4013  uint256 */\n      0x00\n        /* \"contracts/CoreLoanPlatform.sol\":4076:4079  100 */\n      0x64\n        /* \"contracts/CoreLoanPlatform.sol\":499:501  80 */\n      0x50\n        /* \"contracts/CoreLoanPlatform.sol\":4033:4047  userCollateral */\n      0x04\n        /* \"contracts/CoreLoanPlatform.sol\":4033:4053  userCollateral[user] */\n      0x00\n        /* \"contracts/CoreLoanPlatform.sol\":4048:4052  user */\n      dup6\n        /* \"contracts/CoreLoanPlatform.sol\":4033:4053  userCollateral[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/CoreLoanPlatform.sol\":4033:4072  userCollateral[user] * BORROWABLE_RATIO */\n      tag_182\n      swap2\n      swap1\n      tag_152\n      jump\t// in\n    tag_182:\n        /* \"contracts/CoreLoanPlatform.sol\":4032:4079  (userCollateral[user] * BORROWABLE_RATIO) / 100 */\n      tag_183\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_183:\n        /* \"contracts/CoreLoanPlatform.sol\":4025:4079  return (userCollateral[user] * BORROWABLE_RATIO) / 100 */\n      swap1\n      pop\n        /* \"contracts/CoreLoanPlatform.sol\":3940:4086  function getBorrowableAmount(address user) external view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/CoreLoanPlatform.sol\":456:501  uint256 public constant BORROWABLE_RATIO = 80 */\n    tag_68:\n        /* \"contracts/CoreLoanPlatform.sol\":499:501  80 */\n      0x50\n        /* \"contracts/CoreLoanPlatform.sol\":456:501  uint256 public constant BORROWABLE_RATIO = 80 */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_185\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_186\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_185:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_188\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_189\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_188:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/CoreLoanPlatform.sol\":978:1015  mapping(address => Loan) public loans */\n    tag_74:\n      mstore(0x20, 0x03)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      pop\n      dup5\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_78:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CoreLoanPlatform.sol\":4537:4914  function withdrawBTC(uint256 amount) external {... */\n    tag_83:\n        /* \"contracts/CoreLoanPlatform.sol\":4610:4611  0 */\n      0x00\n        /* \"contracts/CoreLoanPlatform.sol\":4601:4607  amount */\n      dup2\n        /* \"contracts/CoreLoanPlatform.sol\":4601:4611  amount > 0 */\n      gt\n        /* \"contracts/CoreLoanPlatform.sol\":4593:4645  require(amount > 0, \"Amount must be greater than 0\") */\n      tag_192\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_165\n      jump\t// in\n    tag_193:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_192:\n        /* \"contracts/CoreLoanPlatform.sol\":4693:4699  amount */\n      dup1\n        /* \"contracts/CoreLoanPlatform.sol\":4663:4677  lenderBalances */\n      0x05\n        /* \"contracts/CoreLoanPlatform.sol\":4663:4689  lenderBalances[msg.sender] */\n      0x00\n        /* \"contracts/CoreLoanPlatform.sol\":4678:4688  msg.sender */\n      caller\n        /* \"contracts/CoreLoanPlatform.sol\":4663:4689  lenderBalances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/CoreLoanPlatform.sol\":4663:4699  lenderBalances[msg.sender] >= amount */\n      lt\n      iszero\n        /* \"contracts/CoreLoanPlatform.sol\":4655:4724  require(lenderBalances[msg.sender] >= amount, \"Insufficient balance\") */\n      tag_194\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_195\n      swap1\n      tag_196\n      jump\t// in\n    tag_195:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_194:\n        /* \"contracts/CoreLoanPlatform.sol\":4764:4770  amount */\n      dup1\n        /* \"contracts/CoreLoanPlatform.sol\":4734:4748  lenderBalances */\n      0x05\n        /* \"contracts/CoreLoanPlatform.sol\":4734:4760  lenderBalances[msg.sender] */\n      0x00\n        /* \"contracts/CoreLoanPlatform.sol\":4749:4759  msg.sender */\n      caller\n        /* \"contracts/CoreLoanPlatform.sol\":4734:4760  lenderBalances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/CoreLoanPlatform.sol\":4734:4770  lenderBalances[msg.sender] -= amount */\n      dup3\n      dup3\n      sload\n      tag_197\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_197:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CoreLoanPlatform.sol\":4808:4814  amount */\n      dup1\n        /* \"contracts/CoreLoanPlatform.sol\":4794:4805  totalStaked */\n      sload(0x01)\n        /* \"contracts/CoreLoanPlatform.sol\":4794:4814  totalStaked - amount */\n      tag_198\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_198:\n        /* \"contracts/CoreLoanPlatform.sol\":4780:4791  totalStaked */\n      0x01\n        /* \"contracts/CoreLoanPlatform.sol\":4780:4814  totalStaked = totalStaked - amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CoreLoanPlatform.sol\":4824:4860  BTC.safeTransfer(msg.sender, amount) */\n      tag_199\n        /* \"contracts/CoreLoanPlatform.sol\":4841:4851  msg.sender */\n      caller\n        /* \"contracts/CoreLoanPlatform.sol\":4853:4859  amount */\n      dup3\n        /* \"contracts/CoreLoanPlatform.sol\":4824:4827  BTC */\n      immutable(\"0xceebc1e79b37113a3784d9bbf48b7ad015159a0fad39f370ddaba6e9581bdbc5\")\n        /* \"contracts/CoreLoanPlatform.sol\":4824:4840  BTC.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_179\n      swap1\n        /* \"contracts/CoreLoanPlatform.sol\":4824:4860  BTC.safeTransfer(msg.sender, amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_199:\n        /* \"contracts/CoreLoanPlatform.sol\":4888:4898  msg.sender */\n      caller\n        /* \"contracts/CoreLoanPlatform.sol\":4875:4907  BTCWithdrawn(msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x46cb947848d6e66f42fd865aff4e0b9765da557ed05874db5a3c931ccea58ef1\n        /* \"contracts/CoreLoanPlatform.sol\":4900:4906  amount */\n      dup3\n        /* \"contracts/CoreLoanPlatform.sol\":4875:4907  BTCWithdrawn(msg.sender, amount) */\n      mload(0x40)\n      tag_200\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_200:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/CoreLoanPlatform.sol\":4537:4914  function withdrawBTC(uint256 amount) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/CoreLoanPlatform.sol\":1076:1125  mapping(address => uint256) public lenderBalances */\n    tag_86:\n      mstore(0x20, 0x05)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/CoreLoanPlatform.sol\":4215:4531  function depositBTC(uint256 amount) external {... */\n    tag_90:\n        /* \"contracts/CoreLoanPlatform.sol\":4287:4288  0 */\n      0x00\n        /* \"contracts/CoreLoanPlatform.sol\":4278:4284  amount */\n      dup2\n        /* \"contracts/CoreLoanPlatform.sol\":4278:4288  amount > 0 */\n      gt\n        /* \"contracts/CoreLoanPlatform.sol\":4270:4322  require(amount > 0, \"Amount must be greater than 0\") */\n      tag_202\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_203\n      swap1\n      tag_165\n      jump\t// in\n    tag_203:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_202:\n        /* \"contracts/CoreLoanPlatform.sol\":4332:4387  BTC.safeTransferFrom(msg.sender, address(this), amount) */\n      tag_204\n        /* \"contracts/CoreLoanPlatform.sol\":4353:4363  msg.sender */\n      caller\n        /* \"contracts/CoreLoanPlatform.sol\":4373:4377  this */\n      address\n        /* \"contracts/CoreLoanPlatform.sol\":4380:4386  amount */\n      dup4\n        /* \"contracts/CoreLoanPlatform.sol\":4332:4335  BTC */\n      immutable(\"0xceebc1e79b37113a3784d9bbf48b7ad015159a0fad39f370ddaba6e9581bdbc5\")\n        /* \"contracts/CoreLoanPlatform.sol\":4332:4352  BTC.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_158\n      swap1\n        /* \"contracts/CoreLoanPlatform.sol\":4332:4387  BTC.safeTransferFrom(msg.sender, address(this), amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_204:\n        /* \"contracts/CoreLoanPlatform.sol\":4427:4433  amount */\n      dup1\n        /* \"contracts/CoreLoanPlatform.sol\":4397:4411  lenderBalances */\n      0x05\n        /* \"contracts/CoreLoanPlatform.sol\":4397:4423  lenderBalances[msg.sender] */\n      0x00\n        /* \"contracts/CoreLoanPlatform.sol\":4412:4422  msg.sender */\n      caller\n        /* \"contracts/CoreLoanPlatform.sol\":4397:4423  lenderBalances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/CoreLoanPlatform.sol\":4397:4433  lenderBalances[msg.sender] += amount */\n      dup3\n      dup3\n      sload\n      tag_205\n      swap2\n      swap1\n      tag_156\n      jump\t// in\n    tag_205:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CoreLoanPlatform.sol\":4471:4477  amount */\n      dup1\n        /* \"contracts/CoreLoanPlatform.sol\":4457:4468  totalStaked */\n      sload(0x01)\n        /* \"contracts/CoreLoanPlatform.sol\":4457:4477  totalStaked + amount */\n      tag_206\n      swap2\n      swap1\n      tag_156\n      jump\t// in\n    tag_206:\n        /* \"contracts/CoreLoanPlatform.sol\":4443:4454  totalStaked */\n      0x01\n        /* \"contracts/CoreLoanPlatform.sol\":4443:4477  totalStaked = totalStaked + amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CoreLoanPlatform.sol\":4505:4515  msg.sender */\n      caller\n        /* \"contracts/CoreLoanPlatform.sol\":4492:4524  BTCDeposited(msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc876900062bf6768530bd9be84c146f5c051f4a50a5bf7fbcdd9ed4c8fb154\n        /* \"contracts/CoreLoanPlatform.sol\":4517:4523  amount */\n      dup3\n        /* \"contracts/CoreLoanPlatform.sol\":4492:4524  BTCDeposited(msg.sender, amount) */\n      mload(0x40)\n      tag_207\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_207:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/CoreLoanPlatform.sol\":4215:4531  function depositBTC(uint256 amount) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/CoreLoanPlatform.sol\":4092:4209  function getUserCollateral(address user) external view returns (uint256) {... */\n    tag_93:\n        /* \"contracts/CoreLoanPlatform.sol\":4156:4163  uint256 */\n      0x00\n        /* \"contracts/CoreLoanPlatform.sol\":4182:4196  userCollateral */\n      0x04\n        /* \"contracts/CoreLoanPlatform.sol\":4182:4202  userCollateral[user] */\n      0x00\n        /* \"contracts/CoreLoanPlatform.sol\":4197:4201  user */\n      dup4\n        /* \"contracts/CoreLoanPlatform.sol\":4182:4202  userCollateral[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/CoreLoanPlatform.sol\":4175:4202  return userCollateral[user] */\n      swap1\n      pop\n        /* \"contracts/CoreLoanPlatform.sol\":4092:4209  function getUserCollateral(address user) external view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/CoreLoanPlatform.sol\":1873:2159  function depositCollateral(uint256 amount) external {... */\n    tag_97:\n        /* \"contracts/CoreLoanPlatform.sol\":1952:1953  0 */\n      0x00\n        /* \"contracts/CoreLoanPlatform.sol\":1943:1949  amount */\n      dup2\n        /* \"contracts/CoreLoanPlatform.sol\":1943:1953  amount > 0 */\n      gt\n        /* \"contracts/CoreLoanPlatform.sol\":1935:1987  require(amount > 0, \"Amount must be greater than 0\") */\n      tag_210\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_211\n      swap1\n      tag_165\n      jump\t// in\n    tag_211:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_210:\n        /* \"contracts/CoreLoanPlatform.sol\":1997:2052  USD.safeTransferFrom(msg.sender, address(this), amount) */\n      tag_212\n        /* \"contracts/CoreLoanPlatform.sol\":2018:2028  msg.sender */\n      caller\n        /* \"contracts/CoreLoanPlatform.sol\":2038:2042  this */\n      address\n        /* \"contracts/CoreLoanPlatform.sol\":2045:2051  amount */\n      dup4\n        /* \"contracts/CoreLoanPlatform.sol\":1997:2000  USD */\n      immutable(\"0xb687940cdede3d6e24b115affb282228515a5bf2ffa7b65269e2dfb5ea745e96\")\n        /* \"contracts/CoreLoanPlatform.sol\":1997:2017  USD.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_158\n      swap1\n        /* \"contracts/CoreLoanPlatform.sol\":1997:2052  USD.safeTransferFrom(msg.sender, address(this), amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_212:\n        /* \"contracts/CoreLoanPlatform.sol\":2092:2098  amount */\n      dup1\n        /* \"contracts/CoreLoanPlatform.sol\":2062:2076  userCollateral */\n      0x04\n        /* \"contracts/CoreLoanPlatform.sol\":2062:2088  userCollateral[msg.sender] */\n      0x00\n        /* \"contracts/CoreLoanPlatform.sol\":2077:2087  msg.sender */\n      caller\n        /* \"contracts/CoreLoanPlatform.sol\":2062:2088  userCollateral[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/CoreLoanPlatform.sol\":2062:2098  userCollateral[msg.sender] += amount */\n      dup3\n      dup3\n      sload\n      tag_213\n      swap2\n      swap1\n      tag_156\n      jump\t// in\n    tag_213:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CoreLoanPlatform.sol\":2133:2143  msg.sender */\n      caller\n        /* \"contracts/CoreLoanPlatform.sol\":2113:2152  CollateralDeposited(msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd7243f6f8212d5188fd054141cf6ea89cfc0d91facb8c3afe2f88a1358480142\n        /* \"contracts/CoreLoanPlatform.sol\":2145:2151  amount */\n      dup3\n        /* \"contracts/CoreLoanPlatform.sol\":2113:2152  CollateralDeposited(msg.sender, amount) */\n      mload(0x40)\n      tag_214\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_214:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/CoreLoanPlatform.sol\":1873:2159  function depositCollateral(uint256 amount) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/CoreLoanPlatform.sol\":6384:6504  function getLenderBalance(address lender) external view returns (uint256) {... */\n    tag_100:\n        /* \"contracts/CoreLoanPlatform.sol\":6449:6456  uint256 */\n      0x00\n        /* \"contracts/CoreLoanPlatform.sol\":6475:6489  lenderBalances */\n      0x05\n        /* \"contracts/CoreLoanPlatform.sol\":6475:6497  lenderBalances[lender] */\n      0x00\n        /* \"contracts/CoreLoanPlatform.sol\":6490:6496  lender */\n      dup4\n        /* \"contracts/CoreLoanPlatform.sol\":6475:6497  lenderBalances[lender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/CoreLoanPlatform.sol\":6468:6497  return lenderBalances[lender] */\n      swap1\n      pop\n        /* \"contracts/CoreLoanPlatform.sol\":6384:6504  function getLenderBalance(address lender) external view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/CoreLoanPlatform.sol\":2903:3934  function borrowBTC(uint256 amount) external {... */\n    tag_104:\n        /* \"contracts/CoreLoanPlatform.sol\":2974:2975  0 */\n      0x00\n        /* \"contracts/CoreLoanPlatform.sol\":2965:2971  amount */\n      dup2\n        /* \"contracts/CoreLoanPlatform.sol\":2965:2975  amount > 0 */\n      gt\n        /* \"contracts/CoreLoanPlatform.sol\":2957:3009  require(amount > 0, \"Amount must be greater than 0\") */\n      tag_217\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_218\n      swap1\n      tag_165\n      jump\t// in\n    tag_218:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_217:\n        /* \"contracts/CoreLoanPlatform.sol\":3041:3046  loans */\n      0x03\n        /* \"contracts/CoreLoanPlatform.sol\":3041:3058  loans[msg.sender] */\n      0x00\n        /* \"contracts/CoreLoanPlatform.sol\":3047:3057  msg.sender */\n      caller\n        /* \"contracts/CoreLoanPlatform.sol\":3041:3058  loans[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/CoreLoanPlatform.sol\":3041:3065  loans[msg.sender].active */\n      0x03\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/CoreLoanPlatform.sol\":3040:3065  !loans[msg.sender].active */\n      iszero\n        /* \"contracts/CoreLoanPlatform.sol\":3019:3125  require(... */\n      tag_219\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_220\n      swap1\n      tag_221\n      jump\t// in\n    tag_220:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_219:\n        /* \"contracts/CoreLoanPlatform.sol\":3136:3162  uint256 requiredCollateral */\n      0x00\n        /* \"contracts/CoreLoanPlatform.sol\":3195:3198  100 */\n      0x64\n        /* \"contracts/CoreLoanPlatform.sol\":421:424  150 */\n      0x96\n        /* \"contracts/CoreLoanPlatform.sol\":3166:3172  amount */\n      dup4\n        /* \"contracts/CoreLoanPlatform.sol\":3166:3191  amount * COLLATERAL_RATIO */\n      tag_222\n      swap2\n      swap1\n      tag_152\n      jump\t// in\n    tag_222:\n        /* \"contracts/CoreLoanPlatform.sol\":3165:3198  (amount * COLLATERAL_RATIO) / 100 */\n      tag_223\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_223:\n        /* \"contracts/CoreLoanPlatform.sol\":3136:3198  uint256 requiredCollateral = (amount * COLLATERAL_RATIO) / 100 */\n      swap1\n      pop\n        /* \"contracts/CoreLoanPlatform.sol\":3259:3277  requiredCollateral */\n      dup1\n        /* \"contracts/CoreLoanPlatform.sol\":3229:3243  userCollateral */\n      0x04\n        /* \"contracts/CoreLoanPlatform.sol\":3229:3255  userCollateral[msg.sender] */\n      0x00\n        /* \"contracts/CoreLoanPlatform.sol\":3244:3254  msg.sender */\n      caller\n        /* \"contracts/CoreLoanPlatform.sol\":3229:3255  userCollateral[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/CoreLoanPlatform.sol\":3229:3277  userCollateral[msg.sender] >= requiredCollateral */\n      lt\n      iszero\n        /* \"contracts/CoreLoanPlatform.sol\":3208:3326  require(... */\n      tag_224\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_225\n      swap1\n      tag_168\n      jump\t// in\n    tag_225:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_224:\n        /* \"contracts/CoreLoanPlatform.sol\":3337:3358  uint256 maxBorrowable */\n      0x00\n        /* \"contracts/CoreLoanPlatform.sol\":3423:3426  100 */\n      0x64\n        /* \"contracts/CoreLoanPlatform.sol\":499:501  80 */\n      0x50\n        /* \"contracts/CoreLoanPlatform.sol\":3362:3376  userCollateral */\n      0x04\n        /* \"contracts/CoreLoanPlatform.sol\":3362:3388  userCollateral[msg.sender] */\n      0x00\n        /* \"contracts/CoreLoanPlatform.sol\":3377:3387  msg.sender */\n      caller\n        /* \"contracts/CoreLoanPlatform.sol\":3362:3388  userCollateral[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/CoreLoanPlatform.sol\":3362:3419  userCollateral[msg.sender] *... */\n      tag_226\n      swap2\n      swap1\n      tag_152\n      jump\t// in\n    tag_226:\n        /* \"contracts/CoreLoanPlatform.sol\":3361:3426  (userCollateral[msg.sender] *... */\n      tag_227\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_227:\n        /* \"contracts/CoreLoanPlatform.sol\":3337:3426  uint256 maxBorrowable = (userCollateral[msg.sender] *... */\n      swap1\n      pop\n        /* \"contracts/CoreLoanPlatform.sol\":3454:3467  maxBorrowable */\n      dup1\n        /* \"contracts/CoreLoanPlatform.sol\":3444:3450  amount */\n      dup4\n        /* \"contracts/CoreLoanPlatform.sol\":3444:3467  amount <= maxBorrowable */\n      gt\n      iszero\n        /* \"contracts/CoreLoanPlatform.sol\":3436:3499  require(amount <= maxBorrowable, \"Borrow amount exceeds limit\") */\n      tag_228\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_229\n      swap1\n      tag_230\n      jump\t// in\n    tag_229:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_228:\n        /* \"contracts/CoreLoanPlatform.sol\":3563:3569  amount */\n      dup3\n        /* \"contracts/CoreLoanPlatform.sol\":3531:3534  BTC */\n      immutable(\"0xceebc1e79b37113a3784d9bbf48b7ad015159a0fad39f370ddaba6e9581bdbc5\")\n        /* \"contracts/CoreLoanPlatform.sol\":3531:3544  BTC.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/CoreLoanPlatform.sol\":3553:3557  this */\n      address\n        /* \"contracts/CoreLoanPlatform.sol\":3531:3559  BTC.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_231\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_231:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_233\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_233:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_234\n      swap2\n      swap1\n      tag_235\n      jump\t// in\n    tag_234:\n        /* \"contracts/CoreLoanPlatform.sol\":3531:3569  BTC.balanceOf(address(this)) >= amount */\n      lt\n      iszero\n        /* \"contracts/CoreLoanPlatform.sol\":3510:3623  require(... */\n      tag_236\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_237\n      swap1\n      tag_238\n      jump\t// in\n    tag_237:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_236:\n        /* \"contracts/CoreLoanPlatform.sol\":3654:3767  Loan(... */\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/CoreLoanPlatform.sol\":3672:3678  amount */\n      dup5\n        /* \"contracts/CoreLoanPlatform.sol\":3654:3767  Loan(... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/CoreLoanPlatform.sol\":3692:3710  requiredCollateral */\n      dup4\n        /* \"contracts/CoreLoanPlatform.sol\":3654:3767  Loan(... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/CoreLoanPlatform.sol\":3724:3739  block.timestamp */\n      timestamp\n        /* \"contracts/CoreLoanPlatform.sol\":3654:3767  Loan(... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/CoreLoanPlatform.sol\":3753:3757  true */\n      0x01\n        /* \"contracts/CoreLoanPlatform.sol\":3654:3767  Loan(... */\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n        /* \"contracts/CoreLoanPlatform.sol\":3634:3639  loans */\n      0x03\n        /* \"contracts/CoreLoanPlatform.sol\":3634:3651  loans[msg.sender] */\n      0x00\n        /* \"contracts/CoreLoanPlatform.sol\":3640:3650  msg.sender */\n      caller\n        /* \"contracts/CoreLoanPlatform.sol\":3634:3651  loans[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/CoreLoanPlatform.sol\":3634:3767  loans[msg.sender] = Loan(... */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      pop\n        /* \"contracts/CoreLoanPlatform.sol\":3777:3813  BTC.safeTransfer(msg.sender, amount) */\n      tag_239\n        /* \"contracts/CoreLoanPlatform.sol\":3794:3804  msg.sender */\n      caller\n        /* \"contracts/CoreLoanPlatform.sol\":3806:3812  amount */\n      dup5\n        /* \"contracts/CoreLoanPlatform.sol\":3777:3780  BTC */\n      immutable(\"0xceebc1e79b37113a3784d9bbf48b7ad015159a0fad39f370ddaba6e9581bdbc5\")\n        /* \"contracts/CoreLoanPlatform.sol\":3777:3793  BTC.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_179\n      swap1\n        /* \"contracts/CoreLoanPlatform.sol\":3777:3813  BTC.safeTransfer(msg.sender, amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_239:\n        /* \"contracts/CoreLoanPlatform.sol\":3856:3862  amount */\n      dup3\n        /* \"contracts/CoreLoanPlatform.sol\":3840:3853  totalBorrowed */\n      sload(0x02)\n        /* \"contracts/CoreLoanPlatform.sol\":3840:3862  totalBorrowed + amount */\n      tag_240\n      swap2\n      swap1\n      tag_156\n      jump\t// in\n    tag_240:\n        /* \"contracts/CoreLoanPlatform.sol\":3824:3837  totalBorrowed */\n      0x02\n        /* \"contracts/CoreLoanPlatform.sol\":3824:3862  totalBorrowed = totalBorrowed + amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CoreLoanPlatform.sol\":3888:3898  msg.sender */\n      caller\n        /* \"contracts/CoreLoanPlatform.sol\":3878:3927  LoanTaken(msg.sender, amount, requiredCollateral) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6b9bb4766cf5ab74b890df959e4fad0e54b1c3885e49c9541d36253a6e39e6\n        /* \"contracts/CoreLoanPlatform.sol\":3900:3906  amount */\n      dup5\n        /* \"contracts/CoreLoanPlatform.sol\":3908:3926  requiredCollateral */\n      dup5\n        /* \"contracts/CoreLoanPlatform.sol\":3878:3927  LoanTaken(msg.sender, amount, requiredCollateral) */\n      mload(0x40)\n      tag_241\n      swap3\n      swap2\n      swap1\n      tag_161\n      jump\t// in\n    tag_241:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/CoreLoanPlatform.sol\":2947:3934  {... */\n      pop\n      pop\n        /* \"contracts/CoreLoanPlatform.sol\":2903:3934  function borrowBTC(uint256 amount) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/CoreLoanPlatform.sol\":378:424  uint256 public constant COLLATERAL_RATIO = 150 */\n    tag_106:\n        /* \"contracts/CoreLoanPlatform.sol\":421:424  150 */\n      0x96\n        /* \"contracts/CoreLoanPlatform.sol\":378:424  uint256 public constant COLLATERAL_RATIO = 150 */\n      dup2\n      jump\t// out\n        /* \"contracts/CoreLoanPlatform.sol\":4920:5033  function getUserStaked(address user) external view returns (uint256) {... */\n    tag_110:\n        /* \"contracts/CoreLoanPlatform.sol\":4980:4987  uint256 */\n      0x00\n        /* \"contracts/CoreLoanPlatform.sol\":5006:5020  lenderBalances */\n      0x05\n        /* \"contracts/CoreLoanPlatform.sol\":5006:5026  lenderBalances[user] */\n      0x00\n        /* \"contracts/CoreLoanPlatform.sol\":5021:5025  user */\n      dup4\n        /* \"contracts/CoreLoanPlatform.sol\":5006:5026  lenderBalances[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/CoreLoanPlatform.sol\":4999:5026  return lenderBalances[user] */\n      swap1\n      pop\n        /* \"contracts/CoreLoanPlatform.sol\":4920:5033  function getUserStaked(address user) external view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/CoreLoanPlatform.sol\":611:658  uint256 public constant LOAN_DURATION = 30 days */\n    tag_113:\n        /* \"contracts/CoreLoanPlatform.sol\":651:658  30 days */\n      0x278d00\n        /* \"contracts/CoreLoanPlatform.sol\":611:658  uint256 public constant LOAN_DURATION = 30 days */\n      dup2\n      jump\t// out\n        /* \"contracts/CoreLoanPlatform.sol\":5796:6227  function calculateInterest(address user) external view returns (uint256) {... */\n    tag_117:\n        /* \"contracts/CoreLoanPlatform.sol\":5860:5867  uint256 */\n      0x00\n        /* \"contracts/CoreLoanPlatform.sol\":5879:5896  Loan storage loan */\n      dup1\n        /* \"contracts/CoreLoanPlatform.sol\":5899:5904  loans */\n      0x03\n        /* \"contracts/CoreLoanPlatform.sol\":5899:5910  loans[user] */\n      0x00\n        /* \"contracts/CoreLoanPlatform.sol\":5905:5909  user */\n      dup5\n        /* \"contracts/CoreLoanPlatform.sol\":5899:5910  loans[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/CoreLoanPlatform.sol\":5879:5910  Loan storage loan = loans[user] */\n      swap1\n      pop\n        /* \"contracts/CoreLoanPlatform.sol\":5924:5928  loan */\n      dup1\n        /* \"contracts/CoreLoanPlatform.sol\":5924:5935  loan.active */\n      0x03\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/CoreLoanPlatform.sol\":5920:6221  if (loan.active) {... */\n      iszero\n      tag_244\n      jumpi\n        /* \"contracts/CoreLoanPlatform.sol\":5951:5970  uint256 daysElapsed */\n      0x00\n        /* \"contracts/CoreLoanPlatform.sol\":708:713  86400 */\n      0x015180\n        /* \"contracts/CoreLoanPlatform.sol\":5992:5996  loan */\n      dup3\n        /* \"contracts/CoreLoanPlatform.sol\":5992:6006  loan.timestamp */\n      0x02\n      add\n      sload\n        /* \"contracts/CoreLoanPlatform.sol\":5974:5989  block.timestamp */\n      timestamp\n        /* \"contracts/CoreLoanPlatform.sol\":5974:6006  block.timestamp - loan.timestamp */\n      tag_245\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_245:\n        /* \"contracts/CoreLoanPlatform.sol\":5973:6042  (block.timestamp - loan.timestamp) /... */\n      tag_246\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_246:\n        /* \"contracts/CoreLoanPlatform.sol\":5951:6042  uint256 daysElapsed = (block.timestamp - loan.timestamp) /... */\n      swap1\n      pop\n        /* \"contracts/CoreLoanPlatform.sol\":6056:6072  uint256 interest */\n      0x00\n        /* \"contracts/CoreLoanPlatform.sol\":6137:6142  36500 */\n      0x8e94\n        /* \"contracts/CoreLoanPlatform.sol\":6106:6117  daysElapsed */\n      dup3\n        /* \"contracts/CoreLoanPlatform.sol\":584:585  5 */\n      0x05\n        /* \"contracts/CoreLoanPlatform.sol\":6076:6080  loan */\n      dup6\n        /* \"contracts/CoreLoanPlatform.sol\":6076:6087  loan.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/CoreLoanPlatform.sol\":6076:6103  loan.amount * INTEREST_RATE */\n      tag_247\n      swap2\n      swap1\n      tag_152\n      jump\t// in\n    tag_247:\n        /* \"contracts/CoreLoanPlatform.sol\":6076:6117  loan.amount * INTEREST_RATE * daysElapsed */\n      tag_248\n      swap2\n      swap1\n      tag_152\n      jump\t// in\n    tag_248:\n        /* \"contracts/CoreLoanPlatform.sol\":6075:6142  (loan.amount * INTEREST_RATE * daysElapsed) /... */\n      tag_249\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_249:\n        /* \"contracts/CoreLoanPlatform.sol\":6056:6142  uint256 interest = (loan.amount * INTEREST_RATE * daysElapsed) /... */\n      swap1\n      pop\n        /* \"contracts/CoreLoanPlatform.sol\":6163:6171  interest */\n      dup1\n        /* \"contracts/CoreLoanPlatform.sol\":6156:6171  return interest */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump(tag_243)\n        /* \"contracts/CoreLoanPlatform.sol\":5920:6221  if (loan.active) {... */\n    tag_244:\n        /* \"contracts/CoreLoanPlatform.sol\":6209:6210  0 */\n      0x00\n        /* \"contracts/CoreLoanPlatform.sol\":6202:6210  return 0 */\n      swap2\n      pop\n      pop\n        /* \"contracts/CoreLoanPlatform.sol\":5796:6227  function calculateInterest(address user) external view returns (uint256) {... */\n    tag_243:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/CoreLoanPlatform.sol\":6712:6918  function getUserBorrowed(address user) external view returns (uint256) {... */\n    tag_121:\n        /* \"contracts/CoreLoanPlatform.sol\":6774:6781  uint256 */\n      0x00\n        /* \"contracts/CoreLoanPlatform.sol\":6793:6810  Loan storage loan */\n      dup1\n        /* \"contracts/CoreLoanPlatform.sol\":6813:6818  loans */\n      0x03\n        /* \"contracts/CoreLoanPlatform.sol\":6813:6824  loans[user] */\n      0x00\n        /* \"contracts/CoreLoanPlatform.sol\":6819:6823  user */\n      dup5\n        /* \"contracts/CoreLoanPlatform.sol\":6813:6824  loans[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/CoreLoanPlatform.sol\":6793:6824  Loan storage loan = loans[user] */\n      swap1\n      pop\n        /* \"contracts/CoreLoanPlatform.sol\":6838:6842  loan */\n      dup1\n        /* \"contracts/CoreLoanPlatform.sol\":6838:6849  loan.active */\n      0x03\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/CoreLoanPlatform.sol\":6834:6894  if (loan.active) {... */\n      iszero\n      tag_252\n      jumpi\n        /* \"contracts/CoreLoanPlatform.sol\":6872:6876  loan */\n      dup1\n        /* \"contracts/CoreLoanPlatform.sol\":6872:6883  loan.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/CoreLoanPlatform.sol\":6865:6883  return loan.amount */\n      swap2\n      pop\n      pop\n      jump(tag_251)\n        /* \"contracts/CoreLoanPlatform.sol\":6834:6894  if (loan.active) {... */\n    tag_252:\n        /* \"contracts/CoreLoanPlatform.sol\":6910:6911  0 */\n      0x00\n        /* \"contracts/CoreLoanPlatform.sol\":6903:6911  return 0 */\n      swap2\n      pop\n      pop\n        /* \"contracts/CoreLoanPlatform.sol\":6712:6918  function getUserBorrowed(address user) external view returns (uint256) {... */\n    tag_251:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/CoreLoanPlatform.sol\":6233:6378  function getLoanDetails(address borrower)... */\n    tag_125:\n        /* \"contracts/CoreLoanPlatform.sol\":6322:6333  Loan memory */\n      tag_253\n      tag_254\n      jump\t// in\n    tag_253:\n        /* \"contracts/CoreLoanPlatform.sol\":6356:6361  loans */\n      0x03\n        /* \"contracts/CoreLoanPlatform.sol\":6356:6371  loans[borrower] */\n      0x00\n        /* \"contracts/CoreLoanPlatform.sol\":6362:6370  borrower */\n      dup4\n        /* \"contracts/CoreLoanPlatform.sol\":6356:6371  loans[borrower] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/CoreLoanPlatform.sol\":6349:6371  return loans[borrower] */\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/CoreLoanPlatform.sol\":6233:6378  function getLoanDetails(address borrower)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_130:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_257\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_186\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_257:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_259\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_260\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_260:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_259:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_261\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_189\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_261:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/CoreLoanPlatform.sol\":5039:5133  function getCurrentApy() external pure returns (uint256) {... */\n    tag_132:\n        /* \"contracts/CoreLoanPlatform.sol\":5087:5094  uint256 */\n      0x00\n        /* \"contracts/CoreLoanPlatform.sol\":584:585  5 */\n      0x05\n        /* \"contracts/CoreLoanPlatform.sol\":5106:5126  return INTEREST_RATE */\n      swap1\n      pop\n        /* \"contracts/CoreLoanPlatform.sol\":5039:5133  function getCurrentApy() external pure returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CoreLoanPlatform.sol\":1021:1070  mapping(address => uint256) public userCollateral */\n    tag_136:\n      mstore(0x20, 0x04)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1702:1890  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_158:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1802:1883  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_264\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1822:1827  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1844:1849  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1844:1862  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1865:1869  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1871:1873  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1875:1880  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1829:1882  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      add(0x24, mload(0x40))\n      tag_265\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_266\n      jump\t// in\n    tag_265:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1802:1821  _callOptionalReturn */\n      tag_267\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1802:1883  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      jump\t// in\n    tag_264:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1702:1890  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1303:1463  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_179:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1385:1456  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_269\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1405:1410  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1427:1432  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1427:1441  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1444:1446  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1448:1453  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1412:1455  abi.encodeCall(token.transfer, (to, value)) */\n      add(0x24, mload(0x40))\n      tag_270\n      swap3\n      swap2\n      swap1\n      tag_271\n      jump\t// in\n    tag_270:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1385:1404  _callOptionalReturn */\n      tag_267\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1385:1456  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_269:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1303:1463  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_186:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_273\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_274\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_273:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_275\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_78\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_275:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_276\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_277\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_274\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_277:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_278\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_278:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_276:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_189:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4059:4688  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_267:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4478:4501  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4537  address(token).functionCall(data) */\n      tag_281\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4532:4536  data */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4512:4517  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4531  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_282\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4537  address(token).functionCall(data) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_281:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4478:4537  bytes memory returndata = address(token).functionCall(data) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4572:4573  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4561  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4568  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4573  returndata.length != 0 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4608  returndata.length != 0 && !abi.decode(returndata, (bool)) */\n      dup1\n      iszero\n      tag_283\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4589:4599  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4578:4608  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_284\n      swap2\n      swap1\n      tag_285\n      jump\t// in\n    tag_284:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4577:4608  !abi.decode(returndata, (bool)) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4608  returndata.length != 0 && !abi.decode(returndata, (bool)) */\n    tag_283:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4547:4682  if (returndata.length != 0 && !abi.decode(returndata, (bool))) {... */\n      iszero\n      tag_286\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4664:4669  token */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4631:4671  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_287\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_287:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4547:4682  if (returndata.length != 0 && !abi.decode(returndata, (bool))) {... */\n    tag_286:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4129:4688  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4059:4688  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_274:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2705:2856  function functionCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_282:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2780:2792  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2849  functionCallWithValue(target, data, 0) */\n      tag_290\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2833:2839  target */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2841:2845  data */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2847:2848  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2832  functionCallWithValue */\n      tag_291\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2849  functionCallWithValue(target, data, 0) */\n      jump\t// in\n    tag_290:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2804:2849  return functionCallWithValue(target, data, 0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2705:2856  function functionCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3180:3572  function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {... */\n    tag_291:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3279:3291  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3331:3336  value */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3307:3328  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3307:3336  address(this).balance < value */\n      lt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3303:3411  if (address(this).balance < value) {... */\n      iszero\n      tag_293\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3394:3398  this */\n      address\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3359:3400  AddressInsufficientBalance(address(this)) */\n      mload(0x40)\n      0xcd78605900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_294\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_294:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3303:3411  if (address(this).balance < value) {... */\n    tag_293:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3421:3433  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3435:3458  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3468  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3473  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3481:3486  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3488:3492  data */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3493  target.call{value: value}(data) */\n      mload(0x40)\n      tag_295\n      swap2\n      swap1\n      tag_296\n      jump\t// in\n    tag_295:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_299\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_298)\n    tag_299:\n      0x60\n      swap2\n      pop\n    tag_298:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3420:3493  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3565  verifyCallResultFromTarget(target, success, returndata) */\n      tag_300\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3537:3543  target */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3545:3552  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3554:3564  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3536  verifyCallResultFromTarget */\n      tag_301\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3565  verifyCallResultFromTarget(target, success, returndata) */\n      jump\t// in\n    tag_300:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3503:3565  return verifyCallResultFromTarget(target, success, returndata) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3180:3572  function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_301:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4769:4781  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4798:4805  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      tag_303\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      tag_304\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4829:4839  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4828  _revert */\n      tag_305\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      jump\t// in\n    tag_304:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      jump(tag_306)\n    tag_303:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5066:5067  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5055  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5062  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5067  returndata.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n      dup1\n      iszero\n      tag_307\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5093:5094  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5077  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5089  target.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5094  target.code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n    tag_307:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n      iszero\n      tag_308\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5138:5144  target */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      mload(0x40)\n      0x9996b31500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_309\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_309:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n    tag_308:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5180:5190  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5173:5190  return returndata */\n      swap1\n      pop\n      jump(tag_302)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n    tag_306:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_302:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5743:6259  function _revert(bytes memory returndata) private pure {... */\n    tag_305:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5894:5895  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5884  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5891  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5895  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n      iszero\n      tag_311\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6102:6112  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6096:6113  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6158:6173  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6145:6155  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6141:6143  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6137:6156  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6130:6174  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n    tag_311:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6225:6242  FailedInnerCall() */\n      mload(0x40)\n      0x1425ea4200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_254:\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      iszero(iszero(0x00))\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_313:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_314:\n        /* \"#utility.yul\":177:201   */\n      tag_366\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_313\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_41:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_368\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_314\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":523:640   */\n    tag_316:\n        /* \"#utility.yul\":632:633   */\n      0x00\n        /* \"#utility.yul\":629:630   */\n      dup1\n        /* \"#utility.yul\":622:634   */\n      revert\n        /* \"#utility.yul\":769:895   */\n    tag_318:\n        /* \"#utility.yul\":806:813   */\n      0x00\n        /* \"#utility.yul\":846:888   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":839:844   */\n      dup3\n        /* \"#utility.yul\":835:889   */\n      and\n        /* \"#utility.yul\":824:889   */\n      swap1\n      pop\n        /* \"#utility.yul\":769:895   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":901:997   */\n    tag_319:\n        /* \"#utility.yul\":938:945   */\n      0x00\n        /* \"#utility.yul\":967:991   */\n      tag_374\n        /* \"#utility.yul\":985:990   */\n      dup3\n        /* \"#utility.yul\":967:991   */\n      tag_318\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":956:991   */\n      swap1\n      pop\n        /* \"#utility.yul\":901:997   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1003:1125   */\n    tag_320:\n        /* \"#utility.yul\":1076:1100   */\n      tag_376\n        /* \"#utility.yul\":1094:1099   */\n      dup2\n        /* \"#utility.yul\":1076:1100   */\n      tag_319\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":1069:1074   */\n      dup2\n        /* \"#utility.yul\":1066:1101   */\n      eq\n        /* \"#utility.yul\":1056:1119   */\n      tag_377\n      jumpi\n        /* \"#utility.yul\":1115:1116   */\n      0x00\n        /* \"#utility.yul\":1112:1113   */\n      dup1\n        /* \"#utility.yul\":1105:1117   */\n      revert\n        /* \"#utility.yul\":1056:1119   */\n    tag_377:\n        /* \"#utility.yul\":1003:1125   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1131:1270   */\n    tag_321:\n        /* \"#utility.yul\":1177:1182   */\n      0x00\n        /* \"#utility.yul\":1215:1221   */\n      dup2\n        /* \"#utility.yul\":1202:1222   */\n      calldataload\n        /* \"#utility.yul\":1193:1222   */\n      swap1\n      pop\n        /* \"#utility.yul\":1231:1264   */\n      tag_379\n        /* \"#utility.yul\":1258:1263   */\n      dup2\n        /* \"#utility.yul\":1231:1264   */\n      tag_320\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":1131:1270   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1276:1605   */\n    tag_47:\n        /* \"#utility.yul\":1335:1341   */\n      0x00\n        /* \"#utility.yul\":1384:1386   */\n      0x20\n        /* \"#utility.yul\":1372:1381   */\n      dup3\n        /* \"#utility.yul\":1363:1370   */\n      dup5\n        /* \"#utility.yul\":1359:1382   */\n      sub\n        /* \"#utility.yul\":1355:1387   */\n      slt\n        /* \"#utility.yul\":1352:1471   */\n      iszero\n      tag_381\n      jumpi\n        /* \"#utility.yul\":1390:1469   */\n      tag_382\n      tag_316\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":1352:1471   */\n    tag_381:\n        /* \"#utility.yul\":1510:1511   */\n      0x00\n        /* \"#utility.yul\":1535:1588   */\n      tag_383\n        /* \"#utility.yul\":1580:1587   */\n      dup5\n        /* \"#utility.yul\":1571:1577   */\n      dup3\n        /* \"#utility.yul\":1560:1569   */\n      dup6\n        /* \"#utility.yul\":1556:1578   */\n      add\n        /* \"#utility.yul\":1535:1588   */\n      tag_321\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":1525:1588   */\n      swap2\n      pop\n        /* \"#utility.yul\":1481:1598   */\n      pop\n        /* \"#utility.yul\":1276:1605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1671   */\n    tag_322:\n        /* \"#utility.yul\":1639:1642   */\n      0x00\n        /* \"#utility.yul\":1660:1665   */\n      dup2\n        /* \"#utility.yul\":1653:1665   */\n      swap1\n      pop\n        /* \"#utility.yul\":1611:1671   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1677:1819   */\n    tag_323:\n        /* \"#utility.yul\":1727:1736   */\n      0x00\n        /* \"#utility.yul\":1760:1813   */\n      tag_386\n        /* \"#utility.yul\":1778:1812   */\n      tag_387\n        /* \"#utility.yul\":1787:1811   */\n      tag_388\n        /* \"#utility.yul\":1805:1810   */\n      dup5\n        /* \"#utility.yul\":1787:1811   */\n      tag_318\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":1778:1812   */\n      tag_322\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":1760:1813   */\n      tag_318\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":1747:1813   */\n      swap1\n      pop\n        /* \"#utility.yul\":1677:1819   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1825:1951   */\n    tag_324:\n        /* \"#utility.yul\":1875:1884   */\n      0x00\n        /* \"#utility.yul\":1908:1945   */\n      tag_390\n        /* \"#utility.yul\":1939:1944   */\n      dup3\n        /* \"#utility.yul\":1908:1945   */\n      tag_323\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":1895:1945   */\n      swap1\n      pop\n        /* \"#utility.yul\":1825:1951   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1957:2097   */\n    tag_325:\n        /* \"#utility.yul\":2021:2030   */\n      0x00\n        /* \"#utility.yul\":2054:2091   */\n      tag_392\n        /* \"#utility.yul\":2085:2090   */\n      dup3\n        /* \"#utility.yul\":2054:2091   */\n      tag_324\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":2041:2091   */\n      swap1\n      pop\n        /* \"#utility.yul\":1957:2097   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2103:2262   */\n    tag_326:\n        /* \"#utility.yul\":2204:2255   */\n      tag_394\n        /* \"#utility.yul\":2249:2254   */\n      dup2\n        /* \"#utility.yul\":2204:2255   */\n      tag_325\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":2199:2202   */\n      dup3\n        /* \"#utility.yul\":2192:2256   */\n      mstore\n        /* \"#utility.yul\":2103:2262   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2268:2518   */\n    tag_52:\n        /* \"#utility.yul\":2375:2379   */\n      0x00\n        /* \"#utility.yul\":2413:2415   */\n      0x20\n        /* \"#utility.yul\":2402:2411   */\n      dup3\n        /* \"#utility.yul\":2398:2416   */\n      add\n        /* \"#utility.yul\":2390:2416   */\n      swap1\n      pop\n        /* \"#utility.yul\":2426:2511   */\n      tag_396\n        /* \"#utility.yul\":2508:2509   */\n      0x00\n        /* \"#utility.yul\":2497:2506   */\n      dup4\n        /* \"#utility.yul\":2493:2510   */\n      add\n        /* \"#utility.yul\":2484:2490   */\n      dup5\n        /* \"#utility.yul\":2426:2511   */\n      tag_326\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":2268:2518   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2524:2646   */\n    tag_327:\n        /* \"#utility.yul\":2597:2621   */\n      tag_398\n        /* \"#utility.yul\":2615:2620   */\n      dup2\n        /* \"#utility.yul\":2597:2621   */\n      tag_313\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":2590:2595   */\n      dup2\n        /* \"#utility.yul\":2587:2622   */\n      eq\n        /* \"#utility.yul\":2577:2640   */\n      tag_399\n      jumpi\n        /* \"#utility.yul\":2636:2637   */\n      0x00\n        /* \"#utility.yul\":2633:2634   */\n      dup1\n        /* \"#utility.yul\":2626:2638   */\n      revert\n        /* \"#utility.yul\":2577:2640   */\n    tag_399:\n        /* \"#utility.yul\":2524:2646   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2652:2791   */\n    tag_328:\n        /* \"#utility.yul\":2698:2703   */\n      0x00\n        /* \"#utility.yul\":2736:2742   */\n      dup2\n        /* \"#utility.yul\":2723:2743   */\n      calldataload\n        /* \"#utility.yul\":2714:2743   */\n      swap1\n      pop\n        /* \"#utility.yul\":2752:2785   */\n      tag_401\n        /* \"#utility.yul\":2779:2784   */\n      dup2\n        /* \"#utility.yul\":2752:2785   */\n      tag_327\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":2652:2791   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2797:3126   */\n    tag_61:\n        /* \"#utility.yul\":2856:2862   */\n      0x00\n        /* \"#utility.yul\":2905:2907   */\n      0x20\n        /* \"#utility.yul\":2893:2902   */\n      dup3\n        /* \"#utility.yul\":2884:2891   */\n      dup5\n        /* \"#utility.yul\":2880:2903   */\n      sub\n        /* \"#utility.yul\":2876:2908   */\n      slt\n        /* \"#utility.yul\":2873:2992   */\n      iszero\n      tag_403\n      jumpi\n        /* \"#utility.yul\":2911:2990   */\n      tag_404\n      tag_316\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":2873:2992   */\n    tag_403:\n        /* \"#utility.yul\":3031:3032   */\n      0x00\n        /* \"#utility.yul\":3056:3109   */\n      tag_405\n        /* \"#utility.yul\":3101:3108   */\n      dup5\n        /* \"#utility.yul\":3092:3098   */\n      dup3\n        /* \"#utility.yul\":3081:3090   */\n      dup6\n        /* \"#utility.yul\":3077:3099   */\n      add\n        /* \"#utility.yul\":3056:3109   */\n      tag_328\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":3046:3109   */\n      swap2\n      pop\n        /* \"#utility.yul\":3002:3119   */\n      pop\n        /* \"#utility.yul\":2797:3126   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3132:3222   */\n    tag_329:\n        /* \"#utility.yul\":3166:3173   */\n      0x00\n        /* \"#utility.yul\":3209:3214   */\n      dup2\n        /* \"#utility.yul\":3202:3215   */\n      iszero\n        /* \"#utility.yul\":3195:3216   */\n      iszero\n        /* \"#utility.yul\":3184:3216   */\n      swap1\n      pop\n        /* \"#utility.yul\":3132:3222   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3228:3337   */\n    tag_330:\n        /* \"#utility.yul\":3309:3330   */\n      tag_408\n        /* \"#utility.yul\":3324:3329   */\n      dup2\n        /* \"#utility.yul\":3309:3330   */\n      tag_329\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":3304:3307   */\n      dup3\n        /* \"#utility.yul\":3297:3331   */\n      mstore\n        /* \"#utility.yul\":3228:3337   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3343:3884   */\n    tag_76:\n        /* \"#utility.yul\":3514:3518   */\n      0x00\n        /* \"#utility.yul\":3552:3555   */\n      0x80\n        /* \"#utility.yul\":3541:3550   */\n      dup3\n        /* \"#utility.yul\":3537:3556   */\n      add\n        /* \"#utility.yul\":3529:3556   */\n      swap1\n      pop\n        /* \"#utility.yul\":3566:3637   */\n      tag_410\n        /* \"#utility.yul\":3634:3635   */\n      0x00\n        /* \"#utility.yul\":3623:3632   */\n      dup4\n        /* \"#utility.yul\":3619:3636   */\n      add\n        /* \"#utility.yul\":3610:3616   */\n      dup8\n        /* \"#utility.yul\":3566:3637   */\n      tag_314\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":3647:3719   */\n      tag_411\n        /* \"#utility.yul\":3715:3717   */\n      0x20\n        /* \"#utility.yul\":3704:3713   */\n      dup4\n        /* \"#utility.yul\":3700:3718   */\n      add\n        /* \"#utility.yul\":3691:3697   */\n      dup7\n        /* \"#utility.yul\":3647:3719   */\n      tag_314\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":3729:3801   */\n      tag_412\n        /* \"#utility.yul\":3797:3799   */\n      0x40\n        /* \"#utility.yul\":3786:3795   */\n      dup4\n        /* \"#utility.yul\":3782:3800   */\n      add\n        /* \"#utility.yul\":3773:3779   */\n      dup6\n        /* \"#utility.yul\":3729:3801   */\n      tag_314\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":3811:3877   */\n      tag_413\n        /* \"#utility.yul\":3873:3875   */\n      0x60\n        /* \"#utility.yul\":3862:3871   */\n      dup4\n        /* \"#utility.yul\":3858:3876   */\n      add\n        /* \"#utility.yul\":3849:3855   */\n      dup5\n        /* \"#utility.yul\":3811:3877   */\n      tag_330\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":3343:3884   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3890:4008   */\n    tag_331:\n        /* \"#utility.yul\":3977:4001   */\n      tag_415\n        /* \"#utility.yul\":3995:4000   */\n      dup2\n        /* \"#utility.yul\":3977:4001   */\n      tag_319\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":3972:3975   */\n      dup3\n        /* \"#utility.yul\":3965:4002   */\n      mstore\n        /* \"#utility.yul\":3890:4008   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4014:4236   */\n    tag_80:\n        /* \"#utility.yul\":4107:4111   */\n      0x00\n        /* \"#utility.yul\":4145:4147   */\n      0x20\n        /* \"#utility.yul\":4134:4143   */\n      dup3\n        /* \"#utility.yul\":4130:4148   */\n      add\n        /* \"#utility.yul\":4122:4148   */\n      swap1\n      pop\n        /* \"#utility.yul\":4158:4229   */\n      tag_417\n        /* \"#utility.yul\":4226:4227   */\n      0x00\n        /* \"#utility.yul\":4215:4224   */\n      dup4\n        /* \"#utility.yul\":4211:4228   */\n      add\n        /* \"#utility.yul\":4202:4208   */\n      dup5\n        /* \"#utility.yul\":4158:4229   */\n      tag_331\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":4014:4236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4242:4350   */\n    tag_332:\n        /* \"#utility.yul\":4319:4343   */\n      tag_419\n        /* \"#utility.yul\":4337:4342   */\n      dup2\n        /* \"#utility.yul\":4319:4343   */\n      tag_313\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":4314:4317   */\n      dup3\n        /* \"#utility.yul\":4307:4344   */\n      mstore\n        /* \"#utility.yul\":4242:4350   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4356:4455   */\n    tag_333:\n        /* \"#utility.yul\":4427:4448   */\n      tag_421\n        /* \"#utility.yul\":4442:4447   */\n      dup2\n        /* \"#utility.yul\":4427:4448   */\n      tag_329\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":4422:4425   */\n      dup3\n        /* \"#utility.yul\":4415:4449   */\n      mstore\n        /* \"#utility.yul\":4356:4455   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4529:5385   */\n    tag_334:\n        /* \"#utility.yul\":4668:4672   */\n      0x80\n        /* \"#utility.yul\":4663:4666   */\n      dup3\n        /* \"#utility.yul\":4659:4673   */\n      add\n        /* \"#utility.yul\":4757:4761   */\n      0x00\n        /* \"#utility.yul\":4750:4755   */\n      dup3\n        /* \"#utility.yul\":4746:4762   */\n      add\n        /* \"#utility.yul\":4740:4763   */\n      mload\n        /* \"#utility.yul\":4776:4839   */\n      tag_423\n        /* \"#utility.yul\":4833:4837   */\n      0x00\n        /* \"#utility.yul\":4828:4831   */\n      dup6\n        /* \"#utility.yul\":4824:4838   */\n      add\n        /* \"#utility.yul\":4810:4822   */\n      dup3\n        /* \"#utility.yul\":4776:4839   */\n      tag_332\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":4683:4849   */\n      pop\n        /* \"#utility.yul\":4937:4941   */\n      0x20\n        /* \"#utility.yul\":4930:4935   */\n      dup3\n        /* \"#utility.yul\":4926:4942   */\n      add\n        /* \"#utility.yul\":4920:4943   */\n      mload\n        /* \"#utility.yul\":4956:5019   */\n      tag_424\n        /* \"#utility.yul\":5013:5017   */\n      0x20\n        /* \"#utility.yul\":5008:5011   */\n      dup6\n        /* \"#utility.yul\":5004:5018   */\n      add\n        /* \"#utility.yul\":4990:5002   */\n      dup3\n        /* \"#utility.yul\":4956:5019   */\n      tag_332\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":4859:5029   */\n      pop\n        /* \"#utility.yul\":5116:5120   */\n      0x40\n        /* \"#utility.yul\":5109:5114   */\n      dup3\n        /* \"#utility.yul\":5105:5121   */\n      add\n        /* \"#utility.yul\":5099:5122   */\n      mload\n        /* \"#utility.yul\":5135:5198   */\n      tag_425\n        /* \"#utility.yul\":5192:5196   */\n      0x40\n        /* \"#utility.yul\":5187:5190   */\n      dup6\n        /* \"#utility.yul\":5183:5197   */\n      add\n        /* \"#utility.yul\":5169:5181   */\n      dup3\n        /* \"#utility.yul\":5135:5198   */\n      tag_332\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":5039:5208   */\n      pop\n        /* \"#utility.yul\":5292:5296   */\n      0x60\n        /* \"#utility.yul\":5285:5290   */\n      dup3\n        /* \"#utility.yul\":5281:5297   */\n      add\n        /* \"#utility.yul\":5275:5298   */\n      mload\n        /* \"#utility.yul\":5311:5368   */\n      tag_426\n        /* \"#utility.yul\":5362:5366   */\n      0x60\n        /* \"#utility.yul\":5357:5360   */\n      dup6\n        /* \"#utility.yul\":5353:5367   */\n      add\n        /* \"#utility.yul\":5339:5351   */\n      dup3\n        /* \"#utility.yul\":5311:5368   */\n      tag_333\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":5218:5378   */\n      pop\n        /* \"#utility.yul\":4637:5385   */\n      pop\n        /* \"#utility.yul\":4529:5385   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5391:5698   */\n    tag_127:\n        /* \"#utility.yul\":5526:5530   */\n      0x00\n        /* \"#utility.yul\":5564:5567   */\n      0x80\n        /* \"#utility.yul\":5553:5562   */\n      dup3\n        /* \"#utility.yul\":5549:5568   */\n      add\n        /* \"#utility.yul\":5541:5568   */\n      swap1\n      pop\n        /* \"#utility.yul\":5578:5691   */\n      tag_428\n        /* \"#utility.yul\":5688:5689   */\n      0x00\n        /* \"#utility.yul\":5677:5686   */\n      dup4\n        /* \"#utility.yul\":5673:5690   */\n      add\n        /* \"#utility.yul\":5664:5670   */\n      dup5\n        /* \"#utility.yul\":5578:5691   */\n      tag_334\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":5391:5698   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5704:5873   */\n    tag_335:\n        /* \"#utility.yul\":5788:5799   */\n      0x00\n        /* \"#utility.yul\":5822:5828   */\n      dup3\n        /* \"#utility.yul\":5817:5820   */\n      dup3\n        /* \"#utility.yul\":5810:5829   */\n      mstore\n        /* \"#utility.yul\":5862:5866   */\n      0x20\n        /* \"#utility.yul\":5857:5860   */\n      dup3\n        /* \"#utility.yul\":5853:5867   */\n      add\n        /* \"#utility.yul\":5838:5867   */\n      swap1\n      pop\n        /* \"#utility.yul\":5704:5873   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5879:6043   */\n    tag_336:\n        /* \"#utility.yul\":6019:6035   */\n      0x4e6f20616374697665206c6f616e000000000000000000000000000000000000\n        /* \"#utility.yul\":6015:6016   */\n      0x00\n        /* \"#utility.yul\":6007:6013   */\n      dup3\n        /* \"#utility.yul\":6003:6017   */\n      add\n        /* \"#utility.yul\":5996:6036   */\n      mstore\n        /* \"#utility.yul\":5879:6043   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6049:6415   */\n    tag_337:\n        /* \"#utility.yul\":6191:6194   */\n      0x00\n        /* \"#utility.yul\":6212:6279   */\n      tag_432\n        /* \"#utility.yul\":6276:6278   */\n      0x0e\n        /* \"#utility.yul\":6271:6274   */\n      dup4\n        /* \"#utility.yul\":6212:6279   */\n      tag_335\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":6205:6279   */\n      swap2\n      pop\n        /* \"#utility.yul\":6288:6381   */\n      tag_433\n        /* \"#utility.yul\":6377:6380   */\n      dup3\n        /* \"#utility.yul\":6288:6381   */\n      tag_336\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":6406:6408   */\n      0x20\n        /* \"#utility.yul\":6401:6404   */\n      dup3\n        /* \"#utility.yul\":6397:6409   */\n      add\n        /* \"#utility.yul\":6390:6409   */\n      swap1\n      pop\n        /* \"#utility.yul\":6049:6415   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6421:6840   */\n    tag_143:\n        /* \"#utility.yul\":6587:6591   */\n      0x00\n        /* \"#utility.yul\":6625:6627   */\n      0x20\n        /* \"#utility.yul\":6614:6623   */\n      dup3\n        /* \"#utility.yul\":6610:6628   */\n      add\n        /* \"#utility.yul\":6602:6628   */\n      swap1\n      pop\n        /* \"#utility.yul\":6674:6683   */\n      dup2\n        /* \"#utility.yul\":6668:6672   */\n      dup2\n        /* \"#utility.yul\":6664:6684   */\n      sub\n        /* \"#utility.yul\":6660:6661   */\n      0x00\n        /* \"#utility.yul\":6649:6658   */\n      dup4\n        /* \"#utility.yul\":6645:6662   */\n      add\n        /* \"#utility.yul\":6638:6685   */\n      mstore\n        /* \"#utility.yul\":6702:6833   */\n      tag_435\n        /* \"#utility.yul\":6828:6832   */\n      dup2\n        /* \"#utility.yul\":6702:6833   */\n      tag_337\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":6694:6833   */\n      swap1\n      pop\n        /* \"#utility.yul\":6421:6840   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6846:7026   */\n    tag_338:\n        /* \"#utility.yul\":6894:6971   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6891:6892   */\n      0x00\n        /* \"#utility.yul\":6884:6972   */\n      mstore\n        /* \"#utility.yul\":6991:6995   */\n      0x11\n        /* \"#utility.yul\":6988:6989   */\n      0x04\n        /* \"#utility.yul\":6981:6996   */\n      mstore\n        /* \"#utility.yul\":7015:7019   */\n      0x24\n        /* \"#utility.yul\":7012:7013   */\n      0x00\n        /* \"#utility.yul\":7005:7020   */\n      revert\n        /* \"#utility.yul\":7032:7226   */\n    tag_145:\n        /* \"#utility.yul\":7072:7076   */\n      0x00\n        /* \"#utility.yul\":7092:7112   */\n      tag_438\n        /* \"#utility.yul\":7110:7111   */\n      dup3\n        /* \"#utility.yul\":7092:7112   */\n      tag_313\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":7087:7112   */\n      swap2\n      pop\n        /* \"#utility.yul\":7126:7146   */\n      tag_439\n        /* \"#utility.yul\":7144:7145   */\n      dup4\n        /* \"#utility.yul\":7126:7146   */\n      tag_313\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":7121:7146   */\n      swap3\n      pop\n        /* \"#utility.yul\":7170:7171   */\n      dup3\n        /* \"#utility.yul\":7167:7168   */\n      dup3\n        /* \"#utility.yul\":7163:7172   */\n      sub\n        /* \"#utility.yul\":7155:7172   */\n      swap1\n      pop\n        /* \"#utility.yul\":7194:7195   */\n      dup2\n        /* \"#utility.yul\":7188:7192   */\n      dup2\n        /* \"#utility.yul\":7185:7196   */\n      gt\n        /* \"#utility.yul\":7182:7219   */\n      iszero\n      tag_440\n      jumpi\n        /* \"#utility.yul\":7199:7217   */\n      tag_441\n      tag_338\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":7182:7219   */\n    tag_440:\n        /* \"#utility.yul\":7032:7226   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7232:7412   */\n    tag_339:\n        /* \"#utility.yul\":7280:7357   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7277:7278   */\n      0x00\n        /* \"#utility.yul\":7270:7358   */\n      mstore\n        /* \"#utility.yul\":7377:7381   */\n      0x12\n        /* \"#utility.yul\":7374:7375   */\n      0x04\n        /* \"#utility.yul\":7367:7382   */\n      mstore\n        /* \"#utility.yul\":7401:7405   */\n      0x24\n        /* \"#utility.yul\":7398:7399   */\n      0x00\n        /* \"#utility.yul\":7391:7406   */\n      revert\n        /* \"#utility.yul\":7418:7603   */\n    tag_147:\n        /* \"#utility.yul\":7458:7459   */\n      0x00\n        /* \"#utility.yul\":7475:7495   */\n      tag_444\n        /* \"#utility.yul\":7493:7494   */\n      dup3\n        /* \"#utility.yul\":7475:7495   */\n      tag_313\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":7470:7495   */\n      swap2\n      pop\n        /* \"#utility.yul\":7509:7529   */\n      tag_445\n        /* \"#utility.yul\":7527:7528   */\n      dup4\n        /* \"#utility.yul\":7509:7529   */\n      tag_313\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":7504:7529   */\n      swap3\n      pop\n        /* \"#utility.yul\":7548:7549   */\n      dup3\n        /* \"#utility.yul\":7538:7573   */\n      tag_446\n      jumpi\n        /* \"#utility.yul\":7553:7571   */\n      tag_447\n      tag_339\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":7538:7573   */\n    tag_446:\n        /* \"#utility.yul\":7595:7596   */\n      dup3\n        /* \"#utility.yul\":7592:7593   */\n      dup3\n        /* \"#utility.yul\":7588:7597   */\n      div\n        /* \"#utility.yul\":7583:7597   */\n      swap1\n      pop\n        /* \"#utility.yul\":7418:7603   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7609:7789   */\n    tag_340:\n        /* \"#utility.yul\":7749:7781   */\n      0x4c6f616e206475726174696f6e20657863656564656420333020646179730000\n        /* \"#utility.yul\":7745:7746   */\n      0x00\n        /* \"#utility.yul\":7737:7743   */\n      dup3\n        /* \"#utility.yul\":7733:7747   */\n      add\n        /* \"#utility.yul\":7726:7782   */\n      mstore\n        /* \"#utility.yul\":7609:7789   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7795:8161   */\n    tag_341:\n        /* \"#utility.yul\":7937:7940   */\n      0x00\n        /* \"#utility.yul\":7958:8025   */\n      tag_450\n        /* \"#utility.yul\":8022:8024   */\n      0x1e\n        /* \"#utility.yul\":8017:8020   */\n      dup4\n        /* \"#utility.yul\":7958:8025   */\n      tag_335\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":7951:8025   */\n      swap2\n      pop\n        /* \"#utility.yul\":8034:8127   */\n      tag_451\n        /* \"#utility.yul\":8123:8126   */\n      dup3\n        /* \"#utility.yul\":8034:8127   */\n      tag_340\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":8152:8154   */\n      0x20\n        /* \"#utility.yul\":8147:8150   */\n      dup3\n        /* \"#utility.yul\":8143:8155   */\n      add\n        /* \"#utility.yul\":8136:8155   */\n      swap1\n      pop\n        /* \"#utility.yul\":7795:8161   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8167:8586   */\n    tag_150:\n        /* \"#utility.yul\":8333:8337   */\n      0x00\n        /* \"#utility.yul\":8371:8373   */\n      0x20\n        /* \"#utility.yul\":8360:8369   */\n      dup3\n        /* \"#utility.yul\":8356:8374   */\n      add\n        /* \"#utility.yul\":8348:8374   */\n      swap1\n      pop\n        /* \"#utility.yul\":8420:8429   */\n      dup2\n        /* \"#utility.yul\":8414:8418   */\n      dup2\n        /* \"#utility.yul\":8410:8430   */\n      sub\n        /* \"#utility.yul\":8406:8407   */\n      0x00\n        /* \"#utility.yul\":8395:8404   */\n      dup4\n        /* \"#utility.yul\":8391:8408   */\n      add\n        /* \"#utility.yul\":8384:8431   */\n      mstore\n        /* \"#utility.yul\":8448:8579   */\n      tag_453\n        /* \"#utility.yul\":8574:8578   */\n      dup2\n        /* \"#utility.yul\":8448:8579   */\n      tag_341\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":8440:8579   */\n      swap1\n      pop\n        /* \"#utility.yul\":8167:8586   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8592:9002   */\n    tag_152:\n        /* \"#utility.yul\":8632:8639   */\n      0x00\n        /* \"#utility.yul\":8655:8675   */\n      tag_455\n        /* \"#utility.yul\":8673:8674   */\n      dup3\n        /* \"#utility.yul\":8655:8675   */\n      tag_313\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":8650:8675   */\n      swap2\n      pop\n        /* \"#utility.yul\":8689:8709   */\n      tag_456\n        /* \"#utility.yul\":8707:8708   */\n      dup4\n        /* \"#utility.yul\":8689:8709   */\n      tag_313\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":8684:8709   */\n      swap3\n      pop\n        /* \"#utility.yul\":8744:8745   */\n      dup3\n        /* \"#utility.yul\":8741:8742   */\n      dup3\n        /* \"#utility.yul\":8737:8746   */\n      mul\n        /* \"#utility.yul\":8766:8796   */\n      tag_457\n        /* \"#utility.yul\":8784:8795   */\n      dup2\n        /* \"#utility.yul\":8766:8796   */\n      tag_313\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":8755:8796   */\n      swap2\n      pop\n        /* \"#utility.yul\":8945:8946   */\n      dup3\n        /* \"#utility.yul\":8936:8943   */\n      dup3\n        /* \"#utility.yul\":8932:8947   */\n      div\n        /* \"#utility.yul\":8929:8930   */\n      dup5\n        /* \"#utility.yul\":8926:8948   */\n      eq\n        /* \"#utility.yul\":8906:8907   */\n      dup4\n        /* \"#utility.yul\":8899:8908   */\n      iszero\n        /* \"#utility.yul\":8879:8962   */\n      or\n        /* \"#utility.yul\":8856:8995   */\n      tag_458\n      jumpi\n        /* \"#utility.yul\":8975:8993   */\n      tag_459\n      tag_338\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":8856:8995   */\n    tag_458:\n        /* \"#utility.yul\":8640:9002   */\n      pop\n        /* \"#utility.yul\":8592:9002   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9008:9199   */\n    tag_156:\n        /* \"#utility.yul\":9048:9051   */\n      0x00\n        /* \"#utility.yul\":9067:9087   */\n      tag_461\n        /* \"#utility.yul\":9085:9086   */\n      dup3\n        /* \"#utility.yul\":9067:9087   */\n      tag_313\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":9062:9087   */\n      swap2\n      pop\n        /* \"#utility.yul\":9101:9121   */\n      tag_462\n        /* \"#utility.yul\":9119:9120   */\n      dup4\n        /* \"#utility.yul\":9101:9121   */\n      tag_313\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":9096:9121   */\n      swap3\n      pop\n        /* \"#utility.yul\":9144:9145   */\n      dup3\n        /* \"#utility.yul\":9141:9142   */\n      dup3\n        /* \"#utility.yul\":9137:9146   */\n      add\n        /* \"#utility.yul\":9130:9146   */\n      swap1\n      pop\n        /* \"#utility.yul\":9165:9168   */\n      dup1\n        /* \"#utility.yul\":9162:9163   */\n      dup3\n        /* \"#utility.yul\":9159:9169   */\n      gt\n        /* \"#utility.yul\":9156:9192   */\n      iszero\n      tag_463\n      jumpi\n        /* \"#utility.yul\":9172:9190   */\n      tag_464\n      tag_338\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":9156:9192   */\n    tag_463:\n        /* \"#utility.yul\":9008:9199   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9205:9537   */\n    tag_161:\n        /* \"#utility.yul\":9326:9330   */\n      0x00\n        /* \"#utility.yul\":9364:9366   */\n      0x40\n        /* \"#utility.yul\":9353:9362   */\n      dup3\n        /* \"#utility.yul\":9349:9367   */\n      add\n        /* \"#utility.yul\":9341:9367   */\n      swap1\n      pop\n        /* \"#utility.yul\":9377:9448   */\n      tag_466\n        /* \"#utility.yul\":9445:9446   */\n      0x00\n        /* \"#utility.yul\":9434:9443   */\n      dup4\n        /* \"#utility.yul\":9430:9447   */\n      add\n        /* \"#utility.yul\":9421:9427   */\n      dup6\n        /* \"#utility.yul\":9377:9448   */\n      tag_314\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":9458:9530   */\n      tag_467\n        /* \"#utility.yul\":9526:9528   */\n      0x20\n        /* \"#utility.yul\":9515:9524   */\n      dup4\n        /* \"#utility.yul\":9511:9529   */\n      add\n        /* \"#utility.yul\":9502:9508   */\n      dup5\n        /* \"#utility.yul\":9458:9530   */\n      tag_314\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":9205:9537   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9543:9722   */\n    tag_342:\n        /* \"#utility.yul\":9683:9714   */\n      0x416d6f756e74206d7573742062652067726561746572207468616e2030000000\n        /* \"#utility.yul\":9679:9680   */\n      0x00\n        /* \"#utility.yul\":9671:9677   */\n      dup3\n        /* \"#utility.yul\":9667:9681   */\n      add\n        /* \"#utility.yul\":9660:9715   */\n      mstore\n        /* \"#utility.yul\":9543:9722   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9728:10094   */\n    tag_343:\n        /* \"#utility.yul\":9870:9873   */\n      0x00\n        /* \"#utility.yul\":9891:9958   */\n      tag_470\n        /* \"#utility.yul\":9955:9957   */\n      0x1d\n        /* \"#utility.yul\":9950:9953   */\n      dup4\n        /* \"#utility.yul\":9891:9958   */\n      tag_335\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":9884:9958   */\n      swap2\n      pop\n        /* \"#utility.yul\":9967:10060   */\n      tag_471\n        /* \"#utility.yul\":10056:10059   */\n      dup3\n        /* \"#utility.yul\":9967:10060   */\n      tag_342\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":10085:10087   */\n      0x20\n        /* \"#utility.yul\":10080:10083   */\n      dup3\n        /* \"#utility.yul\":10076:10088   */\n      add\n        /* \"#utility.yul\":10069:10088   */\n      swap1\n      pop\n        /* \"#utility.yul\":9728:10094   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10100:10519   */\n    tag_165:\n        /* \"#utility.yul\":10266:10270   */\n      0x00\n        /* \"#utility.yul\":10304:10306   */\n      0x20\n        /* \"#utility.yul\":10293:10302   */\n      dup3\n        /* \"#utility.yul\":10289:10307   */\n      add\n        /* \"#utility.yul\":10281:10307   */\n      swap1\n      pop\n        /* \"#utility.yul\":10353:10362   */\n      dup2\n        /* \"#utility.yul\":10347:10351   */\n      dup2\n        /* \"#utility.yul\":10343:10363   */\n      sub\n        /* \"#utility.yul\":10339:10340   */\n      0x00\n        /* \"#utility.yul\":10328:10337   */\n      dup4\n        /* \"#utility.yul\":10324:10341   */\n      add\n        /* \"#utility.yul\":10317:10364   */\n      mstore\n        /* \"#utility.yul\":10381:10512   */\n      tag_473\n        /* \"#utility.yul\":10507:10511   */\n      dup2\n        /* \"#utility.yul\":10381:10512   */\n      tag_343\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":10373:10512   */\n      swap1\n      pop\n        /* \"#utility.yul\":10100:10519   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10525:10698   */\n    tag_344:\n        /* \"#utility.yul\":10665:10690   */\n      0x496e73756666696369656e7420636f6c6c61746572616c000000000000000000\n        /* \"#utility.yul\":10661:10662   */\n      0x00\n        /* \"#utility.yul\":10653:10659   */\n      dup3\n        /* \"#utility.yul\":10649:10663   */\n      add\n        /* \"#utility.yul\":10642:10691   */\n      mstore\n        /* \"#utility.yul\":10525:10698   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10704:11070   */\n    tag_345:\n        /* \"#utility.yul\":10846:10849   */\n      0x00\n        /* \"#utility.yul\":10867:10934   */\n      tag_476\n        /* \"#utility.yul\":10931:10933   */\n      0x17\n        /* \"#utility.yul\":10926:10929   */\n      dup4\n        /* \"#utility.yul\":10867:10934   */\n      tag_335\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":10860:10934   */\n      swap2\n      pop\n        /* \"#utility.yul\":10943:11036   */\n      tag_477\n        /* \"#utility.yul\":11032:11035   */\n      dup3\n        /* \"#utility.yul\":10943:11036   */\n      tag_344\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":11061:11063   */\n      0x20\n        /* \"#utility.yul\":11056:11059   */\n      dup3\n        /* \"#utility.yul\":11052:11064   */\n      add\n        /* \"#utility.yul\":11045:11064   */\n      swap1\n      pop\n        /* \"#utility.yul\":10704:11070   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11076:11495   */\n    tag_168:\n        /* \"#utility.yul\":11242:11246   */\n      0x00\n        /* \"#utility.yul\":11280:11282   */\n      0x20\n        /* \"#utility.yul\":11269:11278   */\n      dup3\n        /* \"#utility.yul\":11265:11283   */\n      add\n        /* \"#utility.yul\":11257:11283   */\n      swap1\n      pop\n        /* \"#utility.yul\":11329:11338   */\n      dup2\n        /* \"#utility.yul\":11323:11327   */\n      dup2\n        /* \"#utility.yul\":11319:11339   */\n      sub\n        /* \"#utility.yul\":11315:11316   */\n      0x00\n        /* \"#utility.yul\":11304:11313   */\n      dup4\n        /* \"#utility.yul\":11300:11317   */\n      add\n        /* \"#utility.yul\":11293:11340   */\n      mstore\n        /* \"#utility.yul\":11357:11488   */\n      tag_479\n        /* \"#utility.yul\":11483:11487   */\n      dup2\n        /* \"#utility.yul\":11357:11488   */\n      tag_345\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":11349:11488   */\n      swap1\n      pop\n        /* \"#utility.yul\":11076:11495   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11501:11728   */\n    tag_346:\n        /* \"#utility.yul\":11641:11675   */\n      0x5769746864726177616c20776f756c6420756e646572636f6c6c61746572616c\n        /* \"#utility.yul\":11637:11638   */\n      0x00\n        /* \"#utility.yul\":11629:11635   */\n      dup3\n        /* \"#utility.yul\":11625:11639   */\n      add\n        /* \"#utility.yul\":11618:11676   */\n      mstore\n        /* \"#utility.yul\":11710:11720   */\n      0x697a65206c6f616e000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11705:11707   */\n      0x20\n        /* \"#utility.yul\":11697:11703   */\n      dup3\n        /* \"#utility.yul\":11693:11708   */\n      add\n        /* \"#utility.yul\":11686:11721   */\n      mstore\n        /* \"#utility.yul\":11501:11728   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11734:12100   */\n    tag_347:\n        /* \"#utility.yul\":11876:11879   */\n      0x00\n        /* \"#utility.yul\":11897:11964   */\n      tag_482\n        /* \"#utility.yul\":11961:11963   */\n      0x28\n        /* \"#utility.yul\":11956:11959   */\n      dup4\n        /* \"#utility.yul\":11897:11964   */\n      tag_335\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":11890:11964   */\n      swap2\n      pop\n        /* \"#utility.yul\":11973:12066   */\n      tag_483\n        /* \"#utility.yul\":12062:12065   */\n      dup3\n        /* \"#utility.yul\":11973:12066   */\n      tag_346\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":12091:12093   */\n      0x40\n        /* \"#utility.yul\":12086:12089   */\n      dup3\n        /* \"#utility.yul\":12082:12094   */\n      add\n        /* \"#utility.yul\":12075:12094   */\n      swap1\n      pop\n        /* \"#utility.yul\":11734:12100   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12106:12525   */\n    tag_176:\n        /* \"#utility.yul\":12272:12276   */\n      0x00\n        /* \"#utility.yul\":12310:12312   */\n      0x20\n        /* \"#utility.yul\":12299:12308   */\n      dup3\n        /* \"#utility.yul\":12295:12313   */\n      add\n        /* \"#utility.yul\":12287:12313   */\n      swap1\n      pop\n        /* \"#utility.yul\":12359:12368   */\n      dup2\n        /* \"#utility.yul\":12353:12357   */\n      dup2\n        /* \"#utility.yul\":12349:12369   */\n      sub\n        /* \"#utility.yul\":12345:12346   */\n      0x00\n        /* \"#utility.yul\":12334:12343   */\n      dup4\n        /* \"#utility.yul\":12330:12347   */\n      add\n        /* \"#utility.yul\":12323:12370   */\n      mstore\n        /* \"#utility.yul\":12387:12518   */\n      tag_485\n        /* \"#utility.yul\":12513:12517   */\n      dup2\n        /* \"#utility.yul\":12387:12518   */\n      tag_347\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":12379:12518   */\n      swap1\n      pop\n        /* \"#utility.yul\":12106:12525   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12531:12701   */\n    tag_348:\n        /* \"#utility.yul\":12671:12693   */\n      0x496e73756666696369656e742062616c616e6365000000000000000000000000\n        /* \"#utility.yul\":12667:12668   */\n      0x00\n        /* \"#utility.yul\":12659:12665   */\n      dup3\n        /* \"#utility.yul\":12655:12669   */\n      add\n        /* \"#utility.yul\":12648:12694   */\n      mstore\n        /* \"#utility.yul\":12531:12701   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12707:13073   */\n    tag_349:\n        /* \"#utility.yul\":12849:12852   */\n      0x00\n        /* \"#utility.yul\":12870:12937   */\n      tag_488\n        /* \"#utility.yul\":12934:12936   */\n      0x14\n        /* \"#utility.yul\":12929:12932   */\n      dup4\n        /* \"#utility.yul\":12870:12937   */\n      tag_335\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":12863:12937   */\n      swap2\n      pop\n        /* \"#utility.yul\":12946:13039   */\n      tag_489\n        /* \"#utility.yul\":13035:13038   */\n      dup3\n        /* \"#utility.yul\":12946:13039   */\n      tag_348\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":13064:13066   */\n      0x20\n        /* \"#utility.yul\":13059:13062   */\n      dup3\n        /* \"#utility.yul\":13055:13067   */\n      add\n        /* \"#utility.yul\":13048:13067   */\n      swap1\n      pop\n        /* \"#utility.yul\":12707:13073   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13079:13498   */\n    tag_196:\n        /* \"#utility.yul\":13245:13249   */\n      0x00\n        /* \"#utility.yul\":13283:13285   */\n      0x20\n        /* \"#utility.yul\":13272:13281   */\n      dup3\n        /* \"#utility.yul\":13268:13286   */\n      add\n        /* \"#utility.yul\":13260:13286   */\n      swap1\n      pop\n        /* \"#utility.yul\":13332:13341   */\n      dup2\n        /* \"#utility.yul\":13326:13330   */\n      dup2\n        /* \"#utility.yul\":13322:13342   */\n      sub\n        /* \"#utility.yul\":13318:13319   */\n      0x00\n        /* \"#utility.yul\":13307:13316   */\n      dup4\n        /* \"#utility.yul\":13303:13320   */\n      add\n        /* \"#utility.yul\":13296:13343   */\n      mstore\n        /* \"#utility.yul\":13360:13491   */\n      tag_491\n        /* \"#utility.yul\":13486:13490   */\n      dup2\n        /* \"#utility.yul\":13360:13491   */\n      tag_349\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":13352:13491   */\n      swap1\n      pop\n        /* \"#utility.yul\":13079:13498   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13504:13725   */\n    tag_350:\n        /* \"#utility.yul\":13644:13678   */\n      0x4578697374696e67206c6f616e206d7573742062652072657061696420666972\n        /* \"#utility.yul\":13640:13641   */\n      0x00\n        /* \"#utility.yul\":13632:13638   */\n      dup3\n        /* \"#utility.yul\":13628:13642   */\n      add\n        /* \"#utility.yul\":13621:13679   */\n      mstore\n        /* \"#utility.yul\":13713:13717   */\n      0x7374000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13708:13710   */\n      0x20\n        /* \"#utility.yul\":13700:13706   */\n      dup3\n        /* \"#utility.yul\":13696:13711   */\n      add\n        /* \"#utility.yul\":13689:13718   */\n      mstore\n        /* \"#utility.yul\":13504:13725   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13731:14097   */\n    tag_351:\n        /* \"#utility.yul\":13873:13876   */\n      0x00\n        /* \"#utility.yul\":13894:13961   */\n      tag_494\n        /* \"#utility.yul\":13958:13960   */\n      0x22\n        /* \"#utility.yul\":13953:13956   */\n      dup4\n        /* \"#utility.yul\":13894:13961   */\n      tag_335\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":13887:13961   */\n      swap2\n      pop\n        /* \"#utility.yul\":13970:14063   */\n      tag_495\n        /* \"#utility.yul\":14059:14062   */\n      dup3\n        /* \"#utility.yul\":13970:14063   */\n      tag_350\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":14088:14090   */\n      0x40\n        /* \"#utility.yul\":14083:14086   */\n      dup3\n        /* \"#utility.yul\":14079:14091   */\n      add\n        /* \"#utility.yul\":14072:14091   */\n      swap1\n      pop\n        /* \"#utility.yul\":13731:14097   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14103:14522   */\n    tag_221:\n        /* \"#utility.yul\":14269:14273   */\n      0x00\n        /* \"#utility.yul\":14307:14309   */\n      0x20\n        /* \"#utility.yul\":14296:14305   */\n      dup3\n        /* \"#utility.yul\":14292:14310   */\n      add\n        /* \"#utility.yul\":14284:14310   */\n      swap1\n      pop\n        /* \"#utility.yul\":14356:14365   */\n      dup2\n        /* \"#utility.yul\":14350:14354   */\n      dup2\n        /* \"#utility.yul\":14346:14366   */\n      sub\n        /* \"#utility.yul\":14342:14343   */\n      0x00\n        /* \"#utility.yul\":14331:14340   */\n      dup4\n        /* \"#utility.yul\":14327:14344   */\n      add\n        /* \"#utility.yul\":14320:14367   */\n      mstore\n        /* \"#utility.yul\":14384:14515   */\n      tag_497\n        /* \"#utility.yul\":14510:14514   */\n      dup2\n        /* \"#utility.yul\":14384:14515   */\n      tag_351\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":14376:14515   */\n      swap1\n      pop\n        /* \"#utility.yul\":14103:14522   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14528:14705   */\n    tag_352:\n        /* \"#utility.yul\":14668:14697   */\n      0x426f72726f7720616d6f756e742065786365656473206c696d69740000000000\n        /* \"#utility.yul\":14664:14665   */\n      0x00\n        /* \"#utility.yul\":14656:14662   */\n      dup3\n        /* \"#utility.yul\":14652:14666   */\n      add\n        /* \"#utility.yul\":14645:14698   */\n      mstore\n        /* \"#utility.yul\":14528:14705   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14711:15077   */\n    tag_353:\n        /* \"#utility.yul\":14853:14856   */\n      0x00\n        /* \"#utility.yul\":14874:14941   */\n      tag_500\n        /* \"#utility.yul\":14938:14940   */\n      0x1b\n        /* \"#utility.yul\":14933:14936   */\n      dup4\n        /* \"#utility.yul\":14874:14941   */\n      tag_335\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":14867:14941   */\n      swap2\n      pop\n        /* \"#utility.yul\":14950:15043   */\n      tag_501\n        /* \"#utility.yul\":15039:15042   */\n      dup3\n        /* \"#utility.yul\":14950:15043   */\n      tag_352\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":15068:15070   */\n      0x20\n        /* \"#utility.yul\":15063:15066   */\n      dup3\n        /* \"#utility.yul\":15059:15071   */\n      add\n        /* \"#utility.yul\":15052:15071   */\n      swap1\n      pop\n        /* \"#utility.yul\":14711:15077   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15083:15502   */\n    tag_230:\n        /* \"#utility.yul\":15249:15253   */\n      0x00\n        /* \"#utility.yul\":15287:15289   */\n      0x20\n        /* \"#utility.yul\":15276:15285   */\n      dup3\n        /* \"#utility.yul\":15272:15290   */\n      add\n        /* \"#utility.yul\":15264:15290   */\n      swap1\n      pop\n        /* \"#utility.yul\":15336:15345   */\n      dup2\n        /* \"#utility.yul\":15330:15334   */\n      dup2\n        /* \"#utility.yul\":15326:15346   */\n      sub\n        /* \"#utility.yul\":15322:15323   */\n      0x00\n        /* \"#utility.yul\":15311:15320   */\n      dup4\n        /* \"#utility.yul\":15307:15324   */\n      add\n        /* \"#utility.yul\":15300:15347   */\n      mstore\n        /* \"#utility.yul\":15364:15495   */\n      tag_503\n        /* \"#utility.yul\":15490:15494   */\n      dup2\n        /* \"#utility.yul\":15364:15495   */\n      tag_353\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":15356:15495   */\n      swap1\n      pop\n        /* \"#utility.yul\":15083:15502   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15508:15651   */\n    tag_354:\n        /* \"#utility.yul\":15565:15570   */\n      0x00\n        /* \"#utility.yul\":15596:15602   */\n      dup2\n        /* \"#utility.yul\":15590:15603   */\n      mload\n        /* \"#utility.yul\":15581:15603   */\n      swap1\n      pop\n        /* \"#utility.yul\":15612:15645   */\n      tag_505\n        /* \"#utility.yul\":15639:15644   */\n      dup2\n        /* \"#utility.yul\":15612:15645   */\n      tag_327\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":15508:15651   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15657:16008   */\n    tag_235:\n        /* \"#utility.yul\":15727:15733   */\n      0x00\n        /* \"#utility.yul\":15776:15778   */\n      0x20\n        /* \"#utility.yul\":15764:15773   */\n      dup3\n        /* \"#utility.yul\":15755:15762   */\n      dup5\n        /* \"#utility.yul\":15751:15774   */\n      sub\n        /* \"#utility.yul\":15747:15779   */\n      slt\n        /* \"#utility.yul\":15744:15863   */\n      iszero\n      tag_507\n      jumpi\n        /* \"#utility.yul\":15782:15861   */\n      tag_508\n      tag_316\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":15744:15863   */\n    tag_507:\n        /* \"#utility.yul\":15902:15903   */\n      0x00\n        /* \"#utility.yul\":15927:15991   */\n      tag_509\n        /* \"#utility.yul\":15983:15990   */\n      dup5\n        /* \"#utility.yul\":15974:15980   */\n      dup3\n        /* \"#utility.yul\":15963:15972   */\n      dup6\n        /* \"#utility.yul\":15959:15981   */\n      add\n        /* \"#utility.yul\":15927:15991   */\n      tag_354\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":15917:15991   */\n      swap2\n      pop\n        /* \"#utility.yul\":15873:16001   */\n      pop\n        /* \"#utility.yul\":15657:16008   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16014:16192   */\n    tag_355:\n        /* \"#utility.yul\":16154:16184   */\n      0x496e73756666696369656e742042544320696e20636f6e747261637400000000\n        /* \"#utility.yul\":16150:16151   */\n      0x00\n        /* \"#utility.yul\":16142:16148   */\n      dup3\n        /* \"#utility.yul\":16138:16152   */\n      add\n        /* \"#utility.yul\":16131:16185   */\n      mstore\n        /* \"#utility.yul\":16014:16192   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16198:16564   */\n    tag_356:\n        /* \"#utility.yul\":16340:16343   */\n      0x00\n        /* \"#utility.yul\":16361:16428   */\n      tag_512\n        /* \"#utility.yul\":16425:16427   */\n      0x1c\n        /* \"#utility.yul\":16420:16423   */\n      dup4\n        /* \"#utility.yul\":16361:16428   */\n      tag_335\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":16354:16428   */\n      swap2\n      pop\n        /* \"#utility.yul\":16437:16530   */\n      tag_513\n        /* \"#utility.yul\":16526:16529   */\n      dup3\n        /* \"#utility.yul\":16437:16530   */\n      tag_355\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":16555:16557   */\n      0x20\n        /* \"#utility.yul\":16550:16553   */\n      dup3\n        /* \"#utility.yul\":16546:16558   */\n      add\n        /* \"#utility.yul\":16539:16558   */\n      swap1\n      pop\n        /* \"#utility.yul\":16198:16564   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16570:16989   */\n    tag_238:\n        /* \"#utility.yul\":16736:16740   */\n      0x00\n        /* \"#utility.yul\":16774:16776   */\n      0x20\n        /* \"#utility.yul\":16763:16772   */\n      dup3\n        /* \"#utility.yul\":16759:16777   */\n      add\n        /* \"#utility.yul\":16751:16777   */\n      swap1\n      pop\n        /* \"#utility.yul\":16823:16832   */\n      dup2\n        /* \"#utility.yul\":16817:16821   */\n      dup2\n        /* \"#utility.yul\":16813:16833   */\n      sub\n        /* \"#utility.yul\":16809:16810   */\n      0x00\n        /* \"#utility.yul\":16798:16807   */\n      dup4\n        /* \"#utility.yul\":16794:16811   */\n      add\n        /* \"#utility.yul\":16787:16834   */\n      mstore\n        /* \"#utility.yul\":16851:16982   */\n      tag_515\n        /* \"#utility.yul\":16977:16981   */\n      dup2\n        /* \"#utility.yul\":16851:16982   */\n      tag_356\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":16843:16982   */\n      swap1\n      pop\n        /* \"#utility.yul\":16570:16989   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16995:17437   */\n    tag_266:\n        /* \"#utility.yul\":17144:17148   */\n      0x00\n        /* \"#utility.yul\":17182:17184   */\n      0x60\n        /* \"#utility.yul\":17171:17180   */\n      dup3\n        /* \"#utility.yul\":17167:17185   */\n      add\n        /* \"#utility.yul\":17159:17185   */\n      swap1\n      pop\n        /* \"#utility.yul\":17195:17266   */\n      tag_517\n        /* \"#utility.yul\":17263:17264   */\n      0x00\n        /* \"#utility.yul\":17252:17261   */\n      dup4\n        /* \"#utility.yul\":17248:17265   */\n      add\n        /* \"#utility.yul\":17239:17245   */\n      dup7\n        /* \"#utility.yul\":17195:17266   */\n      tag_331\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":17276:17348   */\n      tag_518\n        /* \"#utility.yul\":17344:17346   */\n      0x20\n        /* \"#utility.yul\":17333:17342   */\n      dup4\n        /* \"#utility.yul\":17329:17347   */\n      add\n        /* \"#utility.yul\":17320:17326   */\n      dup6\n        /* \"#utility.yul\":17276:17348   */\n      tag_331\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":17358:17430   */\n      tag_519\n        /* \"#utility.yul\":17426:17428   */\n      0x40\n        /* \"#utility.yul\":17415:17424   */\n      dup4\n        /* \"#utility.yul\":17411:17429   */\n      add\n        /* \"#utility.yul\":17402:17408   */\n      dup5\n        /* \"#utility.yul\":17358:17430   */\n      tag_314\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":16995:17437   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17443:17775   */\n    tag_271:\n        /* \"#utility.yul\":17564:17568   */\n      0x00\n        /* \"#utility.yul\":17602:17604   */\n      0x40\n        /* \"#utility.yul\":17591:17600   */\n      dup3\n        /* \"#utility.yul\":17587:17605   */\n      add\n        /* \"#utility.yul\":17579:17605   */\n      swap1\n      pop\n        /* \"#utility.yul\":17615:17686   */\n      tag_521\n        /* \"#utility.yul\":17683:17684   */\n      0x00\n        /* \"#utility.yul\":17672:17681   */\n      dup4\n        /* \"#utility.yul\":17668:17685   */\n      add\n        /* \"#utility.yul\":17659:17665   */\n      dup6\n        /* \"#utility.yul\":17615:17686   */\n      tag_331\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":17696:17768   */\n      tag_522\n        /* \"#utility.yul\":17764:17766   */\n      0x20\n        /* \"#utility.yul\":17753:17762   */\n      dup4\n        /* \"#utility.yul\":17749:17767   */\n      add\n        /* \"#utility.yul\":17740:17746   */\n      dup5\n        /* \"#utility.yul\":17696:17768   */\n      tag_314\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":17443:17775   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17781:17897   */\n    tag_357:\n        /* \"#utility.yul\":17851:17872   */\n      tag_524\n        /* \"#utility.yul\":17866:17871   */\n      dup2\n        /* \"#utility.yul\":17851:17872   */\n      tag_329\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":17844:17849   */\n      dup2\n        /* \"#utility.yul\":17841:17873   */\n      eq\n        /* \"#utility.yul\":17831:17891   */\n      tag_525\n      jumpi\n        /* \"#utility.yul\":17887:17888   */\n      0x00\n        /* \"#utility.yul\":17884:17885   */\n      dup1\n        /* \"#utility.yul\":17877:17889   */\n      revert\n        /* \"#utility.yul\":17831:17891   */\n    tag_525:\n        /* \"#utility.yul\":17781:17897   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17903:18040   */\n    tag_358:\n        /* \"#utility.yul\":17957:17962   */\n      0x00\n        /* \"#utility.yul\":17988:17994   */\n      dup2\n        /* \"#utility.yul\":17982:17995   */\n      mload\n        /* \"#utility.yul\":17973:17995   */\n      swap1\n      pop\n        /* \"#utility.yul\":18004:18034   */\n      tag_527\n        /* \"#utility.yul\":18028:18033   */\n      dup2\n        /* \"#utility.yul\":18004:18034   */\n      tag_357\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":17903:18040   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18046:18391   */\n    tag_285:\n        /* \"#utility.yul\":18113:18119   */\n      0x00\n        /* \"#utility.yul\":18162:18164   */\n      0x20\n        /* \"#utility.yul\":18150:18159   */\n      dup3\n        /* \"#utility.yul\":18141:18148   */\n      dup5\n        /* \"#utility.yul\":18137:18160   */\n      sub\n        /* \"#utility.yul\":18133:18165   */\n      slt\n        /* \"#utility.yul\":18130:18249   */\n      iszero\n      tag_529\n      jumpi\n        /* \"#utility.yul\":18168:18247   */\n      tag_530\n      tag_316\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":18130:18249   */\n    tag_529:\n        /* \"#utility.yul\":18288:18289   */\n      0x00\n        /* \"#utility.yul\":18313:18374   */\n      tag_531\n        /* \"#utility.yul\":18366:18373   */\n      dup5\n        /* \"#utility.yul\":18357:18363   */\n      dup3\n        /* \"#utility.yul\":18346:18355   */\n      dup6\n        /* \"#utility.yul\":18342:18364   */\n      add\n        /* \"#utility.yul\":18313:18374   */\n      tag_358\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":18303:18374   */\n      swap2\n      pop\n        /* \"#utility.yul\":18259:18384   */\n      pop\n        /* \"#utility.yul\":18046:18391   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18397:18495   */\n    tag_359:\n        /* \"#utility.yul\":18448:18454   */\n      0x00\n        /* \"#utility.yul\":18482:18487   */\n      dup2\n        /* \"#utility.yul\":18476:18488   */\n      mload\n        /* \"#utility.yul\":18466:18488   */\n      swap1\n      pop\n        /* \"#utility.yul\":18397:18495   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18501:18648   */\n    tag_360:\n        /* \"#utility.yul\":18602:18613   */\n      0x00\n        /* \"#utility.yul\":18639:18642   */\n      dup2\n        /* \"#utility.yul\":18624:18642   */\n      swap1\n      pop\n        /* \"#utility.yul\":18501:18648   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18654:18902   */\n    tag_361:\n        /* \"#utility.yul\":18736:18737   */\n      0x00\n        /* \"#utility.yul\":18746:18859   */\n    tag_535:\n        /* \"#utility.yul\":18760:18766   */\n      dup4\n        /* \"#utility.yul\":18757:18758   */\n      dup2\n        /* \"#utility.yul\":18754:18767   */\n      lt\n        /* \"#utility.yul\":18746:18859   */\n      iszero\n      tag_537\n      jumpi\n        /* \"#utility.yul\":18845:18846   */\n      dup1\n        /* \"#utility.yul\":18840:18843   */\n      dup3\n        /* \"#utility.yul\":18836:18847   */\n      add\n        /* \"#utility.yul\":18830:18848   */\n      mload\n        /* \"#utility.yul\":18826:18827   */\n      dup2\n        /* \"#utility.yul\":18821:18824   */\n      dup5\n        /* \"#utility.yul\":18817:18828   */\n      add\n        /* \"#utility.yul\":18810:18849   */\n      mstore\n        /* \"#utility.yul\":18782:18784   */\n      0x20\n        /* \"#utility.yul\":18779:18780   */\n      dup2\n        /* \"#utility.yul\":18775:18785   */\n      add\n        /* \"#utility.yul\":18770:18785   */\n      swap1\n      pop\n        /* \"#utility.yul\":18746:18859   */\n      jump(tag_535)\n    tag_537:\n        /* \"#utility.yul\":18893:18894   */\n      0x00\n        /* \"#utility.yul\":18884:18890   */\n      dup5\n        /* \"#utility.yul\":18879:18882   */\n      dup5\n        /* \"#utility.yul\":18875:18891   */\n      add\n        /* \"#utility.yul\":18868:18895   */\n      mstore\n        /* \"#utility.yul\":18716:18902   */\n      pop\n        /* \"#utility.yul\":18654:18902   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18908:19294   */\n    tag_362:\n        /* \"#utility.yul\":19012:19015   */\n      0x00\n        /* \"#utility.yul\":19040:19078   */\n      tag_539\n        /* \"#utility.yul\":19072:19077   */\n      dup3\n        /* \"#utility.yul\":19040:19078   */\n      tag_359\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":19094:19182   */\n      tag_540\n        /* \"#utility.yul\":19175:19181   */\n      dup2\n        /* \"#utility.yul\":19170:19173   */\n      dup6\n        /* \"#utility.yul\":19094:19182   */\n      tag_360\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":19087:19182   */\n      swap4\n      pop\n        /* \"#utility.yul\":19191:19256   */\n      tag_541\n        /* \"#utility.yul\":19249:19255   */\n      dup2\n        /* \"#utility.yul\":19244:19247   */\n      dup6\n        /* \"#utility.yul\":19237:19241   */\n      0x20\n        /* \"#utility.yul\":19230:19235   */\n      dup7\n        /* \"#utility.yul\":19226:19242   */\n      add\n        /* \"#utility.yul\":19191:19256   */\n      tag_361\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":19281:19287   */\n      dup1\n        /* \"#utility.yul\":19276:19279   */\n      dup5\n        /* \"#utility.yul\":19272:19288   */\n      add\n        /* \"#utility.yul\":19265:19288   */\n      swap2\n      pop\n        /* \"#utility.yul\":19016:19294   */\n      pop\n        /* \"#utility.yul\":18908:19294   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19300:19571   */\n    tag_296:\n        /* \"#utility.yul\":19430:19433   */\n      0x00\n        /* \"#utility.yul\":19452:19545   */\n      tag_543\n        /* \"#utility.yul\":19541:19544   */\n      dup3\n        /* \"#utility.yul\":19532:19538   */\n      dup5\n        /* \"#utility.yul\":19452:19545   */\n      tag_362\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":19445:19545   */\n      swap2\n      pop\n        /* \"#utility.yul\":19562:19565   */\n      dup2\n        /* \"#utility.yul\":19555:19565   */\n      swap1\n      pop\n        /* \"#utility.yul\":19300:19571   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212205727f18691e4eec948595c84a9e106ca36f54798dfa6d564e0ea40331243351d64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_975": {
									"entryPoint": null,
									"id": 975,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 471,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 745,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 766,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 830,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_535257d937ceb2997eb47681103ba11d606f9e1e617540d05fb326bc7328ad1e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 930,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 845,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_535257d937ceb2997eb47681103ba11d606f9e1e617540d05fb326bc7328ad1e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 965,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 872,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 704,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 672,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 667,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_535257d937ceb2997eb47681103ba11d606f9e1e617540d05fb326bc7328ad1e": {
									"entryPoint": 889,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 722,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2858:7",
										"nodeType": "YulBlock",
										"src": "0:2858:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:7",
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nativeSrc": "57:19:7",
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:7",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nativeSrc": "67:9:7",
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:7",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nativeSrc": "177:28:7",
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:7",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:7",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nativeSrc": "187:12:7",
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nativeSrc": "187:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nativeSrc": "300:28:7",
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:7",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:7",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nativeSrc": "310:12:7",
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nativeSrc": "310:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nativeSrc": "379:81:7",
													"nodeType": "YulBlock",
													"src": "379:81:7",
													"statements": [
														{
															"nativeSrc": "389:65:7",
															"nodeType": "YulAssignment",
															"src": "389:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:7",
																		"nodeType": "YulLiteral",
																		"src": "411:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:7"
																},
																"nativeSrc": "400:54:7",
																"nodeType": "YulFunctionCall",
																"src": "400:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:7",
														"nodeType": "YulTypedName",
														"src": "361:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:7",
														"nodeType": "YulTypedName",
														"src": "371:7:7",
														"type": ""
													}
												],
												"src": "334:126:7"
											},
											{
												"body": {
													"nativeSrc": "511:51:7",
													"nodeType": "YulBlock",
													"src": "511:51:7",
													"statements": [
														{
															"nativeSrc": "521:35:7",
															"nodeType": "YulAssignment",
															"src": "521:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:7"
																},
																"nativeSrc": "532:24:7",
																"nodeType": "YulFunctionCall",
																"src": "532:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:7",
														"nodeType": "YulTypedName",
														"src": "493:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:7",
														"nodeType": "YulTypedName",
														"src": "503:7:7",
														"type": ""
													}
												],
												"src": "466:96:7"
											},
											{
												"body": {
													"nativeSrc": "611:79:7",
													"nodeType": "YulBlock",
													"src": "611:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:7",
																"nodeType": "YulBlock",
																"src": "668:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:7",
																					"nodeType": "YulLiteral",
																					"src": "677:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:7",
																					"nodeType": "YulLiteral",
																					"src": "680:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:7"
																			},
																			"nativeSrc": "670:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:7"
																		},
																		"nativeSrc": "670:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:7"
																				},
																				"nativeSrc": "641:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:7"
																		},
																		"nativeSrc": "631:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:7"
																},
																"nativeSrc": "624:43:7",
																"nodeType": "YulFunctionCall",
																"src": "624:43:7"
															},
															"nativeSrc": "621:63:7",
															"nodeType": "YulIf",
															"src": "621:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:7",
														"nodeType": "YulTypedName",
														"src": "604:5:7",
														"type": ""
													}
												],
												"src": "568:122:7"
											},
											{
												"body": {
													"nativeSrc": "759:80:7",
													"nodeType": "YulBlock",
													"src": "759:80:7",
													"statements": [
														{
															"nativeSrc": "769:22:7",
															"nodeType": "YulAssignment",
															"src": "769:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:7"
																},
																"nativeSrc": "778:13:7",
																"nodeType": "YulFunctionCall",
																"src": "778:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:7"
																},
																"nativeSrc": "800:33:7",
																"nodeType": "YulFunctionCall",
																"src": "800:33:7"
															},
															"nativeSrc": "800:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:7"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:7",
														"nodeType": "YulTypedName",
														"src": "737:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:7",
														"nodeType": "YulTypedName",
														"src": "745:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:7",
														"nodeType": "YulTypedName",
														"src": "753:5:7",
														"type": ""
													}
												],
												"src": "696:143:7"
											},
											{
												"body": {
													"nativeSrc": "939:413:7",
													"nodeType": "YulBlock",
													"src": "939:413:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "985:83:7",
																"nodeType": "YulBlock",
																"src": "985:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "987:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "987:77:7"
																			},
																			"nativeSrc": "987:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "987:79:7"
																		},
																		"nativeSrc": "987:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "987:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "960:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "960:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "969:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "969:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "956:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "956:3:7"
																		},
																		"nativeSrc": "956:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "956:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "981:2:7",
																		"nodeType": "YulLiteral",
																		"src": "981:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "952:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "952:3:7"
																},
																"nativeSrc": "952:32:7",
																"nodeType": "YulFunctionCall",
																"src": "952:32:7"
															},
															"nativeSrc": "949:119:7",
															"nodeType": "YulIf",
															"src": "949:119:7"
														},
														{
															"nativeSrc": "1078:128:7",
															"nodeType": "YulBlock",
															"src": "1078:128:7",
															"statements": [
																{
																	"nativeSrc": "1093:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1093:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1107:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1107:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1097:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1097:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1122:74:7",
																	"nodeType": "YulAssignment",
																	"src": "1122:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1168:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1168:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1179:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1179:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1164:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1164:3:7"
																				},
																				"nativeSrc": "1164:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1164:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1188:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1188:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1132:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "1132:31:7"
																		},
																		"nativeSrc": "1132:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1132:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1122:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1122:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1216:129:7",
															"nodeType": "YulBlock",
															"src": "1216:129:7",
															"statements": [
																{
																	"nativeSrc": "1231:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1231:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1245:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1245:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1235:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1235:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1261:74:7",
																	"nodeType": "YulAssignment",
																	"src": "1261:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1307:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1307:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1318:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1318:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1303:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1303:3:7"
																				},
																				"nativeSrc": "1303:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1303:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1327:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1327:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1271:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "1271:31:7"
																		},
																		"nativeSrc": "1271:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1271:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1261:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1261:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nativeSrc": "845:507:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "901:9:7",
														"nodeType": "YulTypedName",
														"src": "901:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "912:7:7",
														"nodeType": "YulTypedName",
														"src": "912:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "924:6:7",
														"nodeType": "YulTypedName",
														"src": "924:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "932:6:7",
														"nodeType": "YulTypedName",
														"src": "932:6:7",
														"type": ""
													}
												],
												"src": "845:507:7"
											},
											{
												"body": {
													"nativeSrc": "1423:53:7",
													"nodeType": "YulBlock",
													"src": "1423:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1440:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1440:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1463:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1463:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1445:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "1445:17:7"
																		},
																		"nativeSrc": "1445:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1445:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1433:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1433:6:7"
																},
																"nativeSrc": "1433:37:7",
																"nodeType": "YulFunctionCall",
																"src": "1433:37:7"
															},
															"nativeSrc": "1433:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "1433:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1358:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1411:5:7",
														"nodeType": "YulTypedName",
														"src": "1411:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1418:3:7",
														"nodeType": "YulTypedName",
														"src": "1418:3:7",
														"type": ""
													}
												],
												"src": "1358:118:7"
											},
											{
												"body": {
													"nativeSrc": "1580:124:7",
													"nodeType": "YulBlock",
													"src": "1580:124:7",
													"statements": [
														{
															"nativeSrc": "1590:26:7",
															"nodeType": "YulAssignment",
															"src": "1590:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1602:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1602:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1613:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1613:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1598:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1598:3:7"
																},
																"nativeSrc": "1598:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1598:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1590:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1590:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1670:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1670:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1683:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1683:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1694:1:7",
																				"nodeType": "YulLiteral",
																				"src": "1694:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1679:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1679:3:7"
																		},
																		"nativeSrc": "1679:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1679:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1626:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "1626:43:7"
																},
																"nativeSrc": "1626:71:7",
																"nodeType": "YulFunctionCall",
																"src": "1626:71:7"
															},
															"nativeSrc": "1626:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "1626:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1482:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1552:9:7",
														"nodeType": "YulTypedName",
														"src": "1552:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1564:6:7",
														"nodeType": "YulTypedName",
														"src": "1564:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1575:4:7",
														"nodeType": "YulTypedName",
														"src": "1575:4:7",
														"type": ""
													}
												],
												"src": "1482:222:7"
											},
											{
												"body": {
													"nativeSrc": "1806:73:7",
													"nodeType": "YulBlock",
													"src": "1806:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1823:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1823:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1828:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1828:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1816:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1816:6:7"
																},
																"nativeSrc": "1816:19:7",
																"nodeType": "YulFunctionCall",
																"src": "1816:19:7"
															},
															"nativeSrc": "1816:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "1816:19:7"
														},
														{
															"nativeSrc": "1844:29:7",
															"nodeType": "YulAssignment",
															"src": "1844:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1863:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1863:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1868:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1868:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1859:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1859:3:7"
																},
																"nativeSrc": "1859:14:7",
																"nodeType": "YulFunctionCall",
																"src": "1859:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1844:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "1844:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1710:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1778:3:7",
														"nodeType": "YulTypedName",
														"src": "1778:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1783:6:7",
														"nodeType": "YulTypedName",
														"src": "1783:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1794:11:7",
														"nodeType": "YulTypedName",
														"src": "1794:11:7",
														"type": ""
													}
												],
												"src": "1710:169:7"
											},
											{
												"body": {
													"nativeSrc": "1991:67:7",
													"nodeType": "YulBlock",
													"src": "1991:67:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "2013:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2013:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2021:1:7",
																				"nodeType": "YulLiteral",
																				"src": "2021:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2009:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2009:3:7"
																		},
																		"nativeSrc": "2009:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2009:14:7"
																	},
																	{
																		"hexValue": "496e76616c696420746f6b656e20616464726573736573",
																		"kind": "string",
																		"nativeSrc": "2025:25:7",
																		"nodeType": "YulLiteral",
																		"src": "2025:25:7",
																		"type": "",
																		"value": "Invalid token addresses"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2002:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2002:6:7"
																},
																"nativeSrc": "2002:49:7",
																"nodeType": "YulFunctionCall",
																"src": "2002:49:7"
															},
															"nativeSrc": "2002:49:7",
															"nodeType": "YulExpressionStatement",
															"src": "2002:49:7"
														}
													]
												},
												"name": "store_literal_in_memory_535257d937ceb2997eb47681103ba11d606f9e1e617540d05fb326bc7328ad1e",
												"nativeSrc": "1885:173:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "1983:6:7",
														"nodeType": "YulTypedName",
														"src": "1983:6:7",
														"type": ""
													}
												],
												"src": "1885:173:7"
											},
											{
												"body": {
													"nativeSrc": "2210:220:7",
													"nodeType": "YulBlock",
													"src": "2210:220:7",
													"statements": [
														{
															"nativeSrc": "2220:74:7",
															"nodeType": "YulAssignment",
															"src": "2220:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2286:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2286:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2291:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2291:2:7",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2227:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "2227:58:7"
																},
																"nativeSrc": "2227:67:7",
																"nodeType": "YulFunctionCall",
																"src": "2227:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2220:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2220:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2392:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2392:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_535257d937ceb2997eb47681103ba11d606f9e1e617540d05fb326bc7328ad1e",
																	"nativeSrc": "2303:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "2303:88:7"
																},
																"nativeSrc": "2303:93:7",
																"nodeType": "YulFunctionCall",
																"src": "2303:93:7"
															},
															"nativeSrc": "2303:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "2303:93:7"
														},
														{
															"nativeSrc": "2405:19:7",
															"nodeType": "YulAssignment",
															"src": "2405:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2416:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2416:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2421:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2421:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2412:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2412:3:7"
																},
																"nativeSrc": "2412:12:7",
																"nodeType": "YulFunctionCall",
																"src": "2412:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2405:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2405:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_535257d937ceb2997eb47681103ba11d606f9e1e617540d05fb326bc7328ad1e_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2064:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2198:3:7",
														"nodeType": "YulTypedName",
														"src": "2198:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2206:3:7",
														"nodeType": "YulTypedName",
														"src": "2206:3:7",
														"type": ""
													}
												],
												"src": "2064:366:7"
											},
											{
												"body": {
													"nativeSrc": "2607:248:7",
													"nodeType": "YulBlock",
													"src": "2607:248:7",
													"statements": [
														{
															"nativeSrc": "2617:26:7",
															"nodeType": "YulAssignment",
															"src": "2617:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2629:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2629:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2640:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2640:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2625:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2625:3:7"
																},
																"nativeSrc": "2625:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2625:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2617:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2617:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2664:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2664:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2675:1:7",
																				"nodeType": "YulLiteral",
																				"src": "2675:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2660:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2660:3:7"
																		},
																		"nativeSrc": "2660:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2660:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2683:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "2683:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2689:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2689:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2679:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2679:3:7"
																		},
																		"nativeSrc": "2679:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2679:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2653:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2653:6:7"
																},
																"nativeSrc": "2653:47:7",
																"nodeType": "YulFunctionCall",
																"src": "2653:47:7"
															},
															"nativeSrc": "2653:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "2653:47:7"
														},
														{
															"nativeSrc": "2709:139:7",
															"nodeType": "YulAssignment",
															"src": "2709:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "2843:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2843:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_535257d937ceb2997eb47681103ba11d606f9e1e617540d05fb326bc7328ad1e_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2717:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "2717:124:7"
																},
																"nativeSrc": "2717:131:7",
																"nodeType": "YulFunctionCall",
																"src": "2717:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2709:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2709:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_535257d937ceb2997eb47681103ba11d606f9e1e617540d05fb326bc7328ad1e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2436:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2587:9:7",
														"nodeType": "YulTypedName",
														"src": "2587:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2602:4:7",
														"nodeType": "YulTypedName",
														"src": "2602:4:7",
														"type": ""
													}
												],
												"src": "2436:419:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_535257d937ceb2997eb47681103ba11d606f9e1e617540d05fb326bc7328ad1e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid token addresses\")\n\n    }\n\n    function abi_encode_t_stringliteral_535257d937ceb2997eb47681103ba11d606f9e1e617540d05fb326bc7328ad1e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_535257d937ceb2997eb47681103ba11d606f9e1e617540d05fb326bc7328ad1e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_535257d937ceb2997eb47681103ba11d606f9e1e617540d05fb326bc7328ad1e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_535257d937ceb2997eb47681103ba11d606f9e1e617540d05fb326bc7328ad1e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60c06040526000600155600060025534801561001a57600080fd5b50604051612afa380380612afa833981810160405281019061003c91906102fe565b33600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100af5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100a6919061034d565b60405180910390fd5b6100be816101d760201b60201c565b50600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141580156101295750600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b610168576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161015f906103c5565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff168152505050506103e5565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102cb826102a0565b9050919050565b6102db816102c0565b81146102e657600080fd5b50565b6000815190506102f8816102d2565b92915050565b600080604083850312156103155761031461029b565b5b6000610323858286016102e9565b9250506020610334858286016102e9565b9150509250929050565b610347816102c0565b82525050565b6000602082019050610362600083018461033e565b92915050565b600082825260208201905092915050565b7f496e76616c696420746f6b656e20616464726573736573000000000000000000600082015250565b60006103af601783610368565b91506103ba82610379565b602082019050919050565b600060208201905081810360008301526103de816103a2565b9050919050565b60805160a0516126bf61043b600039600081816106fd015281816107f801528181610d3b01528181610e330152818161130f01526114930152600081816107d401528181610a8e0152610fc601526126bf6000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c8063a6b6d798116100f9578063e02a4dfd11610097578063e8a7da8e11610071578063e8a7da8e1461050c578063f2fde38b1461053c578063f4925de514610558578063f69f1e4a14610576576101c4565b8063e02a4dfd1461048e578063e11932cf146104ac578063e86ef40b146104dc576101c4565b8063bd09085a116100d3578063bd09085a146103f4578063d1a4056414610424578063d9e69a0514610440578063dac3fc3f1461045e576101c4565b8063a6b6d7981461038c578063b6f7132f146103a8578063bad4a01f146103d8576101c4565b8063691d1eb31161016657806373b4086b1161014057806373b4086b146102ef5780638da5cb5b1461032257806390b4588b14610340578063a27a944d1461035c576101c4565b8063691d1eb3146102975780636e35f124146102c7578063715018a6146102e5576101c4565b80631bf6c21b116101a25780631bf6c21b146102215780632792949d1461023f5780635b72a33a1461025d5780636112fe2e1461027b576101c4565b80630307c4a1146101c95780630917e776146101e7578063190ef1e614610205575b600080fd5b6101d16105a6565b6040516101de9190611ce5565b60405180910390f35b6101ef6105b0565b6040516101fc9190611ce5565b60405180910390f35b61021f600480360381019061021a9190611d63565b6105ba565b005b6102296107d2565b6040516102369190611def565b60405180910390f35b6102476107f6565b6040516102549190611def565b60405180910390f35b61026561081a565b6040516102729190611ce5565b60405180910390f35b61029560048036038101906102909190611e36565b61081f565b005b6102b160048036038101906102ac9190611d63565b610b25565b6040516102be9190611ce5565b60405180910390f35b6102cf610b86565b6040516102dc9190611ce5565b60405180910390f35b6102ed610b8b565b005b61030960048036038101906103049190611d63565b610b9f565b6040516103199493929190611e7e565b60405180910390f35b61032a610bdc565b6040516103379190611ed2565b60405180910390f35b61035a60048036038101906103559190611e36565b610c05565b005b61037660048036038101906103719190611d63565b610dd0565b6040516103839190611ce5565b60405180910390f35b6103a660048036038101906103a19190611e36565b610de8565b005b6103c260048036038101906103bd9190611d63565b610f32565b6040516103cf9190611ce5565b60405180910390f35b6103f260048036038101906103ed9190611e36565b610f7b565b005b61040e60048036038101906104099190611d63565b6110b2565b60405161041b9190611ce5565b60405180910390f35b61043e60048036038101906104399190611e36565b6110fb565b005b61044861153f565b6040516104559190611ce5565b60405180910390f35b61047860048036038101906104739190611d63565b611544565b6040516104859190611ce5565b60405180910390f35b61049661158d565b6040516104a39190611ce5565b60405180910390f35b6104c660048036038101906104c19190611d63565b611594565b6040516104d39190611ce5565b60405180910390f35b6104f660048036038101906104f19190611d63565b611654565b6040516105039190611ce5565b60405180910390f35b61052660048036038101906105219190611d63565b6116c7565b6040516105339190611f60565b60405180910390f35b61055660048036038101906105519190611d63565b611759565b005b6105606117df565b60405161056d9190611ce5565b60405180910390f35b610590600480360381019061058b9190611d63565b6117e8565b60405161059d9190611ce5565b60405180910390f35b6000600254905090565b6000600154905090565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060030160009054906101000a900460ff1661064e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064590611fd8565b60405180910390fd5b6000620151808260020154426106649190612027565b61066e919061208a565b9050601e8111156106b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ab90612107565b60405180910390fd5b6000618e9482600585600001546106cb9190612127565b6106d59190612127565b6106df919061208a565b905060008184600001546106f39190612169565b90506107428530837f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16611800909392919063ffffffff16565b60008460030160006101000a81548160ff02191690831515021790555083600001546002546107719190612027565b6002819055503373ffffffffffffffffffffffffffffffffffffffff167fc7ce0a35f17b490de2a317e7fecb2cae86b1abffb03800b2f4928235213826988560000154846040516107c392919061219d565b60405180910390a25050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b600581565b60008111610862576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085990612212565b60405180910390fd5b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156108e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108db9061227e565b60405180910390fd5b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff16610941576000610985565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001545b9050600060646096836109989190612127565b6109a2919061208a565b90508083600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546109f09190612027565b1015610a31576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2890612310565b60405180910390fd5b82600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610a809190612027565b92505081905550610ad233847f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166118829092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167fc30fcfbcaac9e0deffa719714eaa82396ff506a0d0d0eebe170830177288715d84604051610b189190611ce5565b60405180910390a2505050565b600060646050600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b759190612127565b610b7f919061208a565b9050919050565b605081565b610b93611901565b610b9d6000611988565b565b60036020528060005260406000206000915090508060000154908060010154908060020154908060030160009054906101000a900460ff16905084565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008111610c48576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3f90612212565b60405180910390fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610cca576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cc19061237c565b60405180910390fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d199190612027565b9250508190555080600154610d2e9190612027565b600181905550610d7f33827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166118829092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f46cb947848d6e66f42fd865aff4e0b9765da557ed05874db5a3c931ccea58ef182604051610dc59190611ce5565b60405180910390a250565b60056020528060005260406000206000915090505481565b60008111610e2b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e2290612212565b60405180910390fd5b610e783330837f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16611800909392919063ffffffff16565b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610ec79190612169565b9250508190555080600154610edc9190612169565b6001819055503373ffffffffffffffffffffffffffffffffffffffff167ec876900062bf6768530bd9be84c146f5c051f4a50a5bf7fbcdd9ed4c8fb15482604051610f279190611ce5565b60405180910390a250565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008111610fbe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fb590612212565b60405180910390fd5b61100b3330837f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16611800909392919063ffffffff16565b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461105a9190612169565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167fd7243f6f8212d5188fd054141cf6ea89cfc0d91facb8c3afe2f88a1358480142826040516110a79190611ce5565b60405180910390a250565b6000600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000811161113e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161113590612212565b60405180910390fd5b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff16156111ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111c59061240e565b60405180910390fd5b600060646096836111df9190612127565b6111e9919061208a565b905080600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561126d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112649061227e565b60405180910390fd5b600060646050600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546112bd9190612127565b6112c7919061208a565b90508083111561130c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113039061247a565b60405180910390fd5b827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016113669190611ed2565b602060405180830381865afa158015611383573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113a791906124af565b10156113e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113df90612528565b60405180910390fd5b604051806080016040528084815260200183815260200142815260200160011515815250600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000155602082015181600101556040820151816002015560608201518160030160006101000a81548160ff0219169083151502179055509050506114d733847f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166118829092919063ffffffff16565b826002546114e59190612169565b6002819055503373ffffffffffffffffffffffffffffffffffffffff167e6b9bb4766cf5ab74b890df959e4fad0e54b1c3885e49c9541d36253a6e39e6848460405161153292919061219d565b60405180910390a2505050565b609681565b6000600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b62278d0081565b600080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060030160009054906101000a900460ff1615611649576000620151808260020154426116059190612027565b61160f919061208a565b90506000618e9482600585600001546116289190612127565b6116329190612127565b61163c919061208a565b905080935050505061164f565b60009150505b919050565b600080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060030160009054906101000a900460ff16156116bc5780600001549150506116c2565b60009150505b919050565b6116cf611ca2565b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060800160405290816000820154815260200160018201548152602001600282015481526020016003820160009054906101000a900460ff1615151515815250509050919050565b611761611901565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036117d35760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016117ca9190611ed2565b60405180910390fd5b6117dc81611988565b50565b60006005905090565b60046020528060005260406000206000915090505481565b61187c848573ffffffffffffffffffffffffffffffffffffffff166323b872dd86868660405160240161183593929190612548565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611a4c565b50505050565b6118fc838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85856040516024016118b592919061257f565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611a4c565b505050565b611909611ae3565b73ffffffffffffffffffffffffffffffffffffffff16611927610bdc565b73ffffffffffffffffffffffffffffffffffffffff16146119865761194a611ae3565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161197d9190611ed2565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000611a77828473ffffffffffffffffffffffffffffffffffffffff16611aeb90919063ffffffff16565b90506000815114158015611a9c575080806020019051810190611a9a91906125d4565b155b15611ade57826040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401611ad59190611ed2565b60405180910390fd5b505050565b600033905090565b6060611af983836000611b01565b905092915050565b606081471015611b4857306040517fcd786059000000000000000000000000000000000000000000000000000000008152600401611b3f9190611ed2565b60405180910390fd5b6000808573ffffffffffffffffffffffffffffffffffffffff168486604051611b719190612672565b60006040518083038185875af1925050503d8060008114611bae576040519150601f19603f3d011682016040523d82523d6000602084013e611bb3565b606091505b5091509150611bc3868383611bce565b925050509392505050565b606082611be357611bde82611c5d565b611c55565b60008251148015611c0b575060008473ffffffffffffffffffffffffffffffffffffffff163b145b15611c4d57836040517f9996b315000000000000000000000000000000000000000000000000000000008152600401611c449190611ed2565b60405180910390fd5b819050611c56565b5b9392505050565b600081511115611c705780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60405180608001604052806000815260200160008152602001600081526020016000151581525090565b6000819050919050565b611cdf81611ccc565b82525050565b6000602082019050611cfa6000830184611cd6565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611d3082611d05565b9050919050565b611d4081611d25565b8114611d4b57600080fd5b50565b600081359050611d5d81611d37565b92915050565b600060208284031215611d7957611d78611d00565b5b6000611d8784828501611d4e565b91505092915050565b6000819050919050565b6000611db5611db0611dab84611d05565b611d90565b611d05565b9050919050565b6000611dc782611d9a565b9050919050565b6000611dd982611dbc565b9050919050565b611de981611dce565b82525050565b6000602082019050611e046000830184611de0565b92915050565b611e1381611ccc565b8114611e1e57600080fd5b50565b600081359050611e3081611e0a565b92915050565b600060208284031215611e4c57611e4b611d00565b5b6000611e5a84828501611e21565b91505092915050565b60008115159050919050565b611e7881611e63565b82525050565b6000608082019050611e936000830187611cd6565b611ea06020830186611cd6565b611ead6040830185611cd6565b611eba6060830184611e6f565b95945050505050565b611ecc81611d25565b82525050565b6000602082019050611ee76000830184611ec3565b92915050565b611ef681611ccc565b82525050565b611f0581611e63565b82525050565b608082016000820151611f216000850182611eed565b506020820151611f346020850182611eed565b506040820151611f476040850182611eed565b506060820151611f5a6060850182611efc565b50505050565b6000608082019050611f756000830184611f0b565b92915050565b600082825260208201905092915050565b7f4e6f20616374697665206c6f616e000000000000000000000000000000000000600082015250565b6000611fc2600e83611f7b565b9150611fcd82611f8c565b602082019050919050565b60006020820190508181036000830152611ff181611fb5565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061203282611ccc565b915061203d83611ccc565b925082820390508181111561205557612054611ff8565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061209582611ccc565b91506120a083611ccc565b9250826120b0576120af61205b565b5b828204905092915050565b7f4c6f616e206475726174696f6e20657863656564656420333020646179730000600082015250565b60006120f1601e83611f7b565b91506120fc826120bb565b602082019050919050565b60006020820190508181036000830152612120816120e4565b9050919050565b600061213282611ccc565b915061213d83611ccc565b925082820261214b81611ccc565b9150828204841483151761216257612161611ff8565b5b5092915050565b600061217482611ccc565b915061217f83611ccc565b925082820190508082111561219757612196611ff8565b5b92915050565b60006040820190506121b26000830185611cd6565b6121bf6020830184611cd6565b9392505050565b7f416d6f756e74206d7573742062652067726561746572207468616e2030000000600082015250565b60006121fc601d83611f7b565b9150612207826121c6565b602082019050919050565b6000602082019050818103600083015261222b816121ef565b9050919050565b7f496e73756666696369656e7420636f6c6c61746572616c000000000000000000600082015250565b6000612268601783611f7b565b915061227382612232565b602082019050919050565b600060208201905081810360008301526122978161225b565b9050919050565b7f5769746864726177616c20776f756c6420756e646572636f6c6c61746572616c60008201527f697a65206c6f616e000000000000000000000000000000000000000000000000602082015250565b60006122fa602883611f7b565b91506123058261229e565b604082019050919050565b60006020820190508181036000830152612329816122ed565b9050919050565b7f496e73756666696369656e742062616c616e6365000000000000000000000000600082015250565b6000612366601483611f7b565b915061237182612330565b602082019050919050565b6000602082019050818103600083015261239581612359565b9050919050565b7f4578697374696e67206c6f616e206d757374206265207265706169642066697260008201527f7374000000000000000000000000000000000000000000000000000000000000602082015250565b60006123f8602283611f7b565b91506124038261239c565b604082019050919050565b60006020820190508181036000830152612427816123eb565b9050919050565b7f426f72726f7720616d6f756e742065786365656473206c696d69740000000000600082015250565b6000612464601b83611f7b565b915061246f8261242e565b602082019050919050565b6000602082019050818103600083015261249381612457565b9050919050565b6000815190506124a981611e0a565b92915050565b6000602082840312156124c5576124c4611d00565b5b60006124d38482850161249a565b91505092915050565b7f496e73756666696369656e742042544320696e20636f6e747261637400000000600082015250565b6000612512601c83611f7b565b915061251d826124dc565b602082019050919050565b6000602082019050818103600083015261254181612505565b9050919050565b600060608201905061255d6000830186611ec3565b61256a6020830185611ec3565b6125776040830184611cd6565b949350505050565b60006040820190506125946000830185611ec3565b6125a16020830184611cd6565b9392505050565b6125b181611e63565b81146125bc57600080fd5b50565b6000815190506125ce816125a8565b92915050565b6000602082840312156125ea576125e9611d00565b5b60006125f8848285016125bf565b91505092915050565b600081519050919050565b600081905092915050565b60005b8381101561263557808201518184015260208101905061261a565b60008484015250505050565b600061264c82612601565b612656818561260c565b9350612666818560208601612617565b80840191505092915050565b600061267e8284612641565b91508190509291505056fea26469706673582212205727f18691e4eec948595c84a9e106ca36f54798dfa6d564e0ea40331243351d64736f6c634300081a0033",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x1 SSTORE PUSH1 0x0 PUSH1 0x2 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2AFA CODESIZE SUB DUP1 PUSH2 0x2AFA DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x3C SWAP2 SWAP1 PUSH2 0x2FE JUMP JUMPDEST CALLER PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAF JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA6 SWAP2 SWAP1 PUSH2 0x34D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBE DUP2 PUSH2 0x1D7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x129 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST PUSH2 0x168 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15F SWAP1 PUSH2 0x3C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP PUSH2 0x3E5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CB DUP3 PUSH2 0x2A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2DB DUP2 PUSH2 0x2C0 JUMP JUMPDEST DUP2 EQ PUSH2 0x2E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2F8 DUP2 PUSH2 0x2D2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x315 JUMPI PUSH2 0x314 PUSH2 0x29B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x323 DUP6 DUP3 DUP7 ADD PUSH2 0x2E9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x334 DUP6 DUP3 DUP7 ADD PUSH2 0x2E9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x347 DUP2 PUSH2 0x2C0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x362 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x33E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420746F6B656E20616464726573736573000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AF PUSH1 0x17 DUP4 PUSH2 0x368 JUMP JUMPDEST SWAP2 POP PUSH2 0x3BA DUP3 PUSH2 0x379 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3DE DUP2 PUSH2 0x3A2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x26BF PUSH2 0x43B PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x6FD ADD MSTORE DUP2 DUP2 PUSH2 0x7F8 ADD MSTORE DUP2 DUP2 PUSH2 0xD3B ADD MSTORE DUP2 DUP2 PUSH2 0xE33 ADD MSTORE DUP2 DUP2 PUSH2 0x130F ADD MSTORE PUSH2 0x1493 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x7D4 ADD MSTORE DUP2 DUP2 PUSH2 0xA8E ADD MSTORE PUSH2 0xFC6 ADD MSTORE PUSH2 0x26BF PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA6B6D798 GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xE02A4DFD GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xE8A7DA8E GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE8A7DA8E EQ PUSH2 0x50C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x53C JUMPI DUP1 PUSH4 0xF4925DE5 EQ PUSH2 0x558 JUMPI DUP1 PUSH4 0xF69F1E4A EQ PUSH2 0x576 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0xE02A4DFD EQ PUSH2 0x48E JUMPI DUP1 PUSH4 0xE11932CF EQ PUSH2 0x4AC JUMPI DUP1 PUSH4 0xE86EF40B EQ PUSH2 0x4DC JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0xBD09085A GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0xBD09085A EQ PUSH2 0x3F4 JUMPI DUP1 PUSH4 0xD1A40564 EQ PUSH2 0x424 JUMPI DUP1 PUSH4 0xD9E69A05 EQ PUSH2 0x440 JUMPI DUP1 PUSH4 0xDAC3FC3F EQ PUSH2 0x45E JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0xA6B6D798 EQ PUSH2 0x38C JUMPI DUP1 PUSH4 0xB6F7132F EQ PUSH2 0x3A8 JUMPI DUP1 PUSH4 0xBAD4A01F EQ PUSH2 0x3D8 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x691D1EB3 GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x73B4086B GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x73B4086B EQ PUSH2 0x2EF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x322 JUMPI DUP1 PUSH4 0x90B4588B EQ PUSH2 0x340 JUMPI DUP1 PUSH4 0xA27A944D EQ PUSH2 0x35C JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x691D1EB3 EQ PUSH2 0x297 JUMPI DUP1 PUSH4 0x6E35F124 EQ PUSH2 0x2C7 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2E5 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x1BF6C21B GT PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x1BF6C21B EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x2792949D EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0x5B72A33A EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0x6112FE2E EQ PUSH2 0x27B JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x307C4A1 EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x917E776 EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0x190EF1E6 EQ PUSH2 0x205 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D1 PUSH2 0x5A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DE SWAP2 SWAP1 PUSH2 0x1CE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EF PUSH2 0x5B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FC SWAP2 SWAP1 PUSH2 0x1CE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21A SWAP2 SWAP1 PUSH2 0x1D63 JUMP JUMPDEST PUSH2 0x5BA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x229 PUSH2 0x7D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x1DEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x247 PUSH2 0x7F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x254 SWAP2 SWAP1 PUSH2 0x1DEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x265 PUSH2 0x81A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x272 SWAP2 SWAP1 PUSH2 0x1CE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x295 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x290 SWAP2 SWAP1 PUSH2 0x1E36 JUMP JUMPDEST PUSH2 0x81F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AC SWAP2 SWAP1 PUSH2 0x1D63 JUMP JUMPDEST PUSH2 0xB25 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BE SWAP2 SWAP1 PUSH2 0x1CE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CF PUSH2 0xB86 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DC SWAP2 SWAP1 PUSH2 0x1CE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2ED PUSH2 0xB8B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x309 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x304 SWAP2 SWAP1 PUSH2 0x1D63 JUMP JUMPDEST PUSH2 0xB9F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x319 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32A PUSH2 0xBDC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x337 SWAP2 SWAP1 PUSH2 0x1ED2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x355 SWAP2 SWAP1 PUSH2 0x1E36 JUMP JUMPDEST PUSH2 0xC05 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x376 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x371 SWAP2 SWAP1 PUSH2 0x1D63 JUMP JUMPDEST PUSH2 0xDD0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x383 SWAP2 SWAP1 PUSH2 0x1CE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A1 SWAP2 SWAP1 PUSH2 0x1E36 JUMP JUMPDEST PUSH2 0xDE8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BD SWAP2 SWAP1 PUSH2 0x1D63 JUMP JUMPDEST PUSH2 0xF32 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CF SWAP2 SWAP1 PUSH2 0x1CE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3ED SWAP2 SWAP1 PUSH2 0x1E36 JUMP JUMPDEST PUSH2 0xF7B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x40E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x409 SWAP2 SWAP1 PUSH2 0x1D63 JUMP JUMPDEST PUSH2 0x10B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x41B SWAP2 SWAP1 PUSH2 0x1CE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x43E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x439 SWAP2 SWAP1 PUSH2 0x1E36 JUMP JUMPDEST PUSH2 0x10FB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x448 PUSH2 0x153F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x455 SWAP2 SWAP1 PUSH2 0x1CE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x478 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x473 SWAP2 SWAP1 PUSH2 0x1D63 JUMP JUMPDEST PUSH2 0x1544 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x485 SWAP2 SWAP1 PUSH2 0x1CE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x496 PUSH2 0x158D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A3 SWAP2 SWAP1 PUSH2 0x1CE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4C1 SWAP2 SWAP1 PUSH2 0x1D63 JUMP JUMPDEST PUSH2 0x1594 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D3 SWAP2 SWAP1 PUSH2 0x1CE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F1 SWAP2 SWAP1 PUSH2 0x1D63 JUMP JUMPDEST PUSH2 0x1654 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x503 SWAP2 SWAP1 PUSH2 0x1CE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x526 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x521 SWAP2 SWAP1 PUSH2 0x1D63 JUMP JUMPDEST PUSH2 0x16C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x533 SWAP2 SWAP1 PUSH2 0x1F60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x556 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x551 SWAP2 SWAP1 PUSH2 0x1D63 JUMP JUMPDEST PUSH2 0x1759 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x560 PUSH2 0x17DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x56D SWAP2 SWAP1 PUSH2 0x1CE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x590 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x58B SWAP2 SWAP1 PUSH2 0x1D63 JUMP JUMPDEST PUSH2 0x17E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x59D SWAP2 SWAP1 PUSH2 0x1CE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x64E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x645 SWAP1 PUSH2 0x1FD8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x15180 DUP3 PUSH1 0x2 ADD SLOAD TIMESTAMP PUSH2 0x664 SWAP2 SWAP1 PUSH2 0x2027 JUMP JUMPDEST PUSH2 0x66E SWAP2 SWAP1 PUSH2 0x208A JUMP JUMPDEST SWAP1 POP PUSH1 0x1E DUP2 GT ISZERO PUSH2 0x6B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AB SWAP1 PUSH2 0x2107 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x8E94 DUP3 PUSH1 0x5 DUP6 PUSH1 0x0 ADD SLOAD PUSH2 0x6CB SWAP2 SWAP1 PUSH2 0x2127 JUMP JUMPDEST PUSH2 0x6D5 SWAP2 SWAP1 PUSH2 0x2127 JUMP JUMPDEST PUSH2 0x6DF SWAP2 SWAP1 PUSH2 0x208A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP5 PUSH1 0x0 ADD SLOAD PUSH2 0x6F3 SWAP2 SWAP1 PUSH2 0x2169 JUMP JUMPDEST SWAP1 POP PUSH2 0x742 DUP6 ADDRESS DUP4 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1800 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0x0 ADD SLOAD PUSH1 0x2 SLOAD PUSH2 0x771 SWAP2 SWAP1 PUSH2 0x2027 JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC7CE0A35F17B490DE2A317E7FECB2CAE86B1ABFFB03800B2F492823521382698 DUP6 PUSH1 0x0 ADD SLOAD DUP5 PUSH1 0x40 MLOAD PUSH2 0x7C3 SWAP3 SWAP2 SWAP1 PUSH2 0x219D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x5 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x862 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x859 SWAP1 PUSH2 0x2212 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x8E4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8DB SWAP1 PUSH2 0x227E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x941 JUMPI PUSH1 0x0 PUSH2 0x985 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x64 PUSH1 0x96 DUP4 PUSH2 0x998 SWAP2 SWAP1 PUSH2 0x2127 JUMP JUMPDEST PUSH2 0x9A2 SWAP2 SWAP1 PUSH2 0x208A JUMP JUMPDEST SWAP1 POP DUP1 DUP4 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x9F0 SWAP2 SWAP1 PUSH2 0x2027 JUMP JUMPDEST LT ISZERO PUSH2 0xA31 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA28 SWAP1 PUSH2 0x2310 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA80 SWAP2 SWAP1 PUSH2 0x2027 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xAD2 CALLER DUP5 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1882 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC30FCFBCAAC9E0DEFFA719714EAA82396FF506A0D0D0EEBE170830177288715D DUP5 PUSH1 0x40 MLOAD PUSH2 0xB18 SWAP2 SWAP1 PUSH2 0x1CE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH1 0x50 PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xB75 SWAP2 SWAP1 PUSH2 0x2127 JUMP JUMPDEST PUSH2 0xB7F SWAP2 SWAP1 PUSH2 0x208A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x50 DUP2 JUMP JUMPDEST PUSH2 0xB93 PUSH2 0x1901 JUMP JUMPDEST PUSH2 0xB9D PUSH1 0x0 PUSH2 0x1988 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xC48 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC3F SWAP1 PUSH2 0x2212 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0xCCA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC1 SWAP1 PUSH2 0x237C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xD19 SWAP2 SWAP1 PUSH2 0x2027 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 SLOAD PUSH2 0xD2E SWAP2 SWAP1 PUSH2 0x2027 JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH2 0xD7F CALLER DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1882 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x46CB947848D6E66F42FD865AFF4E0B9765DA557ED05874DB5A3C931CCEA58EF1 DUP3 PUSH1 0x40 MLOAD PUSH2 0xDC5 SWAP2 SWAP1 PUSH2 0x1CE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xE2B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE22 SWAP1 PUSH2 0x2212 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE78 CALLER ADDRESS DUP4 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1800 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xEC7 SWAP2 SWAP1 PUSH2 0x2169 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 SLOAD PUSH2 0xEDC SWAP2 SWAP1 PUSH2 0x2169 JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH31 0xC876900062BF6768530BD9BE84C146F5C051F4A50A5BF7FBCDD9ED4C8FB154 DUP3 PUSH1 0x40 MLOAD PUSH2 0xF27 SWAP2 SWAP1 PUSH2 0x1CE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xFBE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB5 SWAP1 PUSH2 0x2212 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x100B CALLER ADDRESS DUP4 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1800 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x105A SWAP2 SWAP1 PUSH2 0x2169 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD7243F6F8212D5188FD054141CF6EA89CFC0D91FACB8C3AFE2F88A1358480142 DUP3 PUSH1 0x40 MLOAD PUSH2 0x10A7 SWAP2 SWAP1 PUSH2 0x1CE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x113E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1135 SWAP1 PUSH2 0x2212 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x11CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11C5 SWAP1 PUSH2 0x240E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH1 0x96 DUP4 PUSH2 0x11DF SWAP2 SWAP1 PUSH2 0x2127 JUMP JUMPDEST PUSH2 0x11E9 SWAP2 SWAP1 PUSH2 0x208A JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x126D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1264 SWAP1 PUSH2 0x227E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH1 0x50 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x12BD SWAP2 SWAP1 PUSH2 0x2127 JUMP JUMPDEST PUSH2 0x12C7 SWAP2 SWAP1 PUSH2 0x208A JUMP JUMPDEST SWAP1 POP DUP1 DUP4 GT ISZERO PUSH2 0x130C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1303 SWAP1 PUSH2 0x247A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1366 SWAP2 SWAP1 PUSH2 0x1ED2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1383 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13A7 SWAP2 SWAP1 PUSH2 0x24AF JUMP JUMPDEST LT ISZERO PUSH2 0x13E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13DF SWAP1 PUSH2 0x2528 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH2 0x14D7 CALLER DUP5 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1882 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x2 SLOAD PUSH2 0x14E5 SWAP2 SWAP1 PUSH2 0x2169 JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH31 0x6B9BB4766CF5AB74B890DF959E4FAD0E54B1C3885E49C9541D36253A6E39E6 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1532 SWAP3 SWAP2 SWAP1 PUSH2 0x219D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x96 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x278D00 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1649 JUMPI PUSH1 0x0 PUSH3 0x15180 DUP3 PUSH1 0x2 ADD SLOAD TIMESTAMP PUSH2 0x1605 SWAP2 SWAP1 PUSH2 0x2027 JUMP JUMPDEST PUSH2 0x160F SWAP2 SWAP1 PUSH2 0x208A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x8E94 DUP3 PUSH1 0x5 DUP6 PUSH1 0x0 ADD SLOAD PUSH2 0x1628 SWAP2 SWAP1 PUSH2 0x2127 JUMP JUMPDEST PUSH2 0x1632 SWAP2 SWAP1 PUSH2 0x2127 JUMP JUMPDEST PUSH2 0x163C SWAP2 SWAP1 PUSH2 0x208A JUMP JUMPDEST SWAP1 POP DUP1 SWAP4 POP POP POP POP PUSH2 0x164F JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x16BC JUMPI DUP1 PUSH1 0x0 ADD SLOAD SWAP2 POP POP PUSH2 0x16C2 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16CF PUSH2 0x1CA2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1761 PUSH2 0x1901 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x17D3 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17CA SWAP2 SWAP1 PUSH2 0x1ED2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x17DC DUP2 PUSH2 0x1988 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x187C DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1835 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2548 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1A4C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x18FC DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x18B5 SWAP3 SWAP2 SWAP1 PUSH2 0x257F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1A4C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1909 PUSH2 0x1AE3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1927 PUSH2 0xBDC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1986 JUMPI PUSH2 0x194A PUSH2 0x1AE3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x197D SWAP2 SWAP1 PUSH2 0x1ED2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A77 DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1AEB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0x1A9C JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1A9A SWAP2 SWAP1 PUSH2 0x25D4 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1ADE JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AD5 SWAP2 SWAP1 PUSH2 0x1ED2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1AF9 DUP4 DUP4 PUSH1 0x0 PUSH2 0x1B01 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0x1B48 JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B3F SWAP2 SWAP1 PUSH2 0x1ED2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1B71 SWAP2 SWAP1 PUSH2 0x2672 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1BAE JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1BB3 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1BC3 DUP7 DUP4 DUP4 PUSH2 0x1BCE JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x1BE3 JUMPI PUSH2 0x1BDE DUP3 PUSH2 0x1C5D JUMP JUMPDEST PUSH2 0x1C55 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x1C0B JUMPI POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1C4D JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C44 SWAP2 SWAP1 PUSH2 0x1ED2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x1C56 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x1C70 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CDF DUP2 PUSH2 0x1CCC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CFA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1CD6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D30 DUP3 PUSH2 0x1D05 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D40 DUP2 PUSH2 0x1D25 JUMP JUMPDEST DUP2 EQ PUSH2 0x1D4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D5D DUP2 PUSH2 0x1D37 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D79 JUMPI PUSH2 0x1D78 PUSH2 0x1D00 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D87 DUP5 DUP3 DUP6 ADD PUSH2 0x1D4E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DB5 PUSH2 0x1DB0 PUSH2 0x1DAB DUP5 PUSH2 0x1D05 JUMP JUMPDEST PUSH2 0x1D90 JUMP JUMPDEST PUSH2 0x1D05 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DC7 DUP3 PUSH2 0x1D9A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DD9 DUP3 PUSH2 0x1DBC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DE9 DUP2 PUSH2 0x1DCE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E04 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1DE0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1E13 DUP2 PUSH2 0x1CCC JUMP JUMPDEST DUP2 EQ PUSH2 0x1E1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E30 DUP2 PUSH2 0x1E0A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E4C JUMPI PUSH2 0x1E4B PUSH2 0x1D00 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E5A DUP5 DUP3 DUP6 ADD PUSH2 0x1E21 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E78 DUP2 PUSH2 0x1E63 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1E93 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1CD6 JUMP JUMPDEST PUSH2 0x1EA0 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1CD6 JUMP JUMPDEST PUSH2 0x1EAD PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1CD6 JUMP JUMPDEST PUSH2 0x1EBA PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1E6F JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1ECC DUP2 PUSH2 0x1D25 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1EE7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1EC3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1EF6 DUP2 PUSH2 0x1CCC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1F05 DUP2 PUSH2 0x1E63 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x80 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x1F21 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x1EED JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x1F34 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x1EED JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x1F47 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x1EED JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x1F5A PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x1EFC JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1F75 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1F0B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F20616374697665206C6F616E000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FC2 PUSH1 0xE DUP4 PUSH2 0x1F7B JUMP JUMPDEST SWAP2 POP PUSH2 0x1FCD DUP3 PUSH2 0x1F8C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FF1 DUP2 PUSH2 0x1FB5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2032 DUP3 PUSH2 0x1CCC JUMP JUMPDEST SWAP2 POP PUSH2 0x203D DUP4 PUSH2 0x1CCC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2055 JUMPI PUSH2 0x2054 PUSH2 0x1FF8 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2095 DUP3 PUSH2 0x1CCC JUMP JUMPDEST SWAP2 POP PUSH2 0x20A0 DUP4 PUSH2 0x1CCC JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x20B0 JUMPI PUSH2 0x20AF PUSH2 0x205B JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4C6F616E206475726174696F6E20657863656564656420333020646179730000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20F1 PUSH1 0x1E DUP4 PUSH2 0x1F7B JUMP JUMPDEST SWAP2 POP PUSH2 0x20FC DUP3 PUSH2 0x20BB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2120 DUP2 PUSH2 0x20E4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2132 DUP3 PUSH2 0x1CCC JUMP JUMPDEST SWAP2 POP PUSH2 0x213D DUP4 PUSH2 0x1CCC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x214B DUP2 PUSH2 0x1CCC JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2162 JUMPI PUSH2 0x2161 PUSH2 0x1FF8 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2174 DUP3 PUSH2 0x1CCC JUMP JUMPDEST SWAP2 POP PUSH2 0x217F DUP4 PUSH2 0x1CCC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2197 JUMPI PUSH2 0x2196 PUSH2 0x1FF8 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x21B2 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1CD6 JUMP JUMPDEST PUSH2 0x21BF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1CD6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21FC PUSH1 0x1D DUP4 PUSH2 0x1F7B JUMP JUMPDEST SWAP2 POP PUSH2 0x2207 DUP3 PUSH2 0x21C6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x222B DUP2 PUSH2 0x21EF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420636F6C6C61746572616C000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2268 PUSH1 0x17 DUP4 PUSH2 0x1F7B JUMP JUMPDEST SWAP2 POP PUSH2 0x2273 DUP3 PUSH2 0x2232 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2297 DUP2 PUSH2 0x225B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5769746864726177616C20776F756C6420756E646572636F6C6C61746572616C PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x697A65206C6F616E000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22FA PUSH1 0x28 DUP4 PUSH2 0x1F7B JUMP JUMPDEST SWAP2 POP PUSH2 0x2305 DUP3 PUSH2 0x229E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2329 DUP2 PUSH2 0x22ED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2366 PUSH1 0x14 DUP4 PUSH2 0x1F7B JUMP JUMPDEST SWAP2 POP PUSH2 0x2371 DUP3 PUSH2 0x2330 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2395 DUP2 PUSH2 0x2359 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4578697374696E67206C6F616E206D7573742062652072657061696420666972 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7374000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23F8 PUSH1 0x22 DUP4 PUSH2 0x1F7B JUMP JUMPDEST SWAP2 POP PUSH2 0x2403 DUP3 PUSH2 0x239C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2427 DUP2 PUSH2 0x23EB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x426F72726F7720616D6F756E742065786365656473206C696D69740000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2464 PUSH1 0x1B DUP4 PUSH2 0x1F7B JUMP JUMPDEST SWAP2 POP PUSH2 0x246F DUP3 PUSH2 0x242E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2493 DUP2 PUSH2 0x2457 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x24A9 DUP2 PUSH2 0x1E0A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24C5 JUMPI PUSH2 0x24C4 PUSH2 0x1D00 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x24D3 DUP5 DUP3 DUP6 ADD PUSH2 0x249A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742042544320696E20636F6E747261637400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2512 PUSH1 0x1C DUP4 PUSH2 0x1F7B JUMP JUMPDEST SWAP2 POP PUSH2 0x251D DUP3 PUSH2 0x24DC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2541 DUP2 PUSH2 0x2505 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x255D PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1EC3 JUMP JUMPDEST PUSH2 0x256A PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1EC3 JUMP JUMPDEST PUSH2 0x2577 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1CD6 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2594 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1EC3 JUMP JUMPDEST PUSH2 0x25A1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1CD6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x25B1 DUP2 PUSH2 0x1E63 JUMP JUMPDEST DUP2 EQ PUSH2 0x25BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x25CE DUP2 PUSH2 0x25A8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x25EA JUMPI PUSH2 0x25E9 PUSH2 0x1D00 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x25F8 DUP5 DUP3 DUP6 ADD PUSH2 0x25BF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2635 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x261A JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x264C DUP3 PUSH2 0x2601 JUMP JUMPDEST PUSH2 0x2656 DUP2 DUP6 PUSH2 0x260C JUMP JUMPDEST SWAP4 POP PUSH2 0x2666 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2617 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x267E DUP3 DUP5 PUSH2 0x2641 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPI 0x27 CALL DUP7 SWAP2 0xE4 0xEE 0xC9 BASEFEE MSIZE TLOAD DUP5 0xA9 0xE1 MOD 0xCA CALLDATASIZE CREATE2 SELFBALANCE SWAP9 0xDF 0xA6 0xD5 PUSH5 0xE0EA403312 NUMBER CALLDATALOAD SAR PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "235:6685:6:-:0;;;750:1;720:31;;816:1;784:33;;1624:243;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1672:10;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1731:1:6::1;1715:18;;:4;:18;;;;:40;;;;;1753:1;1737:18;;:4;:18;;;;1715:40;1694:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;1827:4;1814:18;;;;;;;;::::0;::::1;1855:4;1842:18;;;;;;;;::::0;::::1;1624:243:::0;;235:6685;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:7:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;1358:118::-;1445:24;1463:5;1445:24;:::i;:::-;1440:3;1433:37;1358:118;;:::o;1482:222::-;1575:4;1613:2;1602:9;1598:18;1590:26;;1626:71;1694:1;1683:9;1679:17;1670:6;1626:71;:::i;:::-;1482:222;;;;:::o;1710:169::-;1794:11;1828:6;1823:3;1816:19;1868:4;1863:3;1859:14;1844:29;;1710:169;;;;:::o;1885:173::-;2025:25;2021:1;2013:6;2009:14;2002:49;1885:173;:::o;2064:366::-;2206:3;2227:67;2291:2;2286:3;2227:67;:::i;:::-;2220:74;;2303:93;2392:3;2303:93;:::i;:::-;2421:2;2416:3;2412:12;2405:19;;2064:366;;;:::o;2436:419::-;2602:4;2640:2;2629:9;2625:18;2617:26;;2689:9;2683:4;2679:20;2675:1;2664:9;2660:17;2653:47;2717:131;2843:4;2717:131;:::i;:::-;2709:139;;2436:419;;;:::o;235:6685:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@BORROWABLE_RATIO_857": {
									"entryPoint": 2950,
									"id": 857,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@BTC_851": {
									"entryPoint": 2038,
									"id": 851,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@COLLATERAL_RATIO_854": {
									"entryPoint": 5439,
									"id": 854,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@INTEREST_RATE_860": {
									"entryPoint": 2074,
									"id": 860,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@LOAN_DURATION_863": {
									"entryPoint": 5517,
									"id": 863,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@USD_848": {
									"entryPoint": 2002,
									"id": 848,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_callOptionalReturn_501": {
									"entryPoint": 6732,
									"id": 501,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 6401,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_816": {
									"entryPoint": 6883,
									"id": 816,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revert_803": {
									"entryPoint": 7261,
									"id": 803,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 6536,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@borrowBTC_1201": {
									"entryPoint": 4347,
									"id": 1201,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@calculateInterest_1479": {
									"entryPoint": 5524,
									"id": 1479,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@depositBTC_1274": {
									"entryPoint": 3560,
									"id": 1274,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@depositCollateral_1013": {
									"entryPoint": 3963,
									"id": 1013,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@functionCallWithValue_671": {
									"entryPoint": 6913,
									"id": 671,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@functionCall_625": {
									"entryPoint": 6891,
									"id": 625,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getBorrowableAmount_1218": {
									"entryPoint": 2853,
									"id": 1218,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getCurrentApy_1344": {
									"entryPoint": 6111,
									"id": 1344,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getLenderBalance_1504": {
									"entryPoint": 4274,
									"id": 1504,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getLoanDetails_1492": {
									"entryPoint": 5831,
									"id": 1492,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getTotalBorrowed_1520": {
									"entryPoint": 1446,
									"id": 1520,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getTotalStaked_1512": {
									"entryPoint": 1456,
									"id": 1512,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getUserBorrowed_1544": {
									"entryPoint": 5716,
									"id": 1544,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getUserCollateral_1230": {
									"entryPoint": 3890,
									"id": 1230,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getUserStaked_1336": {
									"entryPoint": 5444,
									"id": 1336,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@lenderBalances_894": {
									"entryPoint": 3536,
									"id": 894,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@loans_886": {
									"entryPoint": 2975,
									"id": 886,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 3036,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 2955,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@repayLoan_1432": {
									"entryPoint": 1466,
									"id": 1432,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@safeTransferFrom_338": {
									"entryPoint": 6144,
									"id": 338,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_311": {
									"entryPoint": 6274,
									"id": 311,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 5977,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@userCollateral_890": {
									"entryPoint": 6120,
									"id": 890,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_763": {
									"entryPoint": 7118,
									"id": 763,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@withdrawBTC_1324": {
									"entryPoint": 3077,
									"id": 1324,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdrawCollateral_1093": {
									"entryPoint": 2079,
									"id": 1093,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 7502,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 9663,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 7713,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 9370,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7523,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 9684,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7734,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 9391,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7875,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool": {
									"entryPoint": 7932,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 7791,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 9793,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_IERC20_$225_to_t_address_fromStack": {
									"entryPoint": 7648,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_0b13f011926795557929f438867da0012b263fbc8a672de2f5c7ef42a2687115_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9303,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2ad103ba1dc4e3e245c2b9ad8cbdb9bd016961ea614c79fe06c4a9b921438ddf_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9477,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8687,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9049,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_520c8012aa686709e412a6a69ffe245d6710e9b6ae69e933e702530a547be766_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8941,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_5d763a4fa76dcd5af45b10ebcfff84ed4476e04c563aef69c0eaf01d8a5ccfba_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8117,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_889a3b76d8842e701e057a17fd85bfbebe0b3cfb874080561fa0d002c2c44c71_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9195,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a7a7a3281abb2373d36b680552e8d3f537ad1508b3db7c57c338d13cfa2860a9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8420,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c9a6548b8b08f3e884692ff4b4c5cb58e1633771e97667c355d207e48aa0a8aa_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8795,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_Loan_$881_memory_ptr_to_t_struct$_Loan_$881_memory_ptr_fromStack": {
									"entryPoint": 7947,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 7917,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 7382,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 9842,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7890,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 9544,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 9599,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$225__to_t_address__fromStack_reversed": {
									"entryPoint": 7663,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0b13f011926795557929f438867da0012b263fbc8a672de2f5c7ef42a2687115__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9338,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2ad103ba1dc4e3e245c2b9ad8cbdb9bd016961ea614c79fe06c4a9b921438ddf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9512,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8722,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9084,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_520c8012aa686709e412a6a69ffe245d6710e9b6ae69e933e702530a547be766__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8976,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5d763a4fa76dcd5af45b10ebcfff84ed4476e04c563aef69c0eaf01d8a5ccfba__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8152,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_889a3b76d8842e701e057a17fd85bfbebe0b3cfb874080561fa0d002c2c44c71__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9230,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a7a7a3281abb2373d36b680552e8d3f537ad1508b3db7c57c338d13cfa2860a9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8455,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c9a6548b8b08f3e884692ff4b4c5cb58e1633771e97667c355d207e48aa0a8aa__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8830,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_Loan_$881_memory_ptr__to_t_struct$_Loan_$881_memory_ptr__fromStack_reversed": {
									"entryPoint": 8032,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 7397,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 8605,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed": {
									"entryPoint": 7806,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 9729,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 9740,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 8059,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8553,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 8330,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 8487,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 8231,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 7461,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 7779,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 7429,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 7372,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$225_to_t_address": {
									"entryPoint": 7630,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 7612,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 7578,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 9751,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 7568,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 8184,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 8283,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 7424,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_0b13f011926795557929f438867da0012b263fbc8a672de2f5c7ef42a2687115": {
									"entryPoint": 9262,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_2ad103ba1dc4e3e245c2b9ad8cbdb9bd016961ea614c79fe06c4a9b921438ddf": {
									"entryPoint": 9436,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296": {
									"entryPoint": 8646,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5": {
									"entryPoint": 9008,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_520c8012aa686709e412a6a69ffe245d6710e9b6ae69e933e702530a547be766": {
									"entryPoint": 8862,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_5d763a4fa76dcd5af45b10ebcfff84ed4476e04c563aef69c0eaf01d8a5ccfba": {
									"entryPoint": 8076,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_889a3b76d8842e701e057a17fd85bfbebe0b3cfb874080561fa0d002c2c44c71": {
									"entryPoint": 9116,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a7a7a3281abb2373d36b680552e8d3f537ad1508b3db7c57c338d13cfa2860a9": {
									"entryPoint": 8379,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c9a6548b8b08f3e884692ff4b4c5cb58e1633771e97667c355d207e48aa0a8aa": {
									"entryPoint": 8754,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 7479,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 9640,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 7690,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:19574:7",
										"nodeType": "YulBlock",
										"src": "0:19574:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:7",
													"nodeType": "YulBlock",
													"src": "52:32:7",
													"statements": [
														{
															"nativeSrc": "62:16:7",
															"nodeType": "YulAssignment",
															"src": "62:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:7",
																"nodeType": "YulIdentifier",
																"src": "73:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:7",
														"nodeType": "YulTypedName",
														"src": "34:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:7",
														"nodeType": "YulTypedName",
														"src": "44:7:7",
														"type": ""
													}
												],
												"src": "7:77:7"
											},
											{
												"body": {
													"nativeSrc": "155:53:7",
													"nodeType": "YulBlock",
													"src": "155:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "172:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "195:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "177:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:7"
																		},
																		"nativeSrc": "177:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "165:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:7"
																},
																"nativeSrc": "165:37:7",
																"nodeType": "YulFunctionCall",
																"src": "165:37:7"
															},
															"nativeSrc": "165:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "165:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "90:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "143:5:7",
														"nodeType": "YulTypedName",
														"src": "143:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "150:3:7",
														"nodeType": "YulTypedName",
														"src": "150:3:7",
														"type": ""
													}
												],
												"src": "90:118:7"
											},
											{
												"body": {
													"nativeSrc": "312:124:7",
													"nodeType": "YulBlock",
													"src": "312:124:7",
													"statements": [
														{
															"nativeSrc": "322:26:7",
															"nodeType": "YulAssignment",
															"src": "322:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:7",
																		"nodeType": "YulLiteral",
																		"src": "345:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "330:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:7"
																},
																"nativeSrc": "330:18:7",
																"nodeType": "YulFunctionCall",
																"src": "330:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "322:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "402:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "415:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "426:1:7",
																				"nodeType": "YulLiteral",
																				"src": "426:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "411:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:7"
																		},
																		"nativeSrc": "411:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "358:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:7"
																},
																"nativeSrc": "358:71:7",
																"nodeType": "YulFunctionCall",
																"src": "358:71:7"
															},
															"nativeSrc": "358:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "358:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "214:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "284:9:7",
														"nodeType": "YulTypedName",
														"src": "284:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "296:6:7",
														"nodeType": "YulTypedName",
														"src": "296:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "307:4:7",
														"nodeType": "YulTypedName",
														"src": "307:4:7",
														"type": ""
													}
												],
												"src": "214:222:7"
											},
											{
												"body": {
													"nativeSrc": "482:35:7",
													"nodeType": "YulBlock",
													"src": "482:35:7",
													"statements": [
														{
															"nativeSrc": "492:19:7",
															"nodeType": "YulAssignment",
															"src": "492:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "508:2:7",
																		"nodeType": "YulLiteral",
																		"src": "508:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "502:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "502:5:7"
																},
																"nativeSrc": "502:9:7",
																"nodeType": "YulFunctionCall",
																"src": "502:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "492:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "492:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "442:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "475:6:7",
														"nodeType": "YulTypedName",
														"src": "475:6:7",
														"type": ""
													}
												],
												"src": "442:75:7"
											},
											{
												"body": {
													"nativeSrc": "612:28:7",
													"nodeType": "YulBlock",
													"src": "612:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "629:1:7",
																		"nodeType": "YulLiteral",
																		"src": "629:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "632:1:7",
																		"nodeType": "YulLiteral",
																		"src": "632:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "622:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "622:6:7"
																},
																"nativeSrc": "622:12:7",
																"nodeType": "YulFunctionCall",
																"src": "622:12:7"
															},
															"nativeSrc": "622:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "622:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "523:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "523:117:7"
											},
											{
												"body": {
													"nativeSrc": "735:28:7",
													"nodeType": "YulBlock",
													"src": "735:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "752:1:7",
																		"nodeType": "YulLiteral",
																		"src": "752:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "755:1:7",
																		"nodeType": "YulLiteral",
																		"src": "755:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "745:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "745:6:7"
																},
																"nativeSrc": "745:12:7",
																"nodeType": "YulFunctionCall",
																"src": "745:12:7"
															},
															"nativeSrc": "745:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "745:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "646:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "646:117:7"
											},
											{
												"body": {
													"nativeSrc": "814:81:7",
													"nodeType": "YulBlock",
													"src": "814:81:7",
													"statements": [
														{
															"nativeSrc": "824:65:7",
															"nodeType": "YulAssignment",
															"src": "824:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "839:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "839:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "846:42:7",
																		"nodeType": "YulLiteral",
																		"src": "846:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "835:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "835:3:7"
																},
																"nativeSrc": "835:54:7",
																"nodeType": "YulFunctionCall",
																"src": "835:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "824:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "824:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "769:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "796:5:7",
														"nodeType": "YulTypedName",
														"src": "796:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "806:7:7",
														"nodeType": "YulTypedName",
														"src": "806:7:7",
														"type": ""
													}
												],
												"src": "769:126:7"
											},
											{
												"body": {
													"nativeSrc": "946:51:7",
													"nodeType": "YulBlock",
													"src": "946:51:7",
													"statements": [
														{
															"nativeSrc": "956:35:7",
															"nodeType": "YulAssignment",
															"src": "956:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "985:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "985:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "967:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "967:17:7"
																},
																"nativeSrc": "967:24:7",
																"nodeType": "YulFunctionCall",
																"src": "967:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "956:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "956:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "901:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "928:5:7",
														"nodeType": "YulTypedName",
														"src": "928:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "938:7:7",
														"nodeType": "YulTypedName",
														"src": "938:7:7",
														"type": ""
													}
												],
												"src": "901:96:7"
											},
											{
												"body": {
													"nativeSrc": "1046:79:7",
													"nodeType": "YulBlock",
													"src": "1046:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1103:16:7",
																"nodeType": "YulBlock",
																"src": "1103:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1112:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1112:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1115:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1115:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1105:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1105:6:7"
																			},
																			"nativeSrc": "1105:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1105:12:7"
																		},
																		"nativeSrc": "1105:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1105:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1069:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1069:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1094:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "1094:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1076:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "1076:17:7"
																				},
																				"nativeSrc": "1076:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1076:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1066:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1066:2:7"
																		},
																		"nativeSrc": "1066:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1066:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1059:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1059:6:7"
																},
																"nativeSrc": "1059:43:7",
																"nodeType": "YulFunctionCall",
																"src": "1059:43:7"
															},
															"nativeSrc": "1056:63:7",
															"nodeType": "YulIf",
															"src": "1056:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1003:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1039:5:7",
														"nodeType": "YulTypedName",
														"src": "1039:5:7",
														"type": ""
													}
												],
												"src": "1003:122:7"
											},
											{
												"body": {
													"nativeSrc": "1183:87:7",
													"nodeType": "YulBlock",
													"src": "1183:87:7",
													"statements": [
														{
															"nativeSrc": "1193:29:7",
															"nodeType": "YulAssignment",
															"src": "1193:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1215:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1202:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "1202:12:7"
																},
																"nativeSrc": "1202:20:7",
																"nodeType": "YulFunctionCall",
																"src": "1202:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1193:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1193:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1258:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1258:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1231:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "1231:26:7"
																},
																"nativeSrc": "1231:33:7",
																"nodeType": "YulFunctionCall",
																"src": "1231:33:7"
															},
															"nativeSrc": "1231:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "1231:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1131:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1161:6:7",
														"nodeType": "YulTypedName",
														"src": "1161:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1169:3:7",
														"nodeType": "YulTypedName",
														"src": "1169:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1177:5:7",
														"nodeType": "YulTypedName",
														"src": "1177:5:7",
														"type": ""
													}
												],
												"src": "1131:139:7"
											},
											{
												"body": {
													"nativeSrc": "1342:263:7",
													"nodeType": "YulBlock",
													"src": "1342:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1388:83:7",
																"nodeType": "YulBlock",
																"src": "1388:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1390:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "1390:77:7"
																			},
																			"nativeSrc": "1390:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1390:79:7"
																		},
																		"nativeSrc": "1390:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1390:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1363:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1363:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1372:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1372:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1359:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1359:3:7"
																		},
																		"nativeSrc": "1359:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1359:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1384:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1384:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1355:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1355:3:7"
																},
																"nativeSrc": "1355:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1355:32:7"
															},
															"nativeSrc": "1352:119:7",
															"nodeType": "YulIf",
															"src": "1352:119:7"
														},
														{
															"nativeSrc": "1481:117:7",
															"nodeType": "YulBlock",
															"src": "1481:117:7",
															"statements": [
																{
																	"nativeSrc": "1496:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1496:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1510:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1510:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1500:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1500:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1525:63:7",
																	"nodeType": "YulAssignment",
																	"src": "1525:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1560:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1560:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1571:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1571:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1556:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1556:3:7"
																				},
																				"nativeSrc": "1556:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1556:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1580:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1580:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1535:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "1535:20:7"
																		},
																		"nativeSrc": "1535:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1535:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1525:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1525:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1276:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1312:9:7",
														"nodeType": "YulTypedName",
														"src": "1312:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1323:7:7",
														"nodeType": "YulTypedName",
														"src": "1323:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1335:6:7",
														"nodeType": "YulTypedName",
														"src": "1335:6:7",
														"type": ""
													}
												],
												"src": "1276:329:7"
											},
											{
												"body": {
													"nativeSrc": "1643:28:7",
													"nodeType": "YulBlock",
													"src": "1643:28:7",
													"statements": [
														{
															"nativeSrc": "1653:12:7",
															"nodeType": "YulAssignment",
															"src": "1653:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "1660:5:7",
																"nodeType": "YulIdentifier",
																"src": "1660:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1653:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1653:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1611:60:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1629:5:7",
														"nodeType": "YulTypedName",
														"src": "1629:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1639:3:7",
														"nodeType": "YulTypedName",
														"src": "1639:3:7",
														"type": ""
													}
												],
												"src": "1611:60:7"
											},
											{
												"body": {
													"nativeSrc": "1737:82:7",
													"nodeType": "YulBlock",
													"src": "1737:82:7",
													"statements": [
														{
															"nativeSrc": "1747:66:7",
															"nodeType": "YulAssignment",
															"src": "1747:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1805:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "1805:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "1787:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "1787:17:7"
																				},
																				"nativeSrc": "1787:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1787:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1778:8:7",
																			"nodeType": "YulIdentifier",
																			"src": "1778:8:7"
																		},
																		"nativeSrc": "1778:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1778:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1760:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "1760:17:7"
																},
																"nativeSrc": "1760:53:7",
																"nodeType": "YulFunctionCall",
																"src": "1760:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1747:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "1747:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "1677:142:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1717:5:7",
														"nodeType": "YulTypedName",
														"src": "1717:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1727:9:7",
														"nodeType": "YulTypedName",
														"src": "1727:9:7",
														"type": ""
													}
												],
												"src": "1677:142:7"
											},
											{
												"body": {
													"nativeSrc": "1885:66:7",
													"nodeType": "YulBlock",
													"src": "1885:66:7",
													"statements": [
														{
															"nativeSrc": "1895:50:7",
															"nodeType": "YulAssignment",
															"src": "1895:50:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1939:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1939:5:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "1908:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "1908:30:7"
																},
																"nativeSrc": "1908:37:7",
																"nodeType": "YulFunctionCall",
																"src": "1908:37:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1895:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "1895:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "1825:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1865:5:7",
														"nodeType": "YulTypedName",
														"src": "1865:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1875:9:7",
														"nodeType": "YulTypedName",
														"src": "1875:9:7",
														"type": ""
													}
												],
												"src": "1825:126:7"
											},
											{
												"body": {
													"nativeSrc": "2031:66:7",
													"nodeType": "YulBlock",
													"src": "2031:66:7",
													"statements": [
														{
															"nativeSrc": "2041:50:7",
															"nodeType": "YulAssignment",
															"src": "2041:50:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2085:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2085:5:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "2054:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "2054:30:7"
																},
																"nativeSrc": "2054:37:7",
																"nodeType": "YulFunctionCall",
																"src": "2054:37:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2041:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "2041:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$225_to_t_address",
												"nativeSrc": "1957:140:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2011:5:7",
														"nodeType": "YulTypedName",
														"src": "2011:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2021:9:7",
														"nodeType": "YulTypedName",
														"src": "2021:9:7",
														"type": ""
													}
												],
												"src": "1957:140:7"
											},
											{
												"body": {
													"nativeSrc": "2182:80:7",
													"nodeType": "YulBlock",
													"src": "2182:80:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2199:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2199:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2249:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2249:5:7"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$225_to_t_address",
																			"nativeSrc": "2204:44:7",
																			"nodeType": "YulIdentifier",
																			"src": "2204:44:7"
																		},
																		"nativeSrc": "2204:51:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2204:51:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2192:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2192:6:7"
																},
																"nativeSrc": "2192:64:7",
																"nodeType": "YulFunctionCall",
																"src": "2192:64:7"
															},
															"nativeSrc": "2192:64:7",
															"nodeType": "YulExpressionStatement",
															"src": "2192:64:7"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$225_to_t_address_fromStack",
												"nativeSrc": "2103:159:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2170:5:7",
														"nodeType": "YulTypedName",
														"src": "2170:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2177:3:7",
														"nodeType": "YulTypedName",
														"src": "2177:3:7",
														"type": ""
													}
												],
												"src": "2103:159:7"
											},
											{
												"body": {
													"nativeSrc": "2380:138:7",
													"nodeType": "YulBlock",
													"src": "2380:138:7",
													"statements": [
														{
															"nativeSrc": "2390:26:7",
															"nodeType": "YulAssignment",
															"src": "2390:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2402:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2402:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2413:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2413:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2398:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2398:3:7"
																},
																"nativeSrc": "2398:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2398:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2390:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2390:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2484:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2484:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2497:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2497:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2508:1:7",
																				"nodeType": "YulLiteral",
																				"src": "2508:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2493:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2493:3:7"
																		},
																		"nativeSrc": "2493:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2493:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$225_to_t_address_fromStack",
																	"nativeSrc": "2426:57:7",
																	"nodeType": "YulIdentifier",
																	"src": "2426:57:7"
																},
																"nativeSrc": "2426:85:7",
																"nodeType": "YulFunctionCall",
																"src": "2426:85:7"
															},
															"nativeSrc": "2426:85:7",
															"nodeType": "YulExpressionStatement",
															"src": "2426:85:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$225__to_t_address__fromStack_reversed",
												"nativeSrc": "2268:250:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2352:9:7",
														"nodeType": "YulTypedName",
														"src": "2352:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2364:6:7",
														"nodeType": "YulTypedName",
														"src": "2364:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2375:4:7",
														"nodeType": "YulTypedName",
														"src": "2375:4:7",
														"type": ""
													}
												],
												"src": "2268:250:7"
											},
											{
												"body": {
													"nativeSrc": "2567:79:7",
													"nodeType": "YulBlock",
													"src": "2567:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2624:16:7",
																"nodeType": "YulBlock",
																"src": "2624:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2633:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2633:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2636:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2636:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2626:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2626:6:7"
																			},
																			"nativeSrc": "2626:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2626:12:7"
																		},
																		"nativeSrc": "2626:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2590:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2590:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2615:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "2615:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2597:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "2597:17:7"
																				},
																				"nativeSrc": "2597:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2597:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2587:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2587:2:7"
																		},
																		"nativeSrc": "2587:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2587:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2580:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2580:6:7"
																},
																"nativeSrc": "2580:43:7",
																"nodeType": "YulFunctionCall",
																"src": "2580:43:7"
															},
															"nativeSrc": "2577:63:7",
															"nodeType": "YulIf",
															"src": "2577:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2524:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2560:5:7",
														"nodeType": "YulTypedName",
														"src": "2560:5:7",
														"type": ""
													}
												],
												"src": "2524:122:7"
											},
											{
												"body": {
													"nativeSrc": "2704:87:7",
													"nodeType": "YulBlock",
													"src": "2704:87:7",
													"statements": [
														{
															"nativeSrc": "2714:29:7",
															"nodeType": "YulAssignment",
															"src": "2714:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2736:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2736:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2723:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2723:12:7"
																},
																"nativeSrc": "2723:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2723:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2714:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2714:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2779:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2779:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2752:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "2752:26:7"
																},
																"nativeSrc": "2752:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2752:33:7"
															},
															"nativeSrc": "2752:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2752:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2652:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2682:6:7",
														"nodeType": "YulTypedName",
														"src": "2682:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2690:3:7",
														"nodeType": "YulTypedName",
														"src": "2690:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2698:5:7",
														"nodeType": "YulTypedName",
														"src": "2698:5:7",
														"type": ""
													}
												],
												"src": "2652:139:7"
											},
											{
												"body": {
													"nativeSrc": "2863:263:7",
													"nodeType": "YulBlock",
													"src": "2863:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2909:83:7",
																"nodeType": "YulBlock",
																"src": "2909:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2911:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "2911:77:7"
																			},
																			"nativeSrc": "2911:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2911:79:7"
																		},
																		"nativeSrc": "2911:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2911:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2884:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2884:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2893:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2893:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2880:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2880:3:7"
																		},
																		"nativeSrc": "2880:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2880:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2905:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2905:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2876:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2876:3:7"
																},
																"nativeSrc": "2876:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2876:32:7"
															},
															"nativeSrc": "2873:119:7",
															"nodeType": "YulIf",
															"src": "2873:119:7"
														},
														{
															"nativeSrc": "3002:117:7",
															"nodeType": "YulBlock",
															"src": "3002:117:7",
															"statements": [
																{
																	"nativeSrc": "3017:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3017:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3031:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3031:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3021:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3021:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3046:63:7",
																	"nodeType": "YulAssignment",
																	"src": "3046:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3081:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3081:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3092:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3092:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3077:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3077:3:7"
																				},
																				"nativeSrc": "3077:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3077:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3101:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3101:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3056:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "3056:20:7"
																		},
																		"nativeSrc": "3056:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3056:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3046:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3046:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "2797:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2833:9:7",
														"nodeType": "YulTypedName",
														"src": "2833:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2844:7:7",
														"nodeType": "YulTypedName",
														"src": "2844:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2856:6:7",
														"nodeType": "YulTypedName",
														"src": "2856:6:7",
														"type": ""
													}
												],
												"src": "2797:329:7"
											},
											{
												"body": {
													"nativeSrc": "3174:48:7",
													"nodeType": "YulBlock",
													"src": "3174:48:7",
													"statements": [
														{
															"nativeSrc": "3184:32:7",
															"nodeType": "YulAssignment",
															"src": "3184:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3209:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3209:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3202:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3202:6:7"
																		},
																		"nativeSrc": "3202:13:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3202:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3195:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3195:6:7"
																},
																"nativeSrc": "3195:21:7",
																"nodeType": "YulFunctionCall",
																"src": "3195:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3184:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "3184:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3132:90:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3156:5:7",
														"nodeType": "YulTypedName",
														"src": "3156:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3166:7:7",
														"nodeType": "YulTypedName",
														"src": "3166:7:7",
														"type": ""
													}
												],
												"src": "3132:90:7"
											},
											{
												"body": {
													"nativeSrc": "3287:50:7",
													"nodeType": "YulBlock",
													"src": "3287:50:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3304:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3304:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3324:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3324:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3309:14:7",
																			"nodeType": "YulIdentifier",
																			"src": "3309:14:7"
																		},
																		"nativeSrc": "3309:21:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3309:21:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3297:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3297:6:7"
																},
																"nativeSrc": "3297:34:7",
																"nodeType": "YulFunctionCall",
																"src": "3297:34:7"
															},
															"nativeSrc": "3297:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "3297:34:7"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3228:109:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3275:5:7",
														"nodeType": "YulTypedName",
														"src": "3275:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3282:3:7",
														"nodeType": "YulTypedName",
														"src": "3282:3:7",
														"type": ""
													}
												],
												"src": "3228:109:7"
											},
											{
												"body": {
													"nativeSrc": "3519:365:7",
													"nodeType": "YulBlock",
													"src": "3519:365:7",
													"statements": [
														{
															"nativeSrc": "3529:27:7",
															"nodeType": "YulAssignment",
															"src": "3529:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3541:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3541:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3552:3:7",
																		"nodeType": "YulLiteral",
																		"src": "3552:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3537:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3537:3:7"
																},
																"nativeSrc": "3537:19:7",
																"nodeType": "YulFunctionCall",
																"src": "3537:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3529:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3529:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3610:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3610:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3623:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3623:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3634:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3634:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3619:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3619:3:7"
																		},
																		"nativeSrc": "3619:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3619:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3566:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "3566:43:7"
																},
																"nativeSrc": "3566:71:7",
																"nodeType": "YulFunctionCall",
																"src": "3566:71:7"
															},
															"nativeSrc": "3566:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "3566:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "3691:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3691:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3704:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3704:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3715:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3715:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3700:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3700:3:7"
																		},
																		"nativeSrc": "3700:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3700:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3647:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "3647:43:7"
																},
																"nativeSrc": "3647:72:7",
																"nodeType": "YulFunctionCall",
																"src": "3647:72:7"
															},
															"nativeSrc": "3647:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "3647:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "3773:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3773:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3786:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3786:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3797:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3797:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3782:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3782:3:7"
																		},
																		"nativeSrc": "3782:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3782:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3729:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "3729:43:7"
																},
																"nativeSrc": "3729:72:7",
																"nodeType": "YulFunctionCall",
																"src": "3729:72:7"
															},
															"nativeSrc": "3729:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "3729:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "3849:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3849:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3862:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3862:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3873:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3873:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3858:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3858:3:7"
																		},
																		"nativeSrc": "3858:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3858:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3811:37:7",
																	"nodeType": "YulIdentifier",
																	"src": "3811:37:7"
																},
																"nativeSrc": "3811:66:7",
																"nodeType": "YulFunctionCall",
																"src": "3811:66:7"
															},
															"nativeSrc": "3811:66:7",
															"nodeType": "YulExpressionStatement",
															"src": "3811:66:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed",
												"nativeSrc": "3343:541:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3467:9:7",
														"nodeType": "YulTypedName",
														"src": "3467:9:7",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3479:6:7",
														"nodeType": "YulTypedName",
														"src": "3479:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3487:6:7",
														"nodeType": "YulTypedName",
														"src": "3487:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3495:6:7",
														"nodeType": "YulTypedName",
														"src": "3495:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3503:6:7",
														"nodeType": "YulTypedName",
														"src": "3503:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3514:4:7",
														"nodeType": "YulTypedName",
														"src": "3514:4:7",
														"type": ""
													}
												],
												"src": "3343:541:7"
											},
											{
												"body": {
													"nativeSrc": "3955:53:7",
													"nodeType": "YulBlock",
													"src": "3955:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3972:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3972:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3995:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3995:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3977:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "3977:17:7"
																		},
																		"nativeSrc": "3977:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3977:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3965:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3965:6:7"
																},
																"nativeSrc": "3965:37:7",
																"nodeType": "YulFunctionCall",
																"src": "3965:37:7"
															},
															"nativeSrc": "3965:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "3965:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3890:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3943:5:7",
														"nodeType": "YulTypedName",
														"src": "3943:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3950:3:7",
														"nodeType": "YulTypedName",
														"src": "3950:3:7",
														"type": ""
													}
												],
												"src": "3890:118:7"
											},
											{
												"body": {
													"nativeSrc": "4112:124:7",
													"nodeType": "YulBlock",
													"src": "4112:124:7",
													"statements": [
														{
															"nativeSrc": "4122:26:7",
															"nodeType": "YulAssignment",
															"src": "4122:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4134:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4134:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4145:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4145:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4130:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4130:3:7"
																},
																"nativeSrc": "4130:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4130:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4122:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4122:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4202:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4202:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4215:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4215:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4226:1:7",
																				"nodeType": "YulLiteral",
																				"src": "4226:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4211:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4211:3:7"
																		},
																		"nativeSrc": "4211:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4211:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4158:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "4158:43:7"
																},
																"nativeSrc": "4158:71:7",
																"nodeType": "YulFunctionCall",
																"src": "4158:71:7"
															},
															"nativeSrc": "4158:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "4158:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "4014:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4084:9:7",
														"nodeType": "YulTypedName",
														"src": "4084:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4096:6:7",
														"nodeType": "YulTypedName",
														"src": "4096:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4107:4:7",
														"nodeType": "YulTypedName",
														"src": "4107:4:7",
														"type": ""
													}
												],
												"src": "4014:222:7"
											},
											{
												"body": {
													"nativeSrc": "4297:53:7",
													"nodeType": "YulBlock",
													"src": "4297:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4314:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4314:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4337:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4337:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "4319:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "4319:17:7"
																		},
																		"nativeSrc": "4319:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4319:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4307:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4307:6:7"
																},
																"nativeSrc": "4307:37:7",
																"nodeType": "YulFunctionCall",
																"src": "4307:37:7"
															},
															"nativeSrc": "4307:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "4307:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "4242:108:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4285:5:7",
														"nodeType": "YulTypedName",
														"src": "4285:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4292:3:7",
														"nodeType": "YulTypedName",
														"src": "4292:3:7",
														"type": ""
													}
												],
												"src": "4242:108:7"
											},
											{
												"body": {
													"nativeSrc": "4405:50:7",
													"nodeType": "YulBlock",
													"src": "4405:50:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4422:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4422:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4442:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4442:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "4427:14:7",
																			"nodeType": "YulIdentifier",
																			"src": "4427:14:7"
																		},
																		"nativeSrc": "4427:21:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4427:21:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4415:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4415:6:7"
																},
																"nativeSrc": "4415:34:7",
																"nodeType": "YulFunctionCall",
																"src": "4415:34:7"
															},
															"nativeSrc": "4415:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "4415:34:7"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool",
												"nativeSrc": "4356:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4393:5:7",
														"nodeType": "YulTypedName",
														"src": "4393:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4400:3:7",
														"nodeType": "YulTypedName",
														"src": "4400:3:7",
														"type": ""
													}
												],
												"src": "4356:99:7"
											},
											{
												"body": {
													"nativeSrc": "4637:748:7",
													"nodeType": "YulBlock",
													"src": "4637:748:7",
													"statements": [
														{
															"nativeSrc": "4647:26:7",
															"nodeType": "YulVariableDeclaration",
															"src": "4647:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4663:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4663:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4668:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4668:4:7",
																		"type": "",
																		"value": "0x80"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4659:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4659:3:7"
																},
																"nativeSrc": "4659:14:7",
																"nodeType": "YulFunctionCall",
																"src": "4659:14:7"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "4651:4:7",
																	"nodeType": "YulTypedName",
																	"src": "4651:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4683:166:7",
															"nodeType": "YulBlock",
															"src": "4683:166:7",
															"statements": [
																{
																	"nativeSrc": "4720:43:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4720:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4750:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "4750:5:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4757:4:7",
																						"nodeType": "YulLiteral",
																						"src": "4757:4:7",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4746:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4746:3:7"
																				},
																				"nativeSrc": "4746:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4746:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "4740:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "4740:5:7"
																		},
																		"nativeSrc": "4740:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4740:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "4724:12:7",
																			"nodeType": "YulTypedName",
																			"src": "4724:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "4810:12:7",
																				"nodeType": "YulIdentifier",
																				"src": "4810:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "4828:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "4828:3:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4833:4:7",
																						"nodeType": "YulLiteral",
																						"src": "4833:4:7",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4824:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4824:3:7"
																				},
																				"nativeSrc": "4824:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4824:14:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "4776:33:7",
																			"nodeType": "YulIdentifier",
																			"src": "4776:33:7"
																		},
																		"nativeSrc": "4776:63:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4776:63:7"
																	},
																	"nativeSrc": "4776:63:7",
																	"nodeType": "YulExpressionStatement",
																	"src": "4776:63:7"
																}
															]
														},
														{
															"nativeSrc": "4859:170:7",
															"nodeType": "YulBlock",
															"src": "4859:170:7",
															"statements": [
																{
																	"nativeSrc": "4900:43:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4900:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4930:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "4930:5:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4937:4:7",
																						"nodeType": "YulLiteral",
																						"src": "4937:4:7",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4926:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4926:3:7"
																				},
																				"nativeSrc": "4926:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4926:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "4920:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "4920:5:7"
																		},
																		"nativeSrc": "4920:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4920:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "4904:12:7",
																			"nodeType": "YulTypedName",
																			"src": "4904:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "4990:12:7",
																				"nodeType": "YulIdentifier",
																				"src": "4990:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "5008:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "5008:3:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5013:4:7",
																						"nodeType": "YulLiteral",
																						"src": "5013:4:7",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5004:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5004:3:7"
																				},
																				"nativeSrc": "5004:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5004:14:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "4956:33:7",
																			"nodeType": "YulIdentifier",
																			"src": "4956:33:7"
																		},
																		"nativeSrc": "4956:63:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4956:63:7"
																	},
																	"nativeSrc": "4956:63:7",
																	"nodeType": "YulExpressionStatement",
																	"src": "4956:63:7"
																}
															]
														},
														{
															"nativeSrc": "5039:169:7",
															"nodeType": "YulBlock",
															"src": "5039:169:7",
															"statements": [
																{
																	"nativeSrc": "5079:43:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5079:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5109:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "5109:5:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5116:4:7",
																						"nodeType": "YulLiteral",
																						"src": "5116:4:7",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5105:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5105:3:7"
																				},
																				"nativeSrc": "5105:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5105:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "5099:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "5099:5:7"
																		},
																		"nativeSrc": "5099:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5099:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "5083:12:7",
																			"nodeType": "YulTypedName",
																			"src": "5083:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "5169:12:7",
																				"nodeType": "YulIdentifier",
																				"src": "5169:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "5187:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "5187:3:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5192:4:7",
																						"nodeType": "YulLiteral",
																						"src": "5192:4:7",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5183:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5183:3:7"
																				},
																				"nativeSrc": "5183:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5183:14:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "5135:33:7",
																			"nodeType": "YulIdentifier",
																			"src": "5135:33:7"
																		},
																		"nativeSrc": "5135:63:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5135:63:7"
																	},
																	"nativeSrc": "5135:63:7",
																	"nodeType": "YulExpressionStatement",
																	"src": "5135:63:7"
																}
															]
														},
														{
															"nativeSrc": "5218:160:7",
															"nodeType": "YulBlock",
															"src": "5218:160:7",
															"statements": [
																{
																	"nativeSrc": "5255:43:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5255:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5285:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "5285:5:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5292:4:7",
																						"nodeType": "YulLiteral",
																						"src": "5292:4:7",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5281:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5281:3:7"
																				},
																				"nativeSrc": "5281:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5281:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "5275:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "5275:5:7"
																		},
																		"nativeSrc": "5275:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5275:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "5259:12:7",
																			"nodeType": "YulTypedName",
																			"src": "5259:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "5339:12:7",
																				"nodeType": "YulIdentifier",
																				"src": "5339:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "5357:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "5357:3:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5362:4:7",
																						"nodeType": "YulLiteral",
																						"src": "5362:4:7",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5353:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5353:3:7"
																				},
																				"nativeSrc": "5353:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5353:14:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_bool_to_t_bool",
																			"nativeSrc": "5311:27:7",
																			"nodeType": "YulIdentifier",
																			"src": "5311:27:7"
																		},
																		"nativeSrc": "5311:57:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5311:57:7"
																	},
																	"nativeSrc": "5311:57:7",
																	"nodeType": "YulExpressionStatement",
																	"src": "5311:57:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_Loan_$881_memory_ptr_to_t_struct$_Loan_$881_memory_ptr_fromStack",
												"nativeSrc": "4529:856:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4624:5:7",
														"nodeType": "YulTypedName",
														"src": "4624:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4631:3:7",
														"nodeType": "YulTypedName",
														"src": "4631:3:7",
														"type": ""
													}
												],
												"src": "4529:856:7"
											},
											{
												"body": {
													"nativeSrc": "5531:167:7",
													"nodeType": "YulBlock",
													"src": "5531:167:7",
													"statements": [
														{
															"nativeSrc": "5541:27:7",
															"nodeType": "YulAssignment",
															"src": "5541:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5553:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5553:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5564:3:7",
																		"nodeType": "YulLiteral",
																		"src": "5564:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5549:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5549:3:7"
																},
																"nativeSrc": "5549:19:7",
																"nodeType": "YulFunctionCall",
																"src": "5549:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5541:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5541:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5664:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5664:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5677:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5677:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5688:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5688:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5673:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5673:3:7"
																		},
																		"nativeSrc": "5673:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5673:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_Loan_$881_memory_ptr_to_t_struct$_Loan_$881_memory_ptr_fromStack",
																	"nativeSrc": "5578:85:7",
																	"nodeType": "YulIdentifier",
																	"src": "5578:85:7"
																},
																"nativeSrc": "5578:113:7",
																"nodeType": "YulFunctionCall",
																"src": "5578:113:7"
															},
															"nativeSrc": "5578:113:7",
															"nodeType": "YulExpressionStatement",
															"src": "5578:113:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_Loan_$881_memory_ptr__to_t_struct$_Loan_$881_memory_ptr__fromStack_reversed",
												"nativeSrc": "5391:307:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5503:9:7",
														"nodeType": "YulTypedName",
														"src": "5503:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5515:6:7",
														"nodeType": "YulTypedName",
														"src": "5515:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5526:4:7",
														"nodeType": "YulTypedName",
														"src": "5526:4:7",
														"type": ""
													}
												],
												"src": "5391:307:7"
											},
											{
												"body": {
													"nativeSrc": "5800:73:7",
													"nodeType": "YulBlock",
													"src": "5800:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5817:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5817:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5822:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5822:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5810:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5810:6:7"
																},
																"nativeSrc": "5810:19:7",
																"nodeType": "YulFunctionCall",
																"src": "5810:19:7"
															},
															"nativeSrc": "5810:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "5810:19:7"
														},
														{
															"nativeSrc": "5838:29:7",
															"nodeType": "YulAssignment",
															"src": "5838:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5857:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5857:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5862:4:7",
																		"nodeType": "YulLiteral",
																		"src": "5862:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5853:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5853:3:7"
																},
																"nativeSrc": "5853:14:7",
																"nodeType": "YulFunctionCall",
																"src": "5853:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "5838:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "5838:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "5704:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5772:3:7",
														"nodeType": "YulTypedName",
														"src": "5772:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5777:6:7",
														"nodeType": "YulTypedName",
														"src": "5777:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "5788:11:7",
														"nodeType": "YulTypedName",
														"src": "5788:11:7",
														"type": ""
													}
												],
												"src": "5704:169:7"
											},
											{
												"body": {
													"nativeSrc": "5985:58:7",
													"nodeType": "YulBlock",
													"src": "5985:58:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6007:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6007:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6015:1:7",
																				"nodeType": "YulLiteral",
																				"src": "6015:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6003:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6003:3:7"
																		},
																		"nativeSrc": "6003:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6003:14:7"
																	},
																	{
																		"hexValue": "4e6f20616374697665206c6f616e",
																		"kind": "string",
																		"nativeSrc": "6019:16:7",
																		"nodeType": "YulLiteral",
																		"src": "6019:16:7",
																		"type": "",
																		"value": "No active loan"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5996:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5996:6:7"
																},
																"nativeSrc": "5996:40:7",
																"nodeType": "YulFunctionCall",
																"src": "5996:40:7"
															},
															"nativeSrc": "5996:40:7",
															"nodeType": "YulExpressionStatement",
															"src": "5996:40:7"
														}
													]
												},
												"name": "store_literal_in_memory_5d763a4fa76dcd5af45b10ebcfff84ed4476e04c563aef69c0eaf01d8a5ccfba",
												"nativeSrc": "5879:164:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5977:6:7",
														"nodeType": "YulTypedName",
														"src": "5977:6:7",
														"type": ""
													}
												],
												"src": "5879:164:7"
											},
											{
												"body": {
													"nativeSrc": "6195:220:7",
													"nodeType": "YulBlock",
													"src": "6195:220:7",
													"statements": [
														{
															"nativeSrc": "6205:74:7",
															"nodeType": "YulAssignment",
															"src": "6205:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6271:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6271:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6276:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6276:2:7",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6212:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "6212:58:7"
																},
																"nativeSrc": "6212:67:7",
																"nodeType": "YulFunctionCall",
																"src": "6212:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6205:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6205:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6377:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6377:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5d763a4fa76dcd5af45b10ebcfff84ed4476e04c563aef69c0eaf01d8a5ccfba",
																	"nativeSrc": "6288:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "6288:88:7"
																},
																"nativeSrc": "6288:93:7",
																"nodeType": "YulFunctionCall",
																"src": "6288:93:7"
															},
															"nativeSrc": "6288:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "6288:93:7"
														},
														{
															"nativeSrc": "6390:19:7",
															"nodeType": "YulAssignment",
															"src": "6390:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6401:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6401:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6406:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6406:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6397:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6397:3:7"
																},
																"nativeSrc": "6397:12:7",
																"nodeType": "YulFunctionCall",
																"src": "6397:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6390:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6390:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5d763a4fa76dcd5af45b10ebcfff84ed4476e04c563aef69c0eaf01d8a5ccfba_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6049:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6183:3:7",
														"nodeType": "YulTypedName",
														"src": "6183:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6191:3:7",
														"nodeType": "YulTypedName",
														"src": "6191:3:7",
														"type": ""
													}
												],
												"src": "6049:366:7"
											},
											{
												"body": {
													"nativeSrc": "6592:248:7",
													"nodeType": "YulBlock",
													"src": "6592:248:7",
													"statements": [
														{
															"nativeSrc": "6602:26:7",
															"nodeType": "YulAssignment",
															"src": "6602:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6614:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6614:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6625:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6625:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6610:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6610:3:7"
																},
																"nativeSrc": "6610:18:7",
																"nodeType": "YulFunctionCall",
																"src": "6610:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6602:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6602:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6649:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6649:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6660:1:7",
																				"nodeType": "YulLiteral",
																				"src": "6660:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6645:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6645:3:7"
																		},
																		"nativeSrc": "6645:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6645:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6668:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "6668:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6674:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6674:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6664:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6664:3:7"
																		},
																		"nativeSrc": "6664:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6664:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6638:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6638:6:7"
																},
																"nativeSrc": "6638:47:7",
																"nodeType": "YulFunctionCall",
																"src": "6638:47:7"
															},
															"nativeSrc": "6638:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "6638:47:7"
														},
														{
															"nativeSrc": "6694:139:7",
															"nodeType": "YulAssignment",
															"src": "6694:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6828:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6828:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5d763a4fa76dcd5af45b10ebcfff84ed4476e04c563aef69c0eaf01d8a5ccfba_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6702:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "6702:124:7"
																},
																"nativeSrc": "6702:131:7",
																"nodeType": "YulFunctionCall",
																"src": "6702:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6694:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6694:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5d763a4fa76dcd5af45b10ebcfff84ed4476e04c563aef69c0eaf01d8a5ccfba__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6421:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6572:9:7",
														"nodeType": "YulTypedName",
														"src": "6572:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6587:4:7",
														"nodeType": "YulTypedName",
														"src": "6587:4:7",
														"type": ""
													}
												],
												"src": "6421:419:7"
											},
											{
												"body": {
													"nativeSrc": "6874:152:7",
													"nodeType": "YulBlock",
													"src": "6874:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6891:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6891:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6894:77:7",
																		"nodeType": "YulLiteral",
																		"src": "6894:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6884:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6884:6:7"
																},
																"nativeSrc": "6884:88:7",
																"nodeType": "YulFunctionCall",
																"src": "6884:88:7"
															},
															"nativeSrc": "6884:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "6884:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6988:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6988:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6991:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6991:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6981:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6981:6:7"
																},
																"nativeSrc": "6981:15:7",
																"nodeType": "YulFunctionCall",
																"src": "6981:15:7"
															},
															"nativeSrc": "6981:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "6981:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7012:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7012:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7015:4:7",
																		"nodeType": "YulLiteral",
																		"src": "7015:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7005:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7005:6:7"
																},
																"nativeSrc": "7005:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7005:15:7"
															},
															"nativeSrc": "7005:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "7005:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "6846:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "6846:180:7"
											},
											{
												"body": {
													"nativeSrc": "7077:149:7",
													"nodeType": "YulBlock",
													"src": "7077:149:7",
													"statements": [
														{
															"nativeSrc": "7087:25:7",
															"nodeType": "YulAssignment",
															"src": "7087:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7110:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7110:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7092:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "7092:17:7"
																},
																"nativeSrc": "7092:20:7",
																"nodeType": "YulFunctionCall",
																"src": "7092:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7087:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "7087:1:7"
																}
															]
														},
														{
															"nativeSrc": "7121:25:7",
															"nodeType": "YulAssignment",
															"src": "7121:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7144:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7144:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7126:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "7126:17:7"
																},
																"nativeSrc": "7126:20:7",
																"nodeType": "YulFunctionCall",
																"src": "7126:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7121:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "7121:1:7"
																}
															]
														},
														{
															"nativeSrc": "7155:17:7",
															"nodeType": "YulAssignment",
															"src": "7155:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7167:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7167:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7170:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7170:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "7163:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7163:3:7"
																},
																"nativeSrc": "7163:9:7",
																"nodeType": "YulFunctionCall",
																"src": "7163:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "7155:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7155:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7197:22:7",
																"nodeType": "YulBlock",
																"src": "7197:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7199:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "7199:16:7"
																			},
																			"nativeSrc": "7199:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7199:18:7"
																		},
																		"nativeSrc": "7199:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7199:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "7188:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7188:4:7"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "7194:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7194:1:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7185:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "7185:2:7"
																},
																"nativeSrc": "7185:11:7",
																"nodeType": "YulFunctionCall",
																"src": "7185:11:7"
															},
															"nativeSrc": "7182:37:7",
															"nodeType": "YulIf",
															"src": "7182:37:7"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "7032:194:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7063:1:7",
														"nodeType": "YulTypedName",
														"src": "7063:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7066:1:7",
														"nodeType": "YulTypedName",
														"src": "7066:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "7072:4:7",
														"nodeType": "YulTypedName",
														"src": "7072:4:7",
														"type": ""
													}
												],
												"src": "7032:194:7"
											},
											{
												"body": {
													"nativeSrc": "7260:152:7",
													"nodeType": "YulBlock",
													"src": "7260:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7277:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7277:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7280:77:7",
																		"nodeType": "YulLiteral",
																		"src": "7280:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7270:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7270:6:7"
																},
																"nativeSrc": "7270:88:7",
																"nodeType": "YulFunctionCall",
																"src": "7270:88:7"
															},
															"nativeSrc": "7270:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "7270:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7374:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7374:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7377:4:7",
																		"nodeType": "YulLiteral",
																		"src": "7377:4:7",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7367:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7367:6:7"
																},
																"nativeSrc": "7367:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7367:15:7"
															},
															"nativeSrc": "7367:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "7367:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7398:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7398:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7401:4:7",
																		"nodeType": "YulLiteral",
																		"src": "7401:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7391:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7391:6:7"
																},
																"nativeSrc": "7391:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7391:15:7"
															},
															"nativeSrc": "7391:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "7391:15:7"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "7232:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "7232:180:7"
											},
											{
												"body": {
													"nativeSrc": "7460:143:7",
													"nodeType": "YulBlock",
													"src": "7460:143:7",
													"statements": [
														{
															"nativeSrc": "7470:25:7",
															"nodeType": "YulAssignment",
															"src": "7470:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7493:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7493:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7475:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "7475:17:7"
																},
																"nativeSrc": "7475:20:7",
																"nodeType": "YulFunctionCall",
																"src": "7475:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7470:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "7470:1:7"
																}
															]
														},
														{
															"nativeSrc": "7504:25:7",
															"nodeType": "YulAssignment",
															"src": "7504:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7527:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7527:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7509:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "7509:17:7"
																},
																"nativeSrc": "7509:20:7",
																"nodeType": "YulFunctionCall",
																"src": "7509:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7504:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "7504:1:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7551:22:7",
																"nodeType": "YulBlock",
																"src": "7551:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "7553:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "7553:16:7"
																			},
																			"nativeSrc": "7553:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7553:18:7"
																		},
																		"nativeSrc": "7553:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7553:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7548:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7548:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7541:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7541:6:7"
																},
																"nativeSrc": "7541:9:7",
																"nodeType": "YulFunctionCall",
																"src": "7541:9:7"
															},
															"nativeSrc": "7538:35:7",
															"nodeType": "YulIf",
															"src": "7538:35:7"
														},
														{
															"nativeSrc": "7583:14:7",
															"nodeType": "YulAssignment",
															"src": "7583:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7592:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7592:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7595:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7595:1:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "7588:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7588:3:7"
																},
																"nativeSrc": "7588:9:7",
																"nodeType": "YulFunctionCall",
																"src": "7588:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "7583:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "7583:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "7418:185:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7449:1:7",
														"nodeType": "YulTypedName",
														"src": "7449:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7452:1:7",
														"nodeType": "YulTypedName",
														"src": "7452:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "7458:1:7",
														"nodeType": "YulTypedName",
														"src": "7458:1:7",
														"type": ""
													}
												],
												"src": "7418:185:7"
											},
											{
												"body": {
													"nativeSrc": "7715:74:7",
													"nodeType": "YulBlock",
													"src": "7715:74:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7737:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7737:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7745:1:7",
																				"nodeType": "YulLiteral",
																				"src": "7745:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7733:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7733:3:7"
																		},
																		"nativeSrc": "7733:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7733:14:7"
																	},
																	{
																		"hexValue": "4c6f616e206475726174696f6e2065786365656465642033302064617973",
																		"kind": "string",
																		"nativeSrc": "7749:32:7",
																		"nodeType": "YulLiteral",
																		"src": "7749:32:7",
																		"type": "",
																		"value": "Loan duration exceeded 30 days"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7726:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7726:6:7"
																},
																"nativeSrc": "7726:56:7",
																"nodeType": "YulFunctionCall",
																"src": "7726:56:7"
															},
															"nativeSrc": "7726:56:7",
															"nodeType": "YulExpressionStatement",
															"src": "7726:56:7"
														}
													]
												},
												"name": "store_literal_in_memory_a7a7a3281abb2373d36b680552e8d3f537ad1508b3db7c57c338d13cfa2860a9",
												"nativeSrc": "7609:180:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7707:6:7",
														"nodeType": "YulTypedName",
														"src": "7707:6:7",
														"type": ""
													}
												],
												"src": "7609:180:7"
											},
											{
												"body": {
													"nativeSrc": "7941:220:7",
													"nodeType": "YulBlock",
													"src": "7941:220:7",
													"statements": [
														{
															"nativeSrc": "7951:74:7",
															"nodeType": "YulAssignment",
															"src": "7951:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8017:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8017:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8022:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8022:2:7",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7958:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "7958:58:7"
																},
																"nativeSrc": "7958:67:7",
																"nodeType": "YulFunctionCall",
																"src": "7958:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7951:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7951:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8123:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8123:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a7a7a3281abb2373d36b680552e8d3f537ad1508b3db7c57c338d13cfa2860a9",
																	"nativeSrc": "8034:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "8034:88:7"
																},
																"nativeSrc": "8034:93:7",
																"nodeType": "YulFunctionCall",
																"src": "8034:93:7"
															},
															"nativeSrc": "8034:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "8034:93:7"
														},
														{
															"nativeSrc": "8136:19:7",
															"nodeType": "YulAssignment",
															"src": "8136:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8147:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8147:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8152:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8152:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8143:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8143:3:7"
																},
																"nativeSrc": "8143:12:7",
																"nodeType": "YulFunctionCall",
																"src": "8143:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8136:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8136:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a7a7a3281abb2373d36b680552e8d3f537ad1508b3db7c57c338d13cfa2860a9_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7795:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7929:3:7",
														"nodeType": "YulTypedName",
														"src": "7929:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7937:3:7",
														"nodeType": "YulTypedName",
														"src": "7937:3:7",
														"type": ""
													}
												],
												"src": "7795:366:7"
											},
											{
												"body": {
													"nativeSrc": "8338:248:7",
													"nodeType": "YulBlock",
													"src": "8338:248:7",
													"statements": [
														{
															"nativeSrc": "8348:26:7",
															"nodeType": "YulAssignment",
															"src": "8348:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8360:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "8360:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8371:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8371:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8356:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8356:3:7"
																},
																"nativeSrc": "8356:18:7",
																"nodeType": "YulFunctionCall",
																"src": "8356:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8348:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8348:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8395:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8395:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8406:1:7",
																				"nodeType": "YulLiteral",
																				"src": "8406:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8391:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8391:3:7"
																		},
																		"nativeSrc": "8391:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8391:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8414:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "8414:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8420:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8420:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8410:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8410:3:7"
																		},
																		"nativeSrc": "8410:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8410:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8384:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8384:6:7"
																},
																"nativeSrc": "8384:47:7",
																"nodeType": "YulFunctionCall",
																"src": "8384:47:7"
															},
															"nativeSrc": "8384:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "8384:47:7"
														},
														{
															"nativeSrc": "8440:139:7",
															"nodeType": "YulAssignment",
															"src": "8440:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8574:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8574:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a7a7a3281abb2373d36b680552e8d3f537ad1508b3db7c57c338d13cfa2860a9_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8448:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "8448:124:7"
																},
																"nativeSrc": "8448:131:7",
																"nodeType": "YulFunctionCall",
																"src": "8448:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8440:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8440:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a7a7a3281abb2373d36b680552e8d3f537ad1508b3db7c57c338d13cfa2860a9__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8167:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8318:9:7",
														"nodeType": "YulTypedName",
														"src": "8318:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8333:4:7",
														"nodeType": "YulTypedName",
														"src": "8333:4:7",
														"type": ""
													}
												],
												"src": "8167:419:7"
											},
											{
												"body": {
													"nativeSrc": "8640:362:7",
													"nodeType": "YulBlock",
													"src": "8640:362:7",
													"statements": [
														{
															"nativeSrc": "8650:25:7",
															"nodeType": "YulAssignment",
															"src": "8650:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8673:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8673:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8655:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "8655:17:7"
																},
																"nativeSrc": "8655:20:7",
																"nodeType": "YulFunctionCall",
																"src": "8655:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8650:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "8650:1:7"
																}
															]
														},
														{
															"nativeSrc": "8684:25:7",
															"nodeType": "YulAssignment",
															"src": "8684:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8707:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8707:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8689:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "8689:17:7"
																},
																"nativeSrc": "8689:20:7",
																"nodeType": "YulFunctionCall",
																"src": "8689:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8684:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "8684:1:7"
																}
															]
														},
														{
															"nativeSrc": "8718:28:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8718:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8741:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8741:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8744:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8744:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "8737:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8737:3:7"
																},
																"nativeSrc": "8737:9:7",
																"nodeType": "YulFunctionCall",
																"src": "8737:9:7"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "8722:11:7",
																	"nodeType": "YulTypedName",
																	"src": "8722:11:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8755:41:7",
															"nodeType": "YulAssignment",
															"src": "8755:41:7",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "8784:11:7",
																		"nodeType": "YulIdentifier",
																		"src": "8784:11:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8766:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "8766:17:7"
																},
																"nativeSrc": "8766:30:7",
																"nodeType": "YulFunctionCall",
																"src": "8766:30:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "8755:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "8755:7:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8973:22:7",
																"nodeType": "YulBlock",
																"src": "8973:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8975:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "8975:16:7"
																			},
																			"nativeSrc": "8975:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8975:18:7"
																		},
																		"nativeSrc": "8975:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8975:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "8906:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "8906:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "8899:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "8899:6:7"
																				},
																				"nativeSrc": "8899:9:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8899:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "8929:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "8929:1:7"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "8936:7:7",
																								"nodeType": "YulIdentifier",
																								"src": "8936:7:7"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "8945:1:7",
																								"nodeType": "YulIdentifier",
																								"src": "8945:1:7"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "8932:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "8932:3:7"
																						},
																						"nativeSrc": "8932:15:7",
																						"nodeType": "YulFunctionCall",
																						"src": "8932:15:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "8926:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "8926:2:7"
																				},
																				"nativeSrc": "8926:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8926:22:7"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "8879:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "8879:2:7"
																		},
																		"nativeSrc": "8879:83:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8879:83:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8859:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8859:6:7"
																},
																"nativeSrc": "8859:113:7",
																"nodeType": "YulFunctionCall",
																"src": "8859:113:7"
															},
															"nativeSrc": "8856:139:7",
															"nodeType": "YulIf",
															"src": "8856:139:7"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "8592:410:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8623:1:7",
														"nodeType": "YulTypedName",
														"src": "8623:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8626:1:7",
														"nodeType": "YulTypedName",
														"src": "8626:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "8632:7:7",
														"nodeType": "YulTypedName",
														"src": "8632:7:7",
														"type": ""
													}
												],
												"src": "8592:410:7"
											},
											{
												"body": {
													"nativeSrc": "9052:147:7",
													"nodeType": "YulBlock",
													"src": "9052:147:7",
													"statements": [
														{
															"nativeSrc": "9062:25:7",
															"nodeType": "YulAssignment",
															"src": "9062:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9085:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9085:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9067:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "9067:17:7"
																},
																"nativeSrc": "9067:20:7",
																"nodeType": "YulFunctionCall",
																"src": "9067:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9062:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "9062:1:7"
																}
															]
														},
														{
															"nativeSrc": "9096:25:7",
															"nodeType": "YulAssignment",
															"src": "9096:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9119:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9119:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9101:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "9101:17:7"
																},
																"nativeSrc": "9101:20:7",
																"nodeType": "YulFunctionCall",
																"src": "9101:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9096:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "9096:1:7"
																}
															]
														},
														{
															"nativeSrc": "9130:16:7",
															"nodeType": "YulAssignment",
															"src": "9130:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9141:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9141:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9144:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9144:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9137:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9137:3:7"
																},
																"nativeSrc": "9137:9:7",
																"nodeType": "YulFunctionCall",
																"src": "9137:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "9130:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9130:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9170:22:7",
																"nodeType": "YulBlock",
																"src": "9170:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9172:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "9172:16:7"
																			},
																			"nativeSrc": "9172:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9172:18:7"
																		},
																		"nativeSrc": "9172:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "9172:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9162:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9162:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "9165:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9165:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9159:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "9159:2:7"
																},
																"nativeSrc": "9159:10:7",
																"nodeType": "YulFunctionCall",
																"src": "9159:10:7"
															},
															"nativeSrc": "9156:36:7",
															"nodeType": "YulIf",
															"src": "9156:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "9008:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9039:1:7",
														"nodeType": "YulTypedName",
														"src": "9039:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9042:1:7",
														"nodeType": "YulTypedName",
														"src": "9042:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "9048:3:7",
														"nodeType": "YulTypedName",
														"src": "9048:3:7",
														"type": ""
													}
												],
												"src": "9008:191:7"
											},
											{
												"body": {
													"nativeSrc": "9331:206:7",
													"nodeType": "YulBlock",
													"src": "9331:206:7",
													"statements": [
														{
															"nativeSrc": "9341:26:7",
															"nodeType": "YulAssignment",
															"src": "9341:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9353:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "9353:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9364:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9364:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9349:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9349:3:7"
																},
																"nativeSrc": "9349:18:7",
																"nodeType": "YulFunctionCall",
																"src": "9349:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9341:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9341:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9421:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9421:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9434:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9434:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9445:1:7",
																				"nodeType": "YulLiteral",
																				"src": "9445:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9430:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9430:3:7"
																		},
																		"nativeSrc": "9430:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9430:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9377:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "9377:43:7"
																},
																"nativeSrc": "9377:71:7",
																"nodeType": "YulFunctionCall",
																"src": "9377:71:7"
															},
															"nativeSrc": "9377:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "9377:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9502:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9502:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9515:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9515:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9526:2:7",
																				"nodeType": "YulLiteral",
																				"src": "9526:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9511:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9511:3:7"
																		},
																		"nativeSrc": "9511:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9511:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9458:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "9458:43:7"
																},
																"nativeSrc": "9458:72:7",
																"nodeType": "YulFunctionCall",
																"src": "9458:72:7"
															},
															"nativeSrc": "9458:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "9458:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "9205:332:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9295:9:7",
														"nodeType": "YulTypedName",
														"src": "9295:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9307:6:7",
														"nodeType": "YulTypedName",
														"src": "9307:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9315:6:7",
														"nodeType": "YulTypedName",
														"src": "9315:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9326:4:7",
														"nodeType": "YulTypedName",
														"src": "9326:4:7",
														"type": ""
													}
												],
												"src": "9205:332:7"
											},
											{
												"body": {
													"nativeSrc": "9649:73:7",
													"nodeType": "YulBlock",
													"src": "9649:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9671:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "9671:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9679:1:7",
																				"nodeType": "YulLiteral",
																				"src": "9679:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9667:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9667:3:7"
																		},
																		"nativeSrc": "9667:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9667:14:7"
																	},
																	{
																		"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
																		"kind": "string",
																		"nativeSrc": "9683:31:7",
																		"nodeType": "YulLiteral",
																		"src": "9683:31:7",
																		"type": "",
																		"value": "Amount must be greater than 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9660:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9660:6:7"
																},
																"nativeSrc": "9660:55:7",
																"nodeType": "YulFunctionCall",
																"src": "9660:55:7"
															},
															"nativeSrc": "9660:55:7",
															"nodeType": "YulExpressionStatement",
															"src": "9660:55:7"
														}
													]
												},
												"name": "store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
												"nativeSrc": "9543:179:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9641:6:7",
														"nodeType": "YulTypedName",
														"src": "9641:6:7",
														"type": ""
													}
												],
												"src": "9543:179:7"
											},
											{
												"body": {
													"nativeSrc": "9874:220:7",
													"nodeType": "YulBlock",
													"src": "9874:220:7",
													"statements": [
														{
															"nativeSrc": "9884:74:7",
															"nodeType": "YulAssignment",
															"src": "9884:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9950:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9950:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9955:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9955:2:7",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9891:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "9891:58:7"
																},
																"nativeSrc": "9891:67:7",
																"nodeType": "YulFunctionCall",
																"src": "9891:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9884:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9884:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10056:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10056:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																	"nativeSrc": "9967:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "9967:88:7"
																},
																"nativeSrc": "9967:93:7",
																"nodeType": "YulFunctionCall",
																"src": "9967:93:7"
															},
															"nativeSrc": "9967:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "9967:93:7"
														},
														{
															"nativeSrc": "10069:19:7",
															"nodeType": "YulAssignment",
															"src": "10069:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10080:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10080:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10085:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10085:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10076:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10076:3:7"
																},
																"nativeSrc": "10076:12:7",
																"nodeType": "YulFunctionCall",
																"src": "10076:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10069:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10069:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9728:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9862:3:7",
														"nodeType": "YulTypedName",
														"src": "9862:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9870:3:7",
														"nodeType": "YulTypedName",
														"src": "9870:3:7",
														"type": ""
													}
												],
												"src": "9728:366:7"
											},
											{
												"body": {
													"nativeSrc": "10271:248:7",
													"nodeType": "YulBlock",
													"src": "10271:248:7",
													"statements": [
														{
															"nativeSrc": "10281:26:7",
															"nodeType": "YulAssignment",
															"src": "10281:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10293:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "10293:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10304:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10304:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10289:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10289:3:7"
																},
																"nativeSrc": "10289:18:7",
																"nodeType": "YulFunctionCall",
																"src": "10289:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10281:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10281:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10328:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10328:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10339:1:7",
																				"nodeType": "YulLiteral",
																				"src": "10339:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10324:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10324:3:7"
																		},
																		"nativeSrc": "10324:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10324:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10347:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "10347:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10353:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10353:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10343:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10343:3:7"
																		},
																		"nativeSrc": "10343:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10343:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10317:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10317:6:7"
																},
																"nativeSrc": "10317:47:7",
																"nodeType": "YulFunctionCall",
																"src": "10317:47:7"
															},
															"nativeSrc": "10317:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "10317:47:7"
														},
														{
															"nativeSrc": "10373:139:7",
															"nodeType": "YulAssignment",
															"src": "10373:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10507:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "10507:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10381:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "10381:124:7"
																},
																"nativeSrc": "10381:131:7",
																"nodeType": "YulFunctionCall",
																"src": "10381:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10373:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10373:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10100:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10251:9:7",
														"nodeType": "YulTypedName",
														"src": "10251:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10266:4:7",
														"nodeType": "YulTypedName",
														"src": "10266:4:7",
														"type": ""
													}
												],
												"src": "10100:419:7"
											},
											{
												"body": {
													"nativeSrc": "10631:67:7",
													"nodeType": "YulBlock",
													"src": "10631:67:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10653:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "10653:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10661:1:7",
																				"nodeType": "YulLiteral",
																				"src": "10661:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10649:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10649:3:7"
																		},
																		"nativeSrc": "10649:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10649:14:7"
																	},
																	{
																		"hexValue": "496e73756666696369656e7420636f6c6c61746572616c",
																		"kind": "string",
																		"nativeSrc": "10665:25:7",
																		"nodeType": "YulLiteral",
																		"src": "10665:25:7",
																		"type": "",
																		"value": "Insufficient collateral"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10642:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10642:6:7"
																},
																"nativeSrc": "10642:49:7",
																"nodeType": "YulFunctionCall",
																"src": "10642:49:7"
															},
															"nativeSrc": "10642:49:7",
															"nodeType": "YulExpressionStatement",
															"src": "10642:49:7"
														}
													]
												},
												"name": "store_literal_in_memory_c9a6548b8b08f3e884692ff4b4c5cb58e1633771e97667c355d207e48aa0a8aa",
												"nativeSrc": "10525:173:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10623:6:7",
														"nodeType": "YulTypedName",
														"src": "10623:6:7",
														"type": ""
													}
												],
												"src": "10525:173:7"
											},
											{
												"body": {
													"nativeSrc": "10850:220:7",
													"nodeType": "YulBlock",
													"src": "10850:220:7",
													"statements": [
														{
															"nativeSrc": "10860:74:7",
															"nodeType": "YulAssignment",
															"src": "10860:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10926:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10926:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10931:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10931:2:7",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10867:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "10867:58:7"
																},
																"nativeSrc": "10867:67:7",
																"nodeType": "YulFunctionCall",
																"src": "10867:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10860:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10860:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11032:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11032:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c9a6548b8b08f3e884692ff4b4c5cb58e1633771e97667c355d207e48aa0a8aa",
																	"nativeSrc": "10943:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "10943:88:7"
																},
																"nativeSrc": "10943:93:7",
																"nodeType": "YulFunctionCall",
																"src": "10943:93:7"
															},
															"nativeSrc": "10943:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "10943:93:7"
														},
														{
															"nativeSrc": "11045:19:7",
															"nodeType": "YulAssignment",
															"src": "11045:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11056:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11056:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11061:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11061:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11052:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11052:3:7"
																},
																"nativeSrc": "11052:12:7",
																"nodeType": "YulFunctionCall",
																"src": "11052:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11045:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11045:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c9a6548b8b08f3e884692ff4b4c5cb58e1633771e97667c355d207e48aa0a8aa_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10704:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10838:3:7",
														"nodeType": "YulTypedName",
														"src": "10838:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10846:3:7",
														"nodeType": "YulTypedName",
														"src": "10846:3:7",
														"type": ""
													}
												],
												"src": "10704:366:7"
											},
											{
												"body": {
													"nativeSrc": "11247:248:7",
													"nodeType": "YulBlock",
													"src": "11247:248:7",
													"statements": [
														{
															"nativeSrc": "11257:26:7",
															"nodeType": "YulAssignment",
															"src": "11257:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11269:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "11269:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11280:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11280:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11265:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11265:3:7"
																},
																"nativeSrc": "11265:18:7",
																"nodeType": "YulFunctionCall",
																"src": "11265:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11257:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11257:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11304:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11304:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11315:1:7",
																				"nodeType": "YulLiteral",
																				"src": "11315:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11300:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11300:3:7"
																		},
																		"nativeSrc": "11300:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11300:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11323:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "11323:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11329:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11329:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11319:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11319:3:7"
																		},
																		"nativeSrc": "11319:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11319:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11293:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11293:6:7"
																},
																"nativeSrc": "11293:47:7",
																"nodeType": "YulFunctionCall",
																"src": "11293:47:7"
															},
															"nativeSrc": "11293:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "11293:47:7"
														},
														{
															"nativeSrc": "11349:139:7",
															"nodeType": "YulAssignment",
															"src": "11349:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11483:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "11483:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c9a6548b8b08f3e884692ff4b4c5cb58e1633771e97667c355d207e48aa0a8aa_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11357:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "11357:124:7"
																},
																"nativeSrc": "11357:131:7",
																"nodeType": "YulFunctionCall",
																"src": "11357:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11349:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11349:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c9a6548b8b08f3e884692ff4b4c5cb58e1633771e97667c355d207e48aa0a8aa__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11076:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11227:9:7",
														"nodeType": "YulTypedName",
														"src": "11227:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11242:4:7",
														"nodeType": "YulTypedName",
														"src": "11242:4:7",
														"type": ""
													}
												],
												"src": "11076:419:7"
											},
											{
												"body": {
													"nativeSrc": "11607:121:7",
													"nodeType": "YulBlock",
													"src": "11607:121:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11629:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "11629:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11637:1:7",
																				"nodeType": "YulLiteral",
																				"src": "11637:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11625:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11625:3:7"
																		},
																		"nativeSrc": "11625:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11625:14:7"
																	},
																	{
																		"hexValue": "5769746864726177616c20776f756c6420756e646572636f6c6c61746572616c",
																		"kind": "string",
																		"nativeSrc": "11641:34:7",
																		"nodeType": "YulLiteral",
																		"src": "11641:34:7",
																		"type": "",
																		"value": "Withdrawal would undercollateral"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11618:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11618:6:7"
																},
																"nativeSrc": "11618:58:7",
																"nodeType": "YulFunctionCall",
																"src": "11618:58:7"
															},
															"nativeSrc": "11618:58:7",
															"nodeType": "YulExpressionStatement",
															"src": "11618:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11697:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "11697:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11705:2:7",
																				"nodeType": "YulLiteral",
																				"src": "11705:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11693:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11693:3:7"
																		},
																		"nativeSrc": "11693:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11693:15:7"
																	},
																	{
																		"hexValue": "697a65206c6f616e",
																		"kind": "string",
																		"nativeSrc": "11710:10:7",
																		"nodeType": "YulLiteral",
																		"src": "11710:10:7",
																		"type": "",
																		"value": "ize loan"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11686:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11686:6:7"
																},
																"nativeSrc": "11686:35:7",
																"nodeType": "YulFunctionCall",
																"src": "11686:35:7"
															},
															"nativeSrc": "11686:35:7",
															"nodeType": "YulExpressionStatement",
															"src": "11686:35:7"
														}
													]
												},
												"name": "store_literal_in_memory_520c8012aa686709e412a6a69ffe245d6710e9b6ae69e933e702530a547be766",
												"nativeSrc": "11501:227:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11599:6:7",
														"nodeType": "YulTypedName",
														"src": "11599:6:7",
														"type": ""
													}
												],
												"src": "11501:227:7"
											},
											{
												"body": {
													"nativeSrc": "11880:220:7",
													"nodeType": "YulBlock",
													"src": "11880:220:7",
													"statements": [
														{
															"nativeSrc": "11890:74:7",
															"nodeType": "YulAssignment",
															"src": "11890:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11956:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11956:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11961:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11961:2:7",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11897:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "11897:58:7"
																},
																"nativeSrc": "11897:67:7",
																"nodeType": "YulFunctionCall",
																"src": "11897:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11890:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11890:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12062:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12062:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_520c8012aa686709e412a6a69ffe245d6710e9b6ae69e933e702530a547be766",
																	"nativeSrc": "11973:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "11973:88:7"
																},
																"nativeSrc": "11973:93:7",
																"nodeType": "YulFunctionCall",
																"src": "11973:93:7"
															},
															"nativeSrc": "11973:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "11973:93:7"
														},
														{
															"nativeSrc": "12075:19:7",
															"nodeType": "YulAssignment",
															"src": "12075:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12086:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12086:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12091:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12091:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12082:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12082:3:7"
																},
																"nativeSrc": "12082:12:7",
																"nodeType": "YulFunctionCall",
																"src": "12082:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12075:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12075:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_520c8012aa686709e412a6a69ffe245d6710e9b6ae69e933e702530a547be766_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11734:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11868:3:7",
														"nodeType": "YulTypedName",
														"src": "11868:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11876:3:7",
														"nodeType": "YulTypedName",
														"src": "11876:3:7",
														"type": ""
													}
												],
												"src": "11734:366:7"
											},
											{
												"body": {
													"nativeSrc": "12277:248:7",
													"nodeType": "YulBlock",
													"src": "12277:248:7",
													"statements": [
														{
															"nativeSrc": "12287:26:7",
															"nodeType": "YulAssignment",
															"src": "12287:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12299:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "12299:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12310:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12310:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12295:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12295:3:7"
																},
																"nativeSrc": "12295:18:7",
																"nodeType": "YulFunctionCall",
																"src": "12295:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12287:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "12287:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12334:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12334:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12345:1:7",
																				"nodeType": "YulLiteral",
																				"src": "12345:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12330:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12330:3:7"
																		},
																		"nativeSrc": "12330:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12330:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12353:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "12353:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12359:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12359:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12349:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12349:3:7"
																		},
																		"nativeSrc": "12349:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12349:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12323:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12323:6:7"
																},
																"nativeSrc": "12323:47:7",
																"nodeType": "YulFunctionCall",
																"src": "12323:47:7"
															},
															"nativeSrc": "12323:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "12323:47:7"
														},
														{
															"nativeSrc": "12379:139:7",
															"nodeType": "YulAssignment",
															"src": "12379:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12513:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "12513:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_520c8012aa686709e412a6a69ffe245d6710e9b6ae69e933e702530a547be766_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12387:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "12387:124:7"
																},
																"nativeSrc": "12387:131:7",
																"nodeType": "YulFunctionCall",
																"src": "12387:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12379:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "12379:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_520c8012aa686709e412a6a69ffe245d6710e9b6ae69e933e702530a547be766__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12106:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12257:9:7",
														"nodeType": "YulTypedName",
														"src": "12257:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12272:4:7",
														"nodeType": "YulTypedName",
														"src": "12272:4:7",
														"type": ""
													}
												],
												"src": "12106:419:7"
											},
											{
												"body": {
													"nativeSrc": "12637:64:7",
													"nodeType": "YulBlock",
													"src": "12637:64:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12659:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "12659:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12667:1:7",
																				"nodeType": "YulLiteral",
																				"src": "12667:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12655:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12655:3:7"
																		},
																		"nativeSrc": "12655:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12655:14:7"
																	},
																	{
																		"hexValue": "496e73756666696369656e742062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "12671:22:7",
																		"nodeType": "YulLiteral",
																		"src": "12671:22:7",
																		"type": "",
																		"value": "Insufficient balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12648:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12648:6:7"
																},
																"nativeSrc": "12648:46:7",
																"nodeType": "YulFunctionCall",
																"src": "12648:46:7"
															},
															"nativeSrc": "12648:46:7",
															"nodeType": "YulExpressionStatement",
															"src": "12648:46:7"
														}
													]
												},
												"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
												"nativeSrc": "12531:170:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12629:6:7",
														"nodeType": "YulTypedName",
														"src": "12629:6:7",
														"type": ""
													}
												],
												"src": "12531:170:7"
											},
											{
												"body": {
													"nativeSrc": "12853:220:7",
													"nodeType": "YulBlock",
													"src": "12853:220:7",
													"statements": [
														{
															"nativeSrc": "12863:74:7",
															"nodeType": "YulAssignment",
															"src": "12863:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12929:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12929:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12934:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12934:2:7",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12870:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "12870:58:7"
																},
																"nativeSrc": "12870:67:7",
																"nodeType": "YulFunctionCall",
																"src": "12870:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12863:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12863:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13035:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13035:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																	"nativeSrc": "12946:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "12946:88:7"
																},
																"nativeSrc": "12946:93:7",
																"nodeType": "YulFunctionCall",
																"src": "12946:93:7"
															},
															"nativeSrc": "12946:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "12946:93:7"
														},
														{
															"nativeSrc": "13048:19:7",
															"nodeType": "YulAssignment",
															"src": "13048:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13059:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13059:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13064:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13064:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13055:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13055:3:7"
																},
																"nativeSrc": "13055:12:7",
																"nodeType": "YulFunctionCall",
																"src": "13055:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13048:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13048:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12707:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12841:3:7",
														"nodeType": "YulTypedName",
														"src": "12841:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12849:3:7",
														"nodeType": "YulTypedName",
														"src": "12849:3:7",
														"type": ""
													}
												],
												"src": "12707:366:7"
											},
											{
												"body": {
													"nativeSrc": "13250:248:7",
													"nodeType": "YulBlock",
													"src": "13250:248:7",
													"statements": [
														{
															"nativeSrc": "13260:26:7",
															"nodeType": "YulAssignment",
															"src": "13260:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13272:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "13272:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13283:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13283:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13268:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13268:3:7"
																},
																"nativeSrc": "13268:18:7",
																"nodeType": "YulFunctionCall",
																"src": "13268:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13260:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "13260:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13307:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13307:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13318:1:7",
																				"nodeType": "YulLiteral",
																				"src": "13318:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13303:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13303:3:7"
																		},
																		"nativeSrc": "13303:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13303:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13326:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "13326:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13332:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13332:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13322:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13322:3:7"
																		},
																		"nativeSrc": "13322:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13322:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13296:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13296:6:7"
																},
																"nativeSrc": "13296:47:7",
																"nodeType": "YulFunctionCall",
																"src": "13296:47:7"
															},
															"nativeSrc": "13296:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "13296:47:7"
														},
														{
															"nativeSrc": "13352:139:7",
															"nodeType": "YulAssignment",
															"src": "13352:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13486:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "13486:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13360:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "13360:124:7"
																},
																"nativeSrc": "13360:131:7",
																"nodeType": "YulFunctionCall",
																"src": "13360:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13352:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "13352:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13079:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13230:9:7",
														"nodeType": "YulTypedName",
														"src": "13230:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13245:4:7",
														"nodeType": "YulTypedName",
														"src": "13245:4:7",
														"type": ""
													}
												],
												"src": "13079:419:7"
											},
											{
												"body": {
													"nativeSrc": "13610:115:7",
													"nodeType": "YulBlock",
													"src": "13610:115:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13632:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "13632:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13640:1:7",
																				"nodeType": "YulLiteral",
																				"src": "13640:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13628:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13628:3:7"
																		},
																		"nativeSrc": "13628:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13628:14:7"
																	},
																	{
																		"hexValue": "4578697374696e67206c6f616e206d7573742062652072657061696420666972",
																		"kind": "string",
																		"nativeSrc": "13644:34:7",
																		"nodeType": "YulLiteral",
																		"src": "13644:34:7",
																		"type": "",
																		"value": "Existing loan must be repaid fir"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13621:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13621:6:7"
																},
																"nativeSrc": "13621:58:7",
																"nodeType": "YulFunctionCall",
																"src": "13621:58:7"
															},
															"nativeSrc": "13621:58:7",
															"nodeType": "YulExpressionStatement",
															"src": "13621:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13700:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "13700:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13708:2:7",
																				"nodeType": "YulLiteral",
																				"src": "13708:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13696:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13696:3:7"
																		},
																		"nativeSrc": "13696:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13696:15:7"
																	},
																	{
																		"hexValue": "7374",
																		"kind": "string",
																		"nativeSrc": "13713:4:7",
																		"nodeType": "YulLiteral",
																		"src": "13713:4:7",
																		"type": "",
																		"value": "st"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13689:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13689:6:7"
																},
																"nativeSrc": "13689:29:7",
																"nodeType": "YulFunctionCall",
																"src": "13689:29:7"
															},
															"nativeSrc": "13689:29:7",
															"nodeType": "YulExpressionStatement",
															"src": "13689:29:7"
														}
													]
												},
												"name": "store_literal_in_memory_889a3b76d8842e701e057a17fd85bfbebe0b3cfb874080561fa0d002c2c44c71",
												"nativeSrc": "13504:221:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13602:6:7",
														"nodeType": "YulTypedName",
														"src": "13602:6:7",
														"type": ""
													}
												],
												"src": "13504:221:7"
											},
											{
												"body": {
													"nativeSrc": "13877:220:7",
													"nodeType": "YulBlock",
													"src": "13877:220:7",
													"statements": [
														{
															"nativeSrc": "13887:74:7",
															"nodeType": "YulAssignment",
															"src": "13887:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13953:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13953:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13958:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13958:2:7",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13894:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "13894:58:7"
																},
																"nativeSrc": "13894:67:7",
																"nodeType": "YulFunctionCall",
																"src": "13894:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13887:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13887:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14059:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "14059:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_889a3b76d8842e701e057a17fd85bfbebe0b3cfb874080561fa0d002c2c44c71",
																	"nativeSrc": "13970:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "13970:88:7"
																},
																"nativeSrc": "13970:93:7",
																"nodeType": "YulFunctionCall",
																"src": "13970:93:7"
															},
															"nativeSrc": "13970:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "13970:93:7"
														},
														{
															"nativeSrc": "14072:19:7",
															"nodeType": "YulAssignment",
															"src": "14072:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14083:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "14083:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14088:2:7",
																		"nodeType": "YulLiteral",
																		"src": "14088:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14079:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14079:3:7"
																},
																"nativeSrc": "14079:12:7",
																"nodeType": "YulFunctionCall",
																"src": "14079:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14072:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14072:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_889a3b76d8842e701e057a17fd85bfbebe0b3cfb874080561fa0d002c2c44c71_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13731:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13865:3:7",
														"nodeType": "YulTypedName",
														"src": "13865:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13873:3:7",
														"nodeType": "YulTypedName",
														"src": "13873:3:7",
														"type": ""
													}
												],
												"src": "13731:366:7"
											},
											{
												"body": {
													"nativeSrc": "14274:248:7",
													"nodeType": "YulBlock",
													"src": "14274:248:7",
													"statements": [
														{
															"nativeSrc": "14284:26:7",
															"nodeType": "YulAssignment",
															"src": "14284:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14296:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "14296:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14307:2:7",
																		"nodeType": "YulLiteral",
																		"src": "14307:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14292:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14292:3:7"
																},
																"nativeSrc": "14292:18:7",
																"nodeType": "YulFunctionCall",
																"src": "14292:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14284:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "14284:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14331:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "14331:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14342:1:7",
																				"nodeType": "YulLiteral",
																				"src": "14342:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14327:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14327:3:7"
																		},
																		"nativeSrc": "14327:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14327:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14350:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "14350:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14356:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "14356:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14346:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14346:3:7"
																		},
																		"nativeSrc": "14346:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14346:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14320:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14320:6:7"
																},
																"nativeSrc": "14320:47:7",
																"nodeType": "YulFunctionCall",
																"src": "14320:47:7"
															},
															"nativeSrc": "14320:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "14320:47:7"
														},
														{
															"nativeSrc": "14376:139:7",
															"nodeType": "YulAssignment",
															"src": "14376:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14510:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "14510:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_889a3b76d8842e701e057a17fd85bfbebe0b3cfb874080561fa0d002c2c44c71_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14384:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "14384:124:7"
																},
																"nativeSrc": "14384:131:7",
																"nodeType": "YulFunctionCall",
																"src": "14384:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14376:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "14376:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_889a3b76d8842e701e057a17fd85bfbebe0b3cfb874080561fa0d002c2c44c71__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14103:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14254:9:7",
														"nodeType": "YulTypedName",
														"src": "14254:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14269:4:7",
														"nodeType": "YulTypedName",
														"src": "14269:4:7",
														"type": ""
													}
												],
												"src": "14103:419:7"
											},
											{
												"body": {
													"nativeSrc": "14634:71:7",
													"nodeType": "YulBlock",
													"src": "14634:71:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14656:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "14656:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14664:1:7",
																				"nodeType": "YulLiteral",
																				"src": "14664:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14652:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14652:3:7"
																		},
																		"nativeSrc": "14652:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14652:14:7"
																	},
																	{
																		"hexValue": "426f72726f7720616d6f756e742065786365656473206c696d6974",
																		"kind": "string",
																		"nativeSrc": "14668:29:7",
																		"nodeType": "YulLiteral",
																		"src": "14668:29:7",
																		"type": "",
																		"value": "Borrow amount exceeds limit"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14645:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14645:6:7"
																},
																"nativeSrc": "14645:53:7",
																"nodeType": "YulFunctionCall",
																"src": "14645:53:7"
															},
															"nativeSrc": "14645:53:7",
															"nodeType": "YulExpressionStatement",
															"src": "14645:53:7"
														}
													]
												},
												"name": "store_literal_in_memory_0b13f011926795557929f438867da0012b263fbc8a672de2f5c7ef42a2687115",
												"nativeSrc": "14528:177:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14626:6:7",
														"nodeType": "YulTypedName",
														"src": "14626:6:7",
														"type": ""
													}
												],
												"src": "14528:177:7"
											},
											{
												"body": {
													"nativeSrc": "14857:220:7",
													"nodeType": "YulBlock",
													"src": "14857:220:7",
													"statements": [
														{
															"nativeSrc": "14867:74:7",
															"nodeType": "YulAssignment",
															"src": "14867:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14933:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "14933:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14938:2:7",
																		"nodeType": "YulLiteral",
																		"src": "14938:2:7",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14874:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "14874:58:7"
																},
																"nativeSrc": "14874:67:7",
																"nodeType": "YulFunctionCall",
																"src": "14874:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14867:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14867:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15039:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "15039:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0b13f011926795557929f438867da0012b263fbc8a672de2f5c7ef42a2687115",
																	"nativeSrc": "14950:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "14950:88:7"
																},
																"nativeSrc": "14950:93:7",
																"nodeType": "YulFunctionCall",
																"src": "14950:93:7"
															},
															"nativeSrc": "14950:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "14950:93:7"
														},
														{
															"nativeSrc": "15052:19:7",
															"nodeType": "YulAssignment",
															"src": "15052:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15063:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "15063:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15068:2:7",
																		"nodeType": "YulLiteral",
																		"src": "15068:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15059:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15059:3:7"
																},
																"nativeSrc": "15059:12:7",
																"nodeType": "YulFunctionCall",
																"src": "15059:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15052:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15052:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0b13f011926795557929f438867da0012b263fbc8a672de2f5c7ef42a2687115_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14711:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14845:3:7",
														"nodeType": "YulTypedName",
														"src": "14845:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14853:3:7",
														"nodeType": "YulTypedName",
														"src": "14853:3:7",
														"type": ""
													}
												],
												"src": "14711:366:7"
											},
											{
												"body": {
													"nativeSrc": "15254:248:7",
													"nodeType": "YulBlock",
													"src": "15254:248:7",
													"statements": [
														{
															"nativeSrc": "15264:26:7",
															"nodeType": "YulAssignment",
															"src": "15264:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15276:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "15276:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15287:2:7",
																		"nodeType": "YulLiteral",
																		"src": "15287:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15272:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15272:3:7"
																},
																"nativeSrc": "15272:18:7",
																"nodeType": "YulFunctionCall",
																"src": "15272:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15264:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "15264:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15311:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "15311:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15322:1:7",
																				"nodeType": "YulLiteral",
																				"src": "15322:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15307:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15307:3:7"
																		},
																		"nativeSrc": "15307:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15307:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15330:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "15330:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15336:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "15336:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15326:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15326:3:7"
																		},
																		"nativeSrc": "15326:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15326:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15300:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15300:6:7"
																},
																"nativeSrc": "15300:47:7",
																"nodeType": "YulFunctionCall",
																"src": "15300:47:7"
															},
															"nativeSrc": "15300:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "15300:47:7"
														},
														{
															"nativeSrc": "15356:139:7",
															"nodeType": "YulAssignment",
															"src": "15356:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15490:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "15490:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0b13f011926795557929f438867da0012b263fbc8a672de2f5c7ef42a2687115_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15364:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "15364:124:7"
																},
																"nativeSrc": "15364:131:7",
																"nodeType": "YulFunctionCall",
																"src": "15364:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15356:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "15356:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0b13f011926795557929f438867da0012b263fbc8a672de2f5c7ef42a2687115__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15083:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15234:9:7",
														"nodeType": "YulTypedName",
														"src": "15234:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15249:4:7",
														"nodeType": "YulTypedName",
														"src": "15249:4:7",
														"type": ""
													}
												],
												"src": "15083:419:7"
											},
											{
												"body": {
													"nativeSrc": "15571:80:7",
													"nodeType": "YulBlock",
													"src": "15571:80:7",
													"statements": [
														{
															"nativeSrc": "15581:22:7",
															"nodeType": "YulAssignment",
															"src": "15581:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "15596:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "15596:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "15590:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "15590:5:7"
																},
																"nativeSrc": "15590:13:7",
																"nodeType": "YulFunctionCall",
																"src": "15590:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "15581:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "15581:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15639:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "15639:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "15612:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "15612:26:7"
																},
																"nativeSrc": "15612:33:7",
																"nodeType": "YulFunctionCall",
																"src": "15612:33:7"
															},
															"nativeSrc": "15612:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "15612:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "15508:143:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "15549:6:7",
														"nodeType": "YulTypedName",
														"src": "15549:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "15557:3:7",
														"nodeType": "YulTypedName",
														"src": "15557:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "15565:5:7",
														"nodeType": "YulTypedName",
														"src": "15565:5:7",
														"type": ""
													}
												],
												"src": "15508:143:7"
											},
											{
												"body": {
													"nativeSrc": "15734:274:7",
													"nodeType": "YulBlock",
													"src": "15734:274:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "15780:83:7",
																"nodeType": "YulBlock",
																"src": "15780:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "15782:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "15782:77:7"
																			},
																			"nativeSrc": "15782:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "15782:79:7"
																		},
																		"nativeSrc": "15782:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "15782:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15755:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "15755:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15764:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "15764:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15751:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15751:3:7"
																		},
																		"nativeSrc": "15751:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15751:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15776:2:7",
																		"nodeType": "YulLiteral",
																		"src": "15776:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "15747:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15747:3:7"
																},
																"nativeSrc": "15747:32:7",
																"nodeType": "YulFunctionCall",
																"src": "15747:32:7"
															},
															"nativeSrc": "15744:119:7",
															"nodeType": "YulIf",
															"src": "15744:119:7"
														},
														{
															"nativeSrc": "15873:128:7",
															"nodeType": "YulBlock",
															"src": "15873:128:7",
															"statements": [
																{
																	"nativeSrc": "15888:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "15888:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "15902:1:7",
																		"nodeType": "YulLiteral",
																		"src": "15902:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "15892:6:7",
																			"nodeType": "YulTypedName",
																			"src": "15892:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "15917:74:7",
																	"nodeType": "YulAssignment",
																	"src": "15917:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "15963:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "15963:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "15974:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "15974:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "15959:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "15959:3:7"
																				},
																				"nativeSrc": "15959:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "15959:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15983:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "15983:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "15927:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "15927:31:7"
																		},
																		"nativeSrc": "15927:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15927:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "15917:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "15917:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "15657:351:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15704:9:7",
														"nodeType": "YulTypedName",
														"src": "15704:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "15715:7:7",
														"nodeType": "YulTypedName",
														"src": "15715:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "15727:6:7",
														"nodeType": "YulTypedName",
														"src": "15727:6:7",
														"type": ""
													}
												],
												"src": "15657:351:7"
											},
											{
												"body": {
													"nativeSrc": "16120:72:7",
													"nodeType": "YulBlock",
													"src": "16120:72:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16142:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "16142:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16150:1:7",
																				"nodeType": "YulLiteral",
																				"src": "16150:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16138:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "16138:3:7"
																		},
																		"nativeSrc": "16138:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "16138:14:7"
																	},
																	{
																		"hexValue": "496e73756666696369656e742042544320696e20636f6e7472616374",
																		"kind": "string",
																		"nativeSrc": "16154:30:7",
																		"nodeType": "YulLiteral",
																		"src": "16154:30:7",
																		"type": "",
																		"value": "Insufficient BTC in contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16131:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "16131:6:7"
																},
																"nativeSrc": "16131:54:7",
																"nodeType": "YulFunctionCall",
																"src": "16131:54:7"
															},
															"nativeSrc": "16131:54:7",
															"nodeType": "YulExpressionStatement",
															"src": "16131:54:7"
														}
													]
												},
												"name": "store_literal_in_memory_2ad103ba1dc4e3e245c2b9ad8cbdb9bd016961ea614c79fe06c4a9b921438ddf",
												"nativeSrc": "16014:178:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16112:6:7",
														"nodeType": "YulTypedName",
														"src": "16112:6:7",
														"type": ""
													}
												],
												"src": "16014:178:7"
											},
											{
												"body": {
													"nativeSrc": "16344:220:7",
													"nodeType": "YulBlock",
													"src": "16344:220:7",
													"statements": [
														{
															"nativeSrc": "16354:74:7",
															"nodeType": "YulAssignment",
															"src": "16354:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16420:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "16420:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16425:2:7",
																		"nodeType": "YulLiteral",
																		"src": "16425:2:7",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16361:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "16361:58:7"
																},
																"nativeSrc": "16361:67:7",
																"nodeType": "YulFunctionCall",
																"src": "16361:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16354:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16354:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16526:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "16526:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2ad103ba1dc4e3e245c2b9ad8cbdb9bd016961ea614c79fe06c4a9b921438ddf",
																	"nativeSrc": "16437:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "16437:88:7"
																},
																"nativeSrc": "16437:93:7",
																"nodeType": "YulFunctionCall",
																"src": "16437:93:7"
															},
															"nativeSrc": "16437:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "16437:93:7"
														},
														{
															"nativeSrc": "16539:19:7",
															"nodeType": "YulAssignment",
															"src": "16539:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16550:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "16550:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16555:2:7",
																		"nodeType": "YulLiteral",
																		"src": "16555:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16546:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16546:3:7"
																},
																"nativeSrc": "16546:12:7",
																"nodeType": "YulFunctionCall",
																"src": "16546:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16539:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16539:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2ad103ba1dc4e3e245c2b9ad8cbdb9bd016961ea614c79fe06c4a9b921438ddf_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16198:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16332:3:7",
														"nodeType": "YulTypedName",
														"src": "16332:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16340:3:7",
														"nodeType": "YulTypedName",
														"src": "16340:3:7",
														"type": ""
													}
												],
												"src": "16198:366:7"
											},
											{
												"body": {
													"nativeSrc": "16741:248:7",
													"nodeType": "YulBlock",
													"src": "16741:248:7",
													"statements": [
														{
															"nativeSrc": "16751:26:7",
															"nodeType": "YulAssignment",
															"src": "16751:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16763:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "16763:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16774:2:7",
																		"nodeType": "YulLiteral",
																		"src": "16774:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16759:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16759:3:7"
																},
																"nativeSrc": "16759:18:7",
																"nodeType": "YulFunctionCall",
																"src": "16759:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16751:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "16751:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16798:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "16798:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16809:1:7",
																				"nodeType": "YulLiteral",
																				"src": "16809:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16794:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "16794:3:7"
																		},
																		"nativeSrc": "16794:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "16794:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16817:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "16817:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16823:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "16823:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16813:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "16813:3:7"
																		},
																		"nativeSrc": "16813:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "16813:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16787:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "16787:6:7"
																},
																"nativeSrc": "16787:47:7",
																"nodeType": "YulFunctionCall",
																"src": "16787:47:7"
															},
															"nativeSrc": "16787:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "16787:47:7"
														},
														{
															"nativeSrc": "16843:139:7",
															"nodeType": "YulAssignment",
															"src": "16843:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16977:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "16977:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2ad103ba1dc4e3e245c2b9ad8cbdb9bd016961ea614c79fe06c4a9b921438ddf_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16851:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "16851:124:7"
																},
																"nativeSrc": "16851:131:7",
																"nodeType": "YulFunctionCall",
																"src": "16851:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16843:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "16843:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2ad103ba1dc4e3e245c2b9ad8cbdb9bd016961ea614c79fe06c4a9b921438ddf__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16570:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16721:9:7",
														"nodeType": "YulTypedName",
														"src": "16721:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16736:4:7",
														"nodeType": "YulTypedName",
														"src": "16736:4:7",
														"type": ""
													}
												],
												"src": "16570:419:7"
											},
											{
												"body": {
													"nativeSrc": "17149:288:7",
													"nodeType": "YulBlock",
													"src": "17149:288:7",
													"statements": [
														{
															"nativeSrc": "17159:26:7",
															"nodeType": "YulAssignment",
															"src": "17159:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17171:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "17171:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17182:2:7",
																		"nodeType": "YulLiteral",
																		"src": "17182:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17167:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "17167:3:7"
																},
																"nativeSrc": "17167:18:7",
																"nodeType": "YulFunctionCall",
																"src": "17167:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17159:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "17159:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "17239:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "17239:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17252:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "17252:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17263:1:7",
																				"nodeType": "YulLiteral",
																				"src": "17263:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17248:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "17248:3:7"
																		},
																		"nativeSrc": "17248:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "17248:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "17195:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "17195:43:7"
																},
																"nativeSrc": "17195:71:7",
																"nodeType": "YulFunctionCall",
																"src": "17195:71:7"
															},
															"nativeSrc": "17195:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "17195:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "17320:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "17320:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17333:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "17333:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17344:2:7",
																				"nodeType": "YulLiteral",
																				"src": "17344:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17329:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "17329:3:7"
																		},
																		"nativeSrc": "17329:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "17329:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "17276:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "17276:43:7"
																},
																"nativeSrc": "17276:72:7",
																"nodeType": "YulFunctionCall",
																"src": "17276:72:7"
															},
															"nativeSrc": "17276:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "17276:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "17402:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "17402:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17415:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "17415:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17426:2:7",
																				"nodeType": "YulLiteral",
																				"src": "17426:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17411:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "17411:3:7"
																		},
																		"nativeSrc": "17411:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "17411:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "17358:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "17358:43:7"
																},
																"nativeSrc": "17358:72:7",
																"nodeType": "YulFunctionCall",
																"src": "17358:72:7"
															},
															"nativeSrc": "17358:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "17358:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "16995:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17105:9:7",
														"nodeType": "YulTypedName",
														"src": "17105:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "17117:6:7",
														"nodeType": "YulTypedName",
														"src": "17117:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "17125:6:7",
														"nodeType": "YulTypedName",
														"src": "17125:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "17133:6:7",
														"nodeType": "YulTypedName",
														"src": "17133:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17144:4:7",
														"nodeType": "YulTypedName",
														"src": "17144:4:7",
														"type": ""
													}
												],
												"src": "16995:442:7"
											},
											{
												"body": {
													"nativeSrc": "17569:206:7",
													"nodeType": "YulBlock",
													"src": "17569:206:7",
													"statements": [
														{
															"nativeSrc": "17579:26:7",
															"nodeType": "YulAssignment",
															"src": "17579:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17591:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "17591:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17602:2:7",
																		"nodeType": "YulLiteral",
																		"src": "17602:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17587:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "17587:3:7"
																},
																"nativeSrc": "17587:18:7",
																"nodeType": "YulFunctionCall",
																"src": "17587:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17579:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "17579:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "17659:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "17659:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17672:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "17672:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17683:1:7",
																				"nodeType": "YulLiteral",
																				"src": "17683:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17668:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "17668:3:7"
																		},
																		"nativeSrc": "17668:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "17668:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "17615:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "17615:43:7"
																},
																"nativeSrc": "17615:71:7",
																"nodeType": "YulFunctionCall",
																"src": "17615:71:7"
															},
															"nativeSrc": "17615:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "17615:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "17740:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "17740:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17753:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "17753:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17764:2:7",
																				"nodeType": "YulLiteral",
																				"src": "17764:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17749:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "17749:3:7"
																		},
																		"nativeSrc": "17749:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "17749:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "17696:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "17696:43:7"
																},
																"nativeSrc": "17696:72:7",
																"nodeType": "YulFunctionCall",
																"src": "17696:72:7"
															},
															"nativeSrc": "17696:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "17696:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "17443:332:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17533:9:7",
														"nodeType": "YulTypedName",
														"src": "17533:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "17545:6:7",
														"nodeType": "YulTypedName",
														"src": "17545:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "17553:6:7",
														"nodeType": "YulTypedName",
														"src": "17553:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17564:4:7",
														"nodeType": "YulTypedName",
														"src": "17564:4:7",
														"type": ""
													}
												],
												"src": "17443:332:7"
											},
											{
												"body": {
													"nativeSrc": "17821:76:7",
													"nodeType": "YulBlock",
													"src": "17821:76:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "17875:16:7",
																"nodeType": "YulBlock",
																"src": "17875:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "17884:1:7",
																					"nodeType": "YulLiteral",
																					"src": "17884:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "17887:1:7",
																					"nodeType": "YulLiteral",
																					"src": "17887:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "17877:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "17877:6:7"
																			},
																			"nativeSrc": "17877:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "17877:12:7"
																		},
																		"nativeSrc": "17877:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "17877:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "17844:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "17844:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "17866:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "17866:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "17851:14:7",
																					"nodeType": "YulIdentifier",
																					"src": "17851:14:7"
																				},
																				"nativeSrc": "17851:21:7",
																				"nodeType": "YulFunctionCall",
																				"src": "17851:21:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "17841:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "17841:2:7"
																		},
																		"nativeSrc": "17841:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "17841:32:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "17834:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "17834:6:7"
																},
																"nativeSrc": "17834:40:7",
																"nodeType": "YulFunctionCall",
																"src": "17834:40:7"
															},
															"nativeSrc": "17831:60:7",
															"nodeType": "YulIf",
															"src": "17831:60:7"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "17781:116:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "17814:5:7",
														"nodeType": "YulTypedName",
														"src": "17814:5:7",
														"type": ""
													}
												],
												"src": "17781:116:7"
											},
											{
												"body": {
													"nativeSrc": "17963:77:7",
													"nodeType": "YulBlock",
													"src": "17963:77:7",
													"statements": [
														{
															"nativeSrc": "17973:22:7",
															"nodeType": "YulAssignment",
															"src": "17973:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "17988:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "17988:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "17982:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "17982:5:7"
																},
																"nativeSrc": "17982:13:7",
																"nodeType": "YulFunctionCall",
																"src": "17982:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "17973:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "17973:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "18028:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "18028:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "18004:23:7",
																	"nodeType": "YulIdentifier",
																	"src": "18004:23:7"
																},
																"nativeSrc": "18004:30:7",
																"nodeType": "YulFunctionCall",
																"src": "18004:30:7"
															},
															"nativeSrc": "18004:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "18004:30:7"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "17903:137:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "17941:6:7",
														"nodeType": "YulTypedName",
														"src": "17941:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "17949:3:7",
														"nodeType": "YulTypedName",
														"src": "17949:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "17957:5:7",
														"nodeType": "YulTypedName",
														"src": "17957:5:7",
														"type": ""
													}
												],
												"src": "17903:137:7"
											},
											{
												"body": {
													"nativeSrc": "18120:271:7",
													"nodeType": "YulBlock",
													"src": "18120:271:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "18166:83:7",
																"nodeType": "YulBlock",
																"src": "18166:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "18168:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "18168:77:7"
																			},
																			"nativeSrc": "18168:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "18168:79:7"
																		},
																		"nativeSrc": "18168:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "18168:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "18141:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "18141:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18150:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "18150:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18137:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "18137:3:7"
																		},
																		"nativeSrc": "18137:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "18137:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18162:2:7",
																		"nodeType": "YulLiteral",
																		"src": "18162:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "18133:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "18133:3:7"
																},
																"nativeSrc": "18133:32:7",
																"nodeType": "YulFunctionCall",
																"src": "18133:32:7"
															},
															"nativeSrc": "18130:119:7",
															"nodeType": "YulIf",
															"src": "18130:119:7"
														},
														{
															"nativeSrc": "18259:125:7",
															"nodeType": "YulBlock",
															"src": "18259:125:7",
															"statements": [
																{
																	"nativeSrc": "18274:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "18274:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "18288:1:7",
																		"nodeType": "YulLiteral",
																		"src": "18288:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "18278:6:7",
																			"nodeType": "YulTypedName",
																			"src": "18278:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "18303:71:7",
																	"nodeType": "YulAssignment",
																	"src": "18303:71:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "18346:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "18346:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "18357:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "18357:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "18342:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "18342:3:7"
																				},
																				"nativeSrc": "18342:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "18342:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "18366:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "18366:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "18313:28:7",
																			"nodeType": "YulIdentifier",
																			"src": "18313:28:7"
																		},
																		"nativeSrc": "18313:61:7",
																		"nodeType": "YulFunctionCall",
																		"src": "18313:61:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "18303:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "18303:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "18046:345:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18090:9:7",
														"nodeType": "YulTypedName",
														"src": "18090:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "18101:7:7",
														"nodeType": "YulTypedName",
														"src": "18101:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "18113:6:7",
														"nodeType": "YulTypedName",
														"src": "18113:6:7",
														"type": ""
													}
												],
												"src": "18046:345:7"
											},
											{
												"body": {
													"nativeSrc": "18455:40:7",
													"nodeType": "YulBlock",
													"src": "18455:40:7",
													"statements": [
														{
															"nativeSrc": "18466:22:7",
															"nodeType": "YulAssignment",
															"src": "18466:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "18482:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "18482:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "18476:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "18476:5:7"
																},
																"nativeSrc": "18476:12:7",
																"nodeType": "YulFunctionCall",
																"src": "18476:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "18466:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "18466:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "18397:98:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "18438:5:7",
														"nodeType": "YulTypedName",
														"src": "18438:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "18448:6:7",
														"nodeType": "YulTypedName",
														"src": "18448:6:7",
														"type": ""
													}
												],
												"src": "18397:98:7"
											},
											{
												"body": {
													"nativeSrc": "18614:34:7",
													"nodeType": "YulBlock",
													"src": "18614:34:7",
													"statements": [
														{
															"nativeSrc": "18624:18:7",
															"nodeType": "YulAssignment",
															"src": "18624:18:7",
															"value": {
																"name": "pos",
																"nativeSrc": "18639:3:7",
																"nodeType": "YulIdentifier",
																"src": "18639:3:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "18624:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "18624:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "18501:147:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18586:3:7",
														"nodeType": "YulTypedName",
														"src": "18586:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "18591:6:7",
														"nodeType": "YulTypedName",
														"src": "18591:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "18602:11:7",
														"nodeType": "YulTypedName",
														"src": "18602:11:7",
														"type": ""
													}
												],
												"src": "18501:147:7"
											},
											{
												"body": {
													"nativeSrc": "18716:186:7",
													"nodeType": "YulBlock",
													"src": "18716:186:7",
													"statements": [
														{
															"nativeSrc": "18727:10:7",
															"nodeType": "YulVariableDeclaration",
															"src": "18727:10:7",
															"value": {
																"kind": "number",
																"nativeSrc": "18736:1:7",
																"nodeType": "YulLiteral",
																"src": "18736:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "18731:1:7",
																	"nodeType": "YulTypedName",
																	"src": "18731:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "18796:63:7",
																"nodeType": "YulBlock",
																"src": "18796:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "18821:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "18821:3:7"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "18826:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "18826:1:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "18817:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "18817:3:7"
																					},
																					"nativeSrc": "18817:11:7",
																					"nodeType": "YulFunctionCall",
																					"src": "18817:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "18840:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "18840:3:7"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "18845:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "18845:1:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "18836:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "18836:3:7"
																							},
																							"nativeSrc": "18836:11:7",
																							"nodeType": "YulFunctionCall",
																							"src": "18836:11:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "18830:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "18830:5:7"
																					},
																					"nativeSrc": "18830:18:7",
																					"nodeType": "YulFunctionCall",
																					"src": "18830:18:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "18810:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "18810:6:7"
																			},
																			"nativeSrc": "18810:39:7",
																			"nodeType": "YulFunctionCall",
																			"src": "18810:39:7"
																		},
																		"nativeSrc": "18810:39:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "18810:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "18757:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "18757:1:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "18760:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "18760:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "18754:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "18754:2:7"
																},
																"nativeSrc": "18754:13:7",
																"nodeType": "YulFunctionCall",
																"src": "18754:13:7"
															},
															"nativeSrc": "18746:113:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "18768:19:7",
																"nodeType": "YulBlock",
																"src": "18768:19:7",
																"statements": [
																	{
																		"nativeSrc": "18770:15:7",
																		"nodeType": "YulAssignment",
																		"src": "18770:15:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "18779:1:7",
																					"nodeType": "YulIdentifier",
																					"src": "18779:1:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "18782:2:7",
																					"nodeType": "YulLiteral",
																					"src": "18782:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "18775:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "18775:3:7"
																			},
																			"nativeSrc": "18775:10:7",
																			"nodeType": "YulFunctionCall",
																			"src": "18775:10:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "18770:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "18770:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "18750:3:7",
																"nodeType": "YulBlock",
																"src": "18750:3:7",
																"statements": []
															},
															"src": "18746:113:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "18879:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "18879:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "18884:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "18884:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18875:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "18875:3:7"
																		},
																		"nativeSrc": "18875:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "18875:16:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18893:1:7",
																		"nodeType": "YulLiteral",
																		"src": "18893:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18868:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "18868:6:7"
																},
																"nativeSrc": "18868:27:7",
																"nodeType": "YulFunctionCall",
																"src": "18868:27:7"
															},
															"nativeSrc": "18868:27:7",
															"nodeType": "YulExpressionStatement",
															"src": "18868:27:7"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "18654:248:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "18698:3:7",
														"nodeType": "YulTypedName",
														"src": "18698:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "18703:3:7",
														"nodeType": "YulTypedName",
														"src": "18703:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "18708:6:7",
														"nodeType": "YulTypedName",
														"src": "18708:6:7",
														"type": ""
													}
												],
												"src": "18654:248:7"
											},
											{
												"body": {
													"nativeSrc": "19016:278:7",
													"nodeType": "YulBlock",
													"src": "19016:278:7",
													"statements": [
														{
															"nativeSrc": "19026:52:7",
															"nodeType": "YulVariableDeclaration",
															"src": "19026:52:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "19072:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "19072:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "19040:31:7",
																	"nodeType": "YulIdentifier",
																	"src": "19040:31:7"
																},
																"nativeSrc": "19040:38:7",
																"nodeType": "YulFunctionCall",
																"src": "19040:38:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "19030:6:7",
																	"nodeType": "YulTypedName",
																	"src": "19030:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "19087:95:7",
															"nodeType": "YulAssignment",
															"src": "19087:95:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19170:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "19170:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "19175:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "19175:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "19094:75:7",
																	"nodeType": "YulIdentifier",
																	"src": "19094:75:7"
																},
																"nativeSrc": "19094:88:7",
																"nodeType": "YulFunctionCall",
																"src": "19094:88:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19087:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "19087:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "19230:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "19230:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19237:4:7",
																				"nodeType": "YulLiteral",
																				"src": "19237:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19226:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "19226:3:7"
																		},
																		"nativeSrc": "19226:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "19226:16:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "19244:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "19244:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "19249:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "19249:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "19191:34:7",
																	"nodeType": "YulIdentifier",
																	"src": "19191:34:7"
																},
																"nativeSrc": "19191:65:7",
																"nodeType": "YulFunctionCall",
																"src": "19191:65:7"
															},
															"nativeSrc": "19191:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "19191:65:7"
														},
														{
															"nativeSrc": "19265:23:7",
															"nodeType": "YulAssignment",
															"src": "19265:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19276:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "19276:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "19281:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "19281:6:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19272:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "19272:3:7"
																},
																"nativeSrc": "19272:16:7",
																"nodeType": "YulFunctionCall",
																"src": "19272:16:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19265:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "19265:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "18908:386:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "18997:5:7",
														"nodeType": "YulTypedName",
														"src": "18997:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "19004:3:7",
														"nodeType": "YulTypedName",
														"src": "19004:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19012:3:7",
														"nodeType": "YulTypedName",
														"src": "19012:3:7",
														"type": ""
													}
												],
												"src": "18908:386:7"
											},
											{
												"body": {
													"nativeSrc": "19434:137:7",
													"nodeType": "YulBlock",
													"src": "19434:137:7",
													"statements": [
														{
															"nativeSrc": "19445:100:7",
															"nodeType": "YulAssignment",
															"src": "19445:100:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "19532:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "19532:6:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "19541:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "19541:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "19452:79:7",
																	"nodeType": "YulIdentifier",
																	"src": "19452:79:7"
																},
																"nativeSrc": "19452:93:7",
																"nodeType": "YulFunctionCall",
																"src": "19452:93:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19445:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "19445:3:7"
																}
															]
														},
														{
															"nativeSrc": "19555:10:7",
															"nodeType": "YulAssignment",
															"src": "19555:10:7",
															"value": {
																"name": "pos",
																"nativeSrc": "19562:3:7",
																"nodeType": "YulIdentifier",
																"src": "19562:3:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19555:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "19555:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "19300:271:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19413:3:7",
														"nodeType": "YulTypedName",
														"src": "19413:3:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "19419:6:7",
														"nodeType": "YulTypedName",
														"src": "19419:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19430:3:7",
														"nodeType": "YulTypedName",
														"src": "19430:3:7",
														"type": ""
													}
												],
												"src": "19300:271:7"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$225_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$225_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$225_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$225__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$225_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    // struct CoreLoanPlatform.Loan -> struct CoreLoanPlatform.Loan\n    function abi_encode_t_struct$_Loan_$881_memory_ptr_to_t_struct$_Loan_$881_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x80)\n\n        {\n            // amount\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // collateral\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // timestamp\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // active\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0x60))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_Loan_$881_memory_ptr__to_t_struct$_Loan_$881_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_struct$_Loan_$881_memory_ptr_to_t_struct$_Loan_$881_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_5d763a4fa76dcd5af45b10ebcfff84ed4476e04c563aef69c0eaf01d8a5ccfba(memPtr) {\n\n        mstore(add(memPtr, 0), \"No active loan\")\n\n    }\n\n    function abi_encode_t_stringliteral_5d763a4fa76dcd5af45b10ebcfff84ed4476e04c563aef69c0eaf01d8a5ccfba_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_5d763a4fa76dcd5af45b10ebcfff84ed4476e04c563aef69c0eaf01d8a5ccfba(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5d763a4fa76dcd5af45b10ebcfff84ed4476e04c563aef69c0eaf01d8a5ccfba__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5d763a4fa76dcd5af45b10ebcfff84ed4476e04c563aef69c0eaf01d8a5ccfba_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_a7a7a3281abb2373d36b680552e8d3f537ad1508b3db7c57c338d13cfa2860a9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Loan duration exceeded 30 days\")\n\n    }\n\n    function abi_encode_t_stringliteral_a7a7a3281abb2373d36b680552e8d3f537ad1508b3db7c57c338d13cfa2860a9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_a7a7a3281abb2373d36b680552e8d3f537ad1508b3db7c57c338d13cfa2860a9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a7a7a3281abb2373d36b680552e8d3f537ad1508b3db7c57c338d13cfa2860a9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a7a7a3281abb2373d36b680552e8d3f537ad1508b3db7c57c338d13cfa2860a9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount must be greater than 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c9a6548b8b08f3e884692ff4b4c5cb58e1633771e97667c355d207e48aa0a8aa(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient collateral\")\n\n    }\n\n    function abi_encode_t_stringliteral_c9a6548b8b08f3e884692ff4b4c5cb58e1633771e97667c355d207e48aa0a8aa_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_c9a6548b8b08f3e884692ff4b4c5cb58e1633771e97667c355d207e48aa0a8aa(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c9a6548b8b08f3e884692ff4b4c5cb58e1633771e97667c355d207e48aa0a8aa__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c9a6548b8b08f3e884692ff4b4c5cb58e1633771e97667c355d207e48aa0a8aa_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_520c8012aa686709e412a6a69ffe245d6710e9b6ae69e933e702530a547be766(memPtr) {\n\n        mstore(add(memPtr, 0), \"Withdrawal would undercollateral\")\n\n        mstore(add(memPtr, 32), \"ize loan\")\n\n    }\n\n    function abi_encode_t_stringliteral_520c8012aa686709e412a6a69ffe245d6710e9b6ae69e933e702530a547be766_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_520c8012aa686709e412a6a69ffe245d6710e9b6ae69e933e702530a547be766(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_520c8012aa686709e412a6a69ffe245d6710e9b6ae69e933e702530a547be766__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_520c8012aa686709e412a6a69ffe245d6710e9b6ae69e933e702530a547be766_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_889a3b76d8842e701e057a17fd85bfbebe0b3cfb874080561fa0d002c2c44c71(memPtr) {\n\n        mstore(add(memPtr, 0), \"Existing loan must be repaid fir\")\n\n        mstore(add(memPtr, 32), \"st\")\n\n    }\n\n    function abi_encode_t_stringliteral_889a3b76d8842e701e057a17fd85bfbebe0b3cfb874080561fa0d002c2c44c71_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_889a3b76d8842e701e057a17fd85bfbebe0b3cfb874080561fa0d002c2c44c71(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_889a3b76d8842e701e057a17fd85bfbebe0b3cfb874080561fa0d002c2c44c71__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_889a3b76d8842e701e057a17fd85bfbebe0b3cfb874080561fa0d002c2c44c71_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0b13f011926795557929f438867da0012b263fbc8a672de2f5c7ef42a2687115(memPtr) {\n\n        mstore(add(memPtr, 0), \"Borrow amount exceeds limit\")\n\n    }\n\n    function abi_encode_t_stringliteral_0b13f011926795557929f438867da0012b263fbc8a672de2f5c7ef42a2687115_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_0b13f011926795557929f438867da0012b263fbc8a672de2f5c7ef42a2687115(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0b13f011926795557929f438867da0012b263fbc8a672de2f5c7ef42a2687115__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0b13f011926795557929f438867da0012b263fbc8a672de2f5c7ef42a2687115_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_2ad103ba1dc4e3e245c2b9ad8cbdb9bd016961ea614c79fe06c4a9b921438ddf(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient BTC in contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_2ad103ba1dc4e3e245c2b9ad8cbdb9bd016961ea614c79fe06c4a9b921438ddf_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_2ad103ba1dc4e3e245c2b9ad8cbdb9bd016961ea614c79fe06c4a9b921438ddf(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2ad103ba1dc4e3e245c2b9ad8cbdb9bd016961ea614c79fe06c4a9b921438ddf__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2ad103ba1dc4e3e245c2b9ad8cbdb9bd016961ea614c79fe06c4a9b921438ddf_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"848": [
									{
										"length": 32,
										"start": 2004
									},
									{
										"length": 32,
										"start": 2702
									},
									{
										"length": 32,
										"start": 4038
									}
								],
								"851": [
									{
										"length": 32,
										"start": 1789
									},
									{
										"length": 32,
										"start": 2040
									},
									{
										"length": 32,
										"start": 3387
									},
									{
										"length": 32,
										"start": 3635
									},
									{
										"length": 32,
										"start": 4879
									},
									{
										"length": 32,
										"start": 5267
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101c45760003560e01c8063a6b6d798116100f9578063e02a4dfd11610097578063e8a7da8e11610071578063e8a7da8e1461050c578063f2fde38b1461053c578063f4925de514610558578063f69f1e4a14610576576101c4565b8063e02a4dfd1461048e578063e11932cf146104ac578063e86ef40b146104dc576101c4565b8063bd09085a116100d3578063bd09085a146103f4578063d1a4056414610424578063d9e69a0514610440578063dac3fc3f1461045e576101c4565b8063a6b6d7981461038c578063b6f7132f146103a8578063bad4a01f146103d8576101c4565b8063691d1eb31161016657806373b4086b1161014057806373b4086b146102ef5780638da5cb5b1461032257806390b4588b14610340578063a27a944d1461035c576101c4565b8063691d1eb3146102975780636e35f124146102c7578063715018a6146102e5576101c4565b80631bf6c21b116101a25780631bf6c21b146102215780632792949d1461023f5780635b72a33a1461025d5780636112fe2e1461027b576101c4565b80630307c4a1146101c95780630917e776146101e7578063190ef1e614610205575b600080fd5b6101d16105a6565b6040516101de9190611ce5565b60405180910390f35b6101ef6105b0565b6040516101fc9190611ce5565b60405180910390f35b61021f600480360381019061021a9190611d63565b6105ba565b005b6102296107d2565b6040516102369190611def565b60405180910390f35b6102476107f6565b6040516102549190611def565b60405180910390f35b61026561081a565b6040516102729190611ce5565b60405180910390f35b61029560048036038101906102909190611e36565b61081f565b005b6102b160048036038101906102ac9190611d63565b610b25565b6040516102be9190611ce5565b60405180910390f35b6102cf610b86565b6040516102dc9190611ce5565b60405180910390f35b6102ed610b8b565b005b61030960048036038101906103049190611d63565b610b9f565b6040516103199493929190611e7e565b60405180910390f35b61032a610bdc565b6040516103379190611ed2565b60405180910390f35b61035a60048036038101906103559190611e36565b610c05565b005b61037660048036038101906103719190611d63565b610dd0565b6040516103839190611ce5565b60405180910390f35b6103a660048036038101906103a19190611e36565b610de8565b005b6103c260048036038101906103bd9190611d63565b610f32565b6040516103cf9190611ce5565b60405180910390f35b6103f260048036038101906103ed9190611e36565b610f7b565b005b61040e60048036038101906104099190611d63565b6110b2565b60405161041b9190611ce5565b60405180910390f35b61043e60048036038101906104399190611e36565b6110fb565b005b61044861153f565b6040516104559190611ce5565b60405180910390f35b61047860048036038101906104739190611d63565b611544565b6040516104859190611ce5565b60405180910390f35b61049661158d565b6040516104a39190611ce5565b60405180910390f35b6104c660048036038101906104c19190611d63565b611594565b6040516104d39190611ce5565b60405180910390f35b6104f660048036038101906104f19190611d63565b611654565b6040516105039190611ce5565b60405180910390f35b61052660048036038101906105219190611d63565b6116c7565b6040516105339190611f60565b60405180910390f35b61055660048036038101906105519190611d63565b611759565b005b6105606117df565b60405161056d9190611ce5565b60405180910390f35b610590600480360381019061058b9190611d63565b6117e8565b60405161059d9190611ce5565b60405180910390f35b6000600254905090565b6000600154905090565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060030160009054906101000a900460ff1661064e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064590611fd8565b60405180910390fd5b6000620151808260020154426106649190612027565b61066e919061208a565b9050601e8111156106b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ab90612107565b60405180910390fd5b6000618e9482600585600001546106cb9190612127565b6106d59190612127565b6106df919061208a565b905060008184600001546106f39190612169565b90506107428530837f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16611800909392919063ffffffff16565b60008460030160006101000a81548160ff02191690831515021790555083600001546002546107719190612027565b6002819055503373ffffffffffffffffffffffffffffffffffffffff167fc7ce0a35f17b490de2a317e7fecb2cae86b1abffb03800b2f4928235213826988560000154846040516107c392919061219d565b60405180910390a25050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b600581565b60008111610862576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085990612212565b60405180910390fd5b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156108e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108db9061227e565b60405180910390fd5b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff16610941576000610985565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001545b9050600060646096836109989190612127565b6109a2919061208a565b90508083600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546109f09190612027565b1015610a31576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2890612310565b60405180910390fd5b82600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610a809190612027565b92505081905550610ad233847f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166118829092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167fc30fcfbcaac9e0deffa719714eaa82396ff506a0d0d0eebe170830177288715d84604051610b189190611ce5565b60405180910390a2505050565b600060646050600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b759190612127565b610b7f919061208a565b9050919050565b605081565b610b93611901565b610b9d6000611988565b565b60036020528060005260406000206000915090508060000154908060010154908060020154908060030160009054906101000a900460ff16905084565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008111610c48576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3f90612212565b60405180910390fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610cca576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cc19061237c565b60405180910390fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d199190612027565b9250508190555080600154610d2e9190612027565b600181905550610d7f33827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166118829092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f46cb947848d6e66f42fd865aff4e0b9765da557ed05874db5a3c931ccea58ef182604051610dc59190611ce5565b60405180910390a250565b60056020528060005260406000206000915090505481565b60008111610e2b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e2290612212565b60405180910390fd5b610e783330837f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16611800909392919063ffffffff16565b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610ec79190612169565b9250508190555080600154610edc9190612169565b6001819055503373ffffffffffffffffffffffffffffffffffffffff167ec876900062bf6768530bd9be84c146f5c051f4a50a5bf7fbcdd9ed4c8fb15482604051610f279190611ce5565b60405180910390a250565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008111610fbe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fb590612212565b60405180910390fd5b61100b3330837f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16611800909392919063ffffffff16565b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461105a9190612169565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167fd7243f6f8212d5188fd054141cf6ea89cfc0d91facb8c3afe2f88a1358480142826040516110a79190611ce5565b60405180910390a250565b6000600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000811161113e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161113590612212565b60405180910390fd5b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff16156111ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111c59061240e565b60405180910390fd5b600060646096836111df9190612127565b6111e9919061208a565b905080600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561126d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112649061227e565b60405180910390fd5b600060646050600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546112bd9190612127565b6112c7919061208a565b90508083111561130c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113039061247a565b60405180910390fd5b827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016113669190611ed2565b602060405180830381865afa158015611383573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113a791906124af565b10156113e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113df90612528565b60405180910390fd5b604051806080016040528084815260200183815260200142815260200160011515815250600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000155602082015181600101556040820151816002015560608201518160030160006101000a81548160ff0219169083151502179055509050506114d733847f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166118829092919063ffffffff16565b826002546114e59190612169565b6002819055503373ffffffffffffffffffffffffffffffffffffffff167e6b9bb4766cf5ab74b890df959e4fad0e54b1c3885e49c9541d36253a6e39e6848460405161153292919061219d565b60405180910390a2505050565b609681565b6000600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b62278d0081565b600080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060030160009054906101000a900460ff1615611649576000620151808260020154426116059190612027565b61160f919061208a565b90506000618e9482600585600001546116289190612127565b6116329190612127565b61163c919061208a565b905080935050505061164f565b60009150505b919050565b600080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060030160009054906101000a900460ff16156116bc5780600001549150506116c2565b60009150505b919050565b6116cf611ca2565b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060800160405290816000820154815260200160018201548152602001600282015481526020016003820160009054906101000a900460ff1615151515815250509050919050565b611761611901565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036117d35760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016117ca9190611ed2565b60405180910390fd5b6117dc81611988565b50565b60006005905090565b60046020528060005260406000206000915090505481565b61187c848573ffffffffffffffffffffffffffffffffffffffff166323b872dd86868660405160240161183593929190612548565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611a4c565b50505050565b6118fc838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85856040516024016118b592919061257f565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611a4c565b505050565b611909611ae3565b73ffffffffffffffffffffffffffffffffffffffff16611927610bdc565b73ffffffffffffffffffffffffffffffffffffffff16146119865761194a611ae3565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161197d9190611ed2565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000611a77828473ffffffffffffffffffffffffffffffffffffffff16611aeb90919063ffffffff16565b90506000815114158015611a9c575080806020019051810190611a9a91906125d4565b155b15611ade57826040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401611ad59190611ed2565b60405180910390fd5b505050565b600033905090565b6060611af983836000611b01565b905092915050565b606081471015611b4857306040517fcd786059000000000000000000000000000000000000000000000000000000008152600401611b3f9190611ed2565b60405180910390fd5b6000808573ffffffffffffffffffffffffffffffffffffffff168486604051611b719190612672565b60006040518083038185875af1925050503d8060008114611bae576040519150601f19603f3d011682016040523d82523d6000602084013e611bb3565b606091505b5091509150611bc3868383611bce565b925050509392505050565b606082611be357611bde82611c5d565b611c55565b60008251148015611c0b575060008473ffffffffffffffffffffffffffffffffffffffff163b145b15611c4d57836040517f9996b315000000000000000000000000000000000000000000000000000000008152600401611c449190611ed2565b60405180910390fd5b819050611c56565b5b9392505050565b600081511115611c705780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60405180608001604052806000815260200160008152602001600081526020016000151581525090565b6000819050919050565b611cdf81611ccc565b82525050565b6000602082019050611cfa6000830184611cd6565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611d3082611d05565b9050919050565b611d4081611d25565b8114611d4b57600080fd5b50565b600081359050611d5d81611d37565b92915050565b600060208284031215611d7957611d78611d00565b5b6000611d8784828501611d4e565b91505092915050565b6000819050919050565b6000611db5611db0611dab84611d05565b611d90565b611d05565b9050919050565b6000611dc782611d9a565b9050919050565b6000611dd982611dbc565b9050919050565b611de981611dce565b82525050565b6000602082019050611e046000830184611de0565b92915050565b611e1381611ccc565b8114611e1e57600080fd5b50565b600081359050611e3081611e0a565b92915050565b600060208284031215611e4c57611e4b611d00565b5b6000611e5a84828501611e21565b91505092915050565b60008115159050919050565b611e7881611e63565b82525050565b6000608082019050611e936000830187611cd6565b611ea06020830186611cd6565b611ead6040830185611cd6565b611eba6060830184611e6f565b95945050505050565b611ecc81611d25565b82525050565b6000602082019050611ee76000830184611ec3565b92915050565b611ef681611ccc565b82525050565b611f0581611e63565b82525050565b608082016000820151611f216000850182611eed565b506020820151611f346020850182611eed565b506040820151611f476040850182611eed565b506060820151611f5a6060850182611efc565b50505050565b6000608082019050611f756000830184611f0b565b92915050565b600082825260208201905092915050565b7f4e6f20616374697665206c6f616e000000000000000000000000000000000000600082015250565b6000611fc2600e83611f7b565b9150611fcd82611f8c565b602082019050919050565b60006020820190508181036000830152611ff181611fb5565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061203282611ccc565b915061203d83611ccc565b925082820390508181111561205557612054611ff8565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061209582611ccc565b91506120a083611ccc565b9250826120b0576120af61205b565b5b828204905092915050565b7f4c6f616e206475726174696f6e20657863656564656420333020646179730000600082015250565b60006120f1601e83611f7b565b91506120fc826120bb565b602082019050919050565b60006020820190508181036000830152612120816120e4565b9050919050565b600061213282611ccc565b915061213d83611ccc565b925082820261214b81611ccc565b9150828204841483151761216257612161611ff8565b5b5092915050565b600061217482611ccc565b915061217f83611ccc565b925082820190508082111561219757612196611ff8565b5b92915050565b60006040820190506121b26000830185611cd6565b6121bf6020830184611cd6565b9392505050565b7f416d6f756e74206d7573742062652067726561746572207468616e2030000000600082015250565b60006121fc601d83611f7b565b9150612207826121c6565b602082019050919050565b6000602082019050818103600083015261222b816121ef565b9050919050565b7f496e73756666696369656e7420636f6c6c61746572616c000000000000000000600082015250565b6000612268601783611f7b565b915061227382612232565b602082019050919050565b600060208201905081810360008301526122978161225b565b9050919050565b7f5769746864726177616c20776f756c6420756e646572636f6c6c61746572616c60008201527f697a65206c6f616e000000000000000000000000000000000000000000000000602082015250565b60006122fa602883611f7b565b91506123058261229e565b604082019050919050565b60006020820190508181036000830152612329816122ed565b9050919050565b7f496e73756666696369656e742062616c616e6365000000000000000000000000600082015250565b6000612366601483611f7b565b915061237182612330565b602082019050919050565b6000602082019050818103600083015261239581612359565b9050919050565b7f4578697374696e67206c6f616e206d757374206265207265706169642066697260008201527f7374000000000000000000000000000000000000000000000000000000000000602082015250565b60006123f8602283611f7b565b91506124038261239c565b604082019050919050565b60006020820190508181036000830152612427816123eb565b9050919050565b7f426f72726f7720616d6f756e742065786365656473206c696d69740000000000600082015250565b6000612464601b83611f7b565b915061246f8261242e565b602082019050919050565b6000602082019050818103600083015261249381612457565b9050919050565b6000815190506124a981611e0a565b92915050565b6000602082840312156124c5576124c4611d00565b5b60006124d38482850161249a565b91505092915050565b7f496e73756666696369656e742042544320696e20636f6e747261637400000000600082015250565b6000612512601c83611f7b565b915061251d826124dc565b602082019050919050565b6000602082019050818103600083015261254181612505565b9050919050565b600060608201905061255d6000830186611ec3565b61256a6020830185611ec3565b6125776040830184611cd6565b949350505050565b60006040820190506125946000830185611ec3565b6125a16020830184611cd6565b9392505050565b6125b181611e63565b81146125bc57600080fd5b50565b6000815190506125ce816125a8565b92915050565b6000602082840312156125ea576125e9611d00565b5b60006125f8848285016125bf565b91505092915050565b600081519050919050565b600081905092915050565b60005b8381101561263557808201518184015260208101905061261a565b60008484015250505050565b600061264c82612601565b612656818561260c565b9350612666818560208601612617565b80840191505092915050565b600061267e8284612641565b91508190509291505056fea26469706673582212205727f18691e4eec948595c84a9e106ca36f54798dfa6d564e0ea40331243351d64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA6B6D798 GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xE02A4DFD GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xE8A7DA8E GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE8A7DA8E EQ PUSH2 0x50C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x53C JUMPI DUP1 PUSH4 0xF4925DE5 EQ PUSH2 0x558 JUMPI DUP1 PUSH4 0xF69F1E4A EQ PUSH2 0x576 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0xE02A4DFD EQ PUSH2 0x48E JUMPI DUP1 PUSH4 0xE11932CF EQ PUSH2 0x4AC JUMPI DUP1 PUSH4 0xE86EF40B EQ PUSH2 0x4DC JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0xBD09085A GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0xBD09085A EQ PUSH2 0x3F4 JUMPI DUP1 PUSH4 0xD1A40564 EQ PUSH2 0x424 JUMPI DUP1 PUSH4 0xD9E69A05 EQ PUSH2 0x440 JUMPI DUP1 PUSH4 0xDAC3FC3F EQ PUSH2 0x45E JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0xA6B6D798 EQ PUSH2 0x38C JUMPI DUP1 PUSH4 0xB6F7132F EQ PUSH2 0x3A8 JUMPI DUP1 PUSH4 0xBAD4A01F EQ PUSH2 0x3D8 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x691D1EB3 GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x73B4086B GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x73B4086B EQ PUSH2 0x2EF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x322 JUMPI DUP1 PUSH4 0x90B4588B EQ PUSH2 0x340 JUMPI DUP1 PUSH4 0xA27A944D EQ PUSH2 0x35C JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x691D1EB3 EQ PUSH2 0x297 JUMPI DUP1 PUSH4 0x6E35F124 EQ PUSH2 0x2C7 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2E5 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x1BF6C21B GT PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x1BF6C21B EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x2792949D EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0x5B72A33A EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0x6112FE2E EQ PUSH2 0x27B JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x307C4A1 EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x917E776 EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0x190EF1E6 EQ PUSH2 0x205 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D1 PUSH2 0x5A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DE SWAP2 SWAP1 PUSH2 0x1CE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EF PUSH2 0x5B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FC SWAP2 SWAP1 PUSH2 0x1CE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21A SWAP2 SWAP1 PUSH2 0x1D63 JUMP JUMPDEST PUSH2 0x5BA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x229 PUSH2 0x7D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x1DEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x247 PUSH2 0x7F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x254 SWAP2 SWAP1 PUSH2 0x1DEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x265 PUSH2 0x81A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x272 SWAP2 SWAP1 PUSH2 0x1CE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x295 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x290 SWAP2 SWAP1 PUSH2 0x1E36 JUMP JUMPDEST PUSH2 0x81F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AC SWAP2 SWAP1 PUSH2 0x1D63 JUMP JUMPDEST PUSH2 0xB25 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BE SWAP2 SWAP1 PUSH2 0x1CE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CF PUSH2 0xB86 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DC SWAP2 SWAP1 PUSH2 0x1CE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2ED PUSH2 0xB8B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x309 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x304 SWAP2 SWAP1 PUSH2 0x1D63 JUMP JUMPDEST PUSH2 0xB9F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x319 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32A PUSH2 0xBDC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x337 SWAP2 SWAP1 PUSH2 0x1ED2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x355 SWAP2 SWAP1 PUSH2 0x1E36 JUMP JUMPDEST PUSH2 0xC05 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x376 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x371 SWAP2 SWAP1 PUSH2 0x1D63 JUMP JUMPDEST PUSH2 0xDD0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x383 SWAP2 SWAP1 PUSH2 0x1CE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A1 SWAP2 SWAP1 PUSH2 0x1E36 JUMP JUMPDEST PUSH2 0xDE8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BD SWAP2 SWAP1 PUSH2 0x1D63 JUMP JUMPDEST PUSH2 0xF32 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CF SWAP2 SWAP1 PUSH2 0x1CE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3ED SWAP2 SWAP1 PUSH2 0x1E36 JUMP JUMPDEST PUSH2 0xF7B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x40E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x409 SWAP2 SWAP1 PUSH2 0x1D63 JUMP JUMPDEST PUSH2 0x10B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x41B SWAP2 SWAP1 PUSH2 0x1CE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x43E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x439 SWAP2 SWAP1 PUSH2 0x1E36 JUMP JUMPDEST PUSH2 0x10FB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x448 PUSH2 0x153F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x455 SWAP2 SWAP1 PUSH2 0x1CE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x478 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x473 SWAP2 SWAP1 PUSH2 0x1D63 JUMP JUMPDEST PUSH2 0x1544 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x485 SWAP2 SWAP1 PUSH2 0x1CE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x496 PUSH2 0x158D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A3 SWAP2 SWAP1 PUSH2 0x1CE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4C1 SWAP2 SWAP1 PUSH2 0x1D63 JUMP JUMPDEST PUSH2 0x1594 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D3 SWAP2 SWAP1 PUSH2 0x1CE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F1 SWAP2 SWAP1 PUSH2 0x1D63 JUMP JUMPDEST PUSH2 0x1654 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x503 SWAP2 SWAP1 PUSH2 0x1CE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x526 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x521 SWAP2 SWAP1 PUSH2 0x1D63 JUMP JUMPDEST PUSH2 0x16C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x533 SWAP2 SWAP1 PUSH2 0x1F60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x556 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x551 SWAP2 SWAP1 PUSH2 0x1D63 JUMP JUMPDEST PUSH2 0x1759 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x560 PUSH2 0x17DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x56D SWAP2 SWAP1 PUSH2 0x1CE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x590 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x58B SWAP2 SWAP1 PUSH2 0x1D63 JUMP JUMPDEST PUSH2 0x17E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x59D SWAP2 SWAP1 PUSH2 0x1CE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x64E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x645 SWAP1 PUSH2 0x1FD8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x15180 DUP3 PUSH1 0x2 ADD SLOAD TIMESTAMP PUSH2 0x664 SWAP2 SWAP1 PUSH2 0x2027 JUMP JUMPDEST PUSH2 0x66E SWAP2 SWAP1 PUSH2 0x208A JUMP JUMPDEST SWAP1 POP PUSH1 0x1E DUP2 GT ISZERO PUSH2 0x6B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AB SWAP1 PUSH2 0x2107 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x8E94 DUP3 PUSH1 0x5 DUP6 PUSH1 0x0 ADD SLOAD PUSH2 0x6CB SWAP2 SWAP1 PUSH2 0x2127 JUMP JUMPDEST PUSH2 0x6D5 SWAP2 SWAP1 PUSH2 0x2127 JUMP JUMPDEST PUSH2 0x6DF SWAP2 SWAP1 PUSH2 0x208A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP5 PUSH1 0x0 ADD SLOAD PUSH2 0x6F3 SWAP2 SWAP1 PUSH2 0x2169 JUMP JUMPDEST SWAP1 POP PUSH2 0x742 DUP6 ADDRESS DUP4 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1800 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0x0 ADD SLOAD PUSH1 0x2 SLOAD PUSH2 0x771 SWAP2 SWAP1 PUSH2 0x2027 JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC7CE0A35F17B490DE2A317E7FECB2CAE86B1ABFFB03800B2F492823521382698 DUP6 PUSH1 0x0 ADD SLOAD DUP5 PUSH1 0x40 MLOAD PUSH2 0x7C3 SWAP3 SWAP2 SWAP1 PUSH2 0x219D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x5 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x862 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x859 SWAP1 PUSH2 0x2212 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x8E4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8DB SWAP1 PUSH2 0x227E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x941 JUMPI PUSH1 0x0 PUSH2 0x985 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x64 PUSH1 0x96 DUP4 PUSH2 0x998 SWAP2 SWAP1 PUSH2 0x2127 JUMP JUMPDEST PUSH2 0x9A2 SWAP2 SWAP1 PUSH2 0x208A JUMP JUMPDEST SWAP1 POP DUP1 DUP4 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x9F0 SWAP2 SWAP1 PUSH2 0x2027 JUMP JUMPDEST LT ISZERO PUSH2 0xA31 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA28 SWAP1 PUSH2 0x2310 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA80 SWAP2 SWAP1 PUSH2 0x2027 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xAD2 CALLER DUP5 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1882 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC30FCFBCAAC9E0DEFFA719714EAA82396FF506A0D0D0EEBE170830177288715D DUP5 PUSH1 0x40 MLOAD PUSH2 0xB18 SWAP2 SWAP1 PUSH2 0x1CE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH1 0x50 PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xB75 SWAP2 SWAP1 PUSH2 0x2127 JUMP JUMPDEST PUSH2 0xB7F SWAP2 SWAP1 PUSH2 0x208A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x50 DUP2 JUMP JUMPDEST PUSH2 0xB93 PUSH2 0x1901 JUMP JUMPDEST PUSH2 0xB9D PUSH1 0x0 PUSH2 0x1988 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xC48 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC3F SWAP1 PUSH2 0x2212 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0xCCA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC1 SWAP1 PUSH2 0x237C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xD19 SWAP2 SWAP1 PUSH2 0x2027 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 SLOAD PUSH2 0xD2E SWAP2 SWAP1 PUSH2 0x2027 JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH2 0xD7F CALLER DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1882 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x46CB947848D6E66F42FD865AFF4E0B9765DA557ED05874DB5A3C931CCEA58EF1 DUP3 PUSH1 0x40 MLOAD PUSH2 0xDC5 SWAP2 SWAP1 PUSH2 0x1CE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xE2B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE22 SWAP1 PUSH2 0x2212 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE78 CALLER ADDRESS DUP4 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1800 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xEC7 SWAP2 SWAP1 PUSH2 0x2169 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 SLOAD PUSH2 0xEDC SWAP2 SWAP1 PUSH2 0x2169 JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH31 0xC876900062BF6768530BD9BE84C146F5C051F4A50A5BF7FBCDD9ED4C8FB154 DUP3 PUSH1 0x40 MLOAD PUSH2 0xF27 SWAP2 SWAP1 PUSH2 0x1CE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xFBE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB5 SWAP1 PUSH2 0x2212 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x100B CALLER ADDRESS DUP4 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1800 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x105A SWAP2 SWAP1 PUSH2 0x2169 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD7243F6F8212D5188FD054141CF6EA89CFC0D91FACB8C3AFE2F88A1358480142 DUP3 PUSH1 0x40 MLOAD PUSH2 0x10A7 SWAP2 SWAP1 PUSH2 0x1CE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x113E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1135 SWAP1 PUSH2 0x2212 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x11CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11C5 SWAP1 PUSH2 0x240E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH1 0x96 DUP4 PUSH2 0x11DF SWAP2 SWAP1 PUSH2 0x2127 JUMP JUMPDEST PUSH2 0x11E9 SWAP2 SWAP1 PUSH2 0x208A JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x126D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1264 SWAP1 PUSH2 0x227E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH1 0x50 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x12BD SWAP2 SWAP1 PUSH2 0x2127 JUMP JUMPDEST PUSH2 0x12C7 SWAP2 SWAP1 PUSH2 0x208A JUMP JUMPDEST SWAP1 POP DUP1 DUP4 GT ISZERO PUSH2 0x130C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1303 SWAP1 PUSH2 0x247A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1366 SWAP2 SWAP1 PUSH2 0x1ED2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1383 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13A7 SWAP2 SWAP1 PUSH2 0x24AF JUMP JUMPDEST LT ISZERO PUSH2 0x13E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13DF SWAP1 PUSH2 0x2528 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH2 0x14D7 CALLER DUP5 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1882 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x2 SLOAD PUSH2 0x14E5 SWAP2 SWAP1 PUSH2 0x2169 JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH31 0x6B9BB4766CF5AB74B890DF959E4FAD0E54B1C3885E49C9541D36253A6E39E6 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1532 SWAP3 SWAP2 SWAP1 PUSH2 0x219D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x96 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x278D00 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1649 JUMPI PUSH1 0x0 PUSH3 0x15180 DUP3 PUSH1 0x2 ADD SLOAD TIMESTAMP PUSH2 0x1605 SWAP2 SWAP1 PUSH2 0x2027 JUMP JUMPDEST PUSH2 0x160F SWAP2 SWAP1 PUSH2 0x208A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x8E94 DUP3 PUSH1 0x5 DUP6 PUSH1 0x0 ADD SLOAD PUSH2 0x1628 SWAP2 SWAP1 PUSH2 0x2127 JUMP JUMPDEST PUSH2 0x1632 SWAP2 SWAP1 PUSH2 0x2127 JUMP JUMPDEST PUSH2 0x163C SWAP2 SWAP1 PUSH2 0x208A JUMP JUMPDEST SWAP1 POP DUP1 SWAP4 POP POP POP POP PUSH2 0x164F JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x16BC JUMPI DUP1 PUSH1 0x0 ADD SLOAD SWAP2 POP POP PUSH2 0x16C2 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16CF PUSH2 0x1CA2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1761 PUSH2 0x1901 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x17D3 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17CA SWAP2 SWAP1 PUSH2 0x1ED2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x17DC DUP2 PUSH2 0x1988 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x187C DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1835 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2548 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1A4C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x18FC DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x18B5 SWAP3 SWAP2 SWAP1 PUSH2 0x257F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1A4C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1909 PUSH2 0x1AE3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1927 PUSH2 0xBDC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1986 JUMPI PUSH2 0x194A PUSH2 0x1AE3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x197D SWAP2 SWAP1 PUSH2 0x1ED2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A77 DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1AEB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0x1A9C JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1A9A SWAP2 SWAP1 PUSH2 0x25D4 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1ADE JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AD5 SWAP2 SWAP1 PUSH2 0x1ED2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1AF9 DUP4 DUP4 PUSH1 0x0 PUSH2 0x1B01 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0x1B48 JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B3F SWAP2 SWAP1 PUSH2 0x1ED2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1B71 SWAP2 SWAP1 PUSH2 0x2672 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1BAE JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1BB3 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1BC3 DUP7 DUP4 DUP4 PUSH2 0x1BCE JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x1BE3 JUMPI PUSH2 0x1BDE DUP3 PUSH2 0x1C5D JUMP JUMPDEST PUSH2 0x1C55 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x1C0B JUMPI POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1C4D JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C44 SWAP2 SWAP1 PUSH2 0x1ED2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x1C56 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x1C70 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CDF DUP2 PUSH2 0x1CCC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CFA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1CD6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D30 DUP3 PUSH2 0x1D05 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D40 DUP2 PUSH2 0x1D25 JUMP JUMPDEST DUP2 EQ PUSH2 0x1D4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D5D DUP2 PUSH2 0x1D37 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D79 JUMPI PUSH2 0x1D78 PUSH2 0x1D00 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D87 DUP5 DUP3 DUP6 ADD PUSH2 0x1D4E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DB5 PUSH2 0x1DB0 PUSH2 0x1DAB DUP5 PUSH2 0x1D05 JUMP JUMPDEST PUSH2 0x1D90 JUMP JUMPDEST PUSH2 0x1D05 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DC7 DUP3 PUSH2 0x1D9A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DD9 DUP3 PUSH2 0x1DBC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DE9 DUP2 PUSH2 0x1DCE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E04 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1DE0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1E13 DUP2 PUSH2 0x1CCC JUMP JUMPDEST DUP2 EQ PUSH2 0x1E1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E30 DUP2 PUSH2 0x1E0A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E4C JUMPI PUSH2 0x1E4B PUSH2 0x1D00 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E5A DUP5 DUP3 DUP6 ADD PUSH2 0x1E21 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E78 DUP2 PUSH2 0x1E63 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1E93 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1CD6 JUMP JUMPDEST PUSH2 0x1EA0 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1CD6 JUMP JUMPDEST PUSH2 0x1EAD PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1CD6 JUMP JUMPDEST PUSH2 0x1EBA PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1E6F JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1ECC DUP2 PUSH2 0x1D25 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1EE7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1EC3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1EF6 DUP2 PUSH2 0x1CCC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1F05 DUP2 PUSH2 0x1E63 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x80 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x1F21 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x1EED JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x1F34 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x1EED JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x1F47 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x1EED JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x1F5A PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x1EFC JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1F75 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1F0B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F20616374697665206C6F616E000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FC2 PUSH1 0xE DUP4 PUSH2 0x1F7B JUMP JUMPDEST SWAP2 POP PUSH2 0x1FCD DUP3 PUSH2 0x1F8C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FF1 DUP2 PUSH2 0x1FB5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2032 DUP3 PUSH2 0x1CCC JUMP JUMPDEST SWAP2 POP PUSH2 0x203D DUP4 PUSH2 0x1CCC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2055 JUMPI PUSH2 0x2054 PUSH2 0x1FF8 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2095 DUP3 PUSH2 0x1CCC JUMP JUMPDEST SWAP2 POP PUSH2 0x20A0 DUP4 PUSH2 0x1CCC JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x20B0 JUMPI PUSH2 0x20AF PUSH2 0x205B JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4C6F616E206475726174696F6E20657863656564656420333020646179730000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20F1 PUSH1 0x1E DUP4 PUSH2 0x1F7B JUMP JUMPDEST SWAP2 POP PUSH2 0x20FC DUP3 PUSH2 0x20BB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2120 DUP2 PUSH2 0x20E4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2132 DUP3 PUSH2 0x1CCC JUMP JUMPDEST SWAP2 POP PUSH2 0x213D DUP4 PUSH2 0x1CCC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x214B DUP2 PUSH2 0x1CCC JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2162 JUMPI PUSH2 0x2161 PUSH2 0x1FF8 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2174 DUP3 PUSH2 0x1CCC JUMP JUMPDEST SWAP2 POP PUSH2 0x217F DUP4 PUSH2 0x1CCC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2197 JUMPI PUSH2 0x2196 PUSH2 0x1FF8 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x21B2 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1CD6 JUMP JUMPDEST PUSH2 0x21BF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1CD6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21FC PUSH1 0x1D DUP4 PUSH2 0x1F7B JUMP JUMPDEST SWAP2 POP PUSH2 0x2207 DUP3 PUSH2 0x21C6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x222B DUP2 PUSH2 0x21EF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420636F6C6C61746572616C000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2268 PUSH1 0x17 DUP4 PUSH2 0x1F7B JUMP JUMPDEST SWAP2 POP PUSH2 0x2273 DUP3 PUSH2 0x2232 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2297 DUP2 PUSH2 0x225B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5769746864726177616C20776F756C6420756E646572636F6C6C61746572616C PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x697A65206C6F616E000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22FA PUSH1 0x28 DUP4 PUSH2 0x1F7B JUMP JUMPDEST SWAP2 POP PUSH2 0x2305 DUP3 PUSH2 0x229E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2329 DUP2 PUSH2 0x22ED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2366 PUSH1 0x14 DUP4 PUSH2 0x1F7B JUMP JUMPDEST SWAP2 POP PUSH2 0x2371 DUP3 PUSH2 0x2330 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2395 DUP2 PUSH2 0x2359 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4578697374696E67206C6F616E206D7573742062652072657061696420666972 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7374000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23F8 PUSH1 0x22 DUP4 PUSH2 0x1F7B JUMP JUMPDEST SWAP2 POP PUSH2 0x2403 DUP3 PUSH2 0x239C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2427 DUP2 PUSH2 0x23EB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x426F72726F7720616D6F756E742065786365656473206C696D69740000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2464 PUSH1 0x1B DUP4 PUSH2 0x1F7B JUMP JUMPDEST SWAP2 POP PUSH2 0x246F DUP3 PUSH2 0x242E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2493 DUP2 PUSH2 0x2457 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x24A9 DUP2 PUSH2 0x1E0A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24C5 JUMPI PUSH2 0x24C4 PUSH2 0x1D00 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x24D3 DUP5 DUP3 DUP6 ADD PUSH2 0x249A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742042544320696E20636F6E747261637400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2512 PUSH1 0x1C DUP4 PUSH2 0x1F7B JUMP JUMPDEST SWAP2 POP PUSH2 0x251D DUP3 PUSH2 0x24DC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2541 DUP2 PUSH2 0x2505 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x255D PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1EC3 JUMP JUMPDEST PUSH2 0x256A PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1EC3 JUMP JUMPDEST PUSH2 0x2577 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1CD6 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2594 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1EC3 JUMP JUMPDEST PUSH2 0x25A1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1CD6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x25B1 DUP2 PUSH2 0x1E63 JUMP JUMPDEST DUP2 EQ PUSH2 0x25BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x25CE DUP2 PUSH2 0x25A8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x25EA JUMPI PUSH2 0x25E9 PUSH2 0x1D00 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x25F8 DUP5 DUP3 DUP6 ADD PUSH2 0x25BF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2635 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x261A JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x264C DUP3 PUSH2 0x2601 JUMP JUMPDEST PUSH2 0x2656 DUP2 DUP6 PUSH2 0x260C JUMP JUMPDEST SWAP4 POP PUSH2 0x2666 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2617 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x267E DUP3 DUP5 PUSH2 0x2641 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPI 0x27 CALL DUP7 SWAP2 0xE4 0xEE 0xC9 BASEFEE MSIZE TLOAD DUP5 0xA9 0xE1 MOD 0xCA CALLDATASIZE CREATE2 SELFBALANCE SWAP9 0xDF 0xA6 0xD5 PUSH5 0xE0EA403312 NUMBER CALLDATALOAD SAR PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "235:6685:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6609:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6510:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5139:651;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;311:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;344;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;544:41;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2165:732;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3940:146;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;456:45;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;978:37:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4537:377:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1076:49;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4215:316;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4092:117;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1873:286;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6384:120;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2903:1031;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;378:46;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4920:113;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;611:47;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5796:431;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6712:206;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6233:145;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5039:94:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1021:49;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6609:97;6660:7;6686:13;;6679:20;;6609:97;:::o;6510:93::-;6559:7;6585:11;;6578:18;;6510:93;:::o;5139:651::-;5191:17;5211:5;:11;5217:4;5211:11;;;;;;;;;;;;;;;5191:31;;5240:4;:11;;;;;;;;;;;;5232:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;5280:19;708:5;5321:4;:14;;;5303:15;:32;;;;:::i;:::-;5302:65;;;;:::i;:::-;5280:87;;5400:2;5385:11;:17;;5377:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;5447:16;5512:5;5497:11;584:1;5467:4;:11;;;:27;;;;:::i;:::-;:41;;;;:::i;:::-;5466:51;;;;:::i;:::-;5447:70;;5527:22;5566:8;5552:4;:11;;;:22;;;;:::i;:::-;5527:47;;5584:57;5605:4;5619;5626:14;5584:3;:20;;;;:57;;;;;;:::i;:::-;5665:5;5651:4;:11;;;:19;;;;;;;;;;;;;;;;;;5712:4;:11;;;5696:13;;:27;;;;:::i;:::-;5680:13;:43;;;;5749:10;5738:45;;;5761:4;:11;;;5774:8;5738:45;;;;;;;:::i;:::-;;;;;;;;5181:609;;;;5139:651;:::o;311:27::-;;;:::o;344:::-;;;:::o;544:41::-;584:1;544:41;:::o;2165:732::-;2245:1;2236:6;:10;2228:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;2341:6;2311:14;:26;2326:10;2311:26;;;;;;;;;;;;;;;;:36;;2290:106;;;;;;;;;;;;:::i;:::-;;;;;;;;;2406:22;2431:5;:17;2437:10;2431:17;;;;;;;;;;;;;;;:24;;;;;;;;;;;;:79;;2509:1;2431:79;;;2470:5;:17;2476:10;2470:17;;;;;;;;;;;;;;;:24;;;2431:79;2406:104;;2520:26;2587:3;421;2550:14;:33;;;;:::i;:::-;2549:41;;;;:::i;:::-;2520:70;;2660:18;2650:6;2621:14;:26;2636:10;2621:26;;;;;;;;;;;;;;;;:35;;;;:::i;:::-;:57;;2600:144;;;;;;;;;;;;:::i;:::-;;;;;;;;;2784:6;2754:14;:26;2769:10;2754:26;;;;;;;;;;;;;;;;:36;;;;;;;:::i;:::-;;;;;;;;2800;2817:10;2829:6;2800:3;:16;;;;:36;;;;;:::i;:::-;2871:10;2851:39;;;2883:6;2851:39;;;;;;:::i;:::-;;;;;;;;2218:679;;2165:732;:::o;3940:146::-;4006:7;4076:3;499:2;4033:14;:20;4048:4;4033:20;;;;;;;;;;;;;;;;:39;;;;:::i;:::-;4032:47;;;;:::i;:::-;4025:54;;3940:146;;;:::o;456:45::-;499:2;456:45;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;978:37:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;4537:377:6:-;4610:1;4601:6;:10;4593:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;4693:6;4663:14;:26;4678:10;4663:26;;;;;;;;;;;;;;;;:36;;4655:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;4764:6;4734:14;:26;4749:10;4734:26;;;;;;;;;;;;;;;;:36;;;;;;;:::i;:::-;;;;;;;;4808:6;4794:11;;:20;;;;:::i;:::-;4780:11;:34;;;;4824:36;4841:10;4853:6;4824:3;:16;;;;:36;;;;;:::i;:::-;4888:10;4875:32;;;4900:6;4875:32;;;;;;:::i;:::-;;;;;;;;4537:377;:::o;1076:49::-;;;;;;;;;;;;;;;;;:::o;4215:316::-;4287:1;4278:6;:10;4270:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;4332:55;4353:10;4373:4;4380:6;4332:3;:20;;;;:55;;;;;;:::i;:::-;4427:6;4397:14;:26;4412:10;4397:26;;;;;;;;;;;;;;;;:36;;;;;;;:::i;:::-;;;;;;;;4471:6;4457:11;;:20;;;;:::i;:::-;4443:11;:34;;;;4505:10;4492:32;;;4517:6;4492:32;;;;;;:::i;:::-;;;;;;;;4215:316;:::o;4092:117::-;4156:7;4182:14;:20;4197:4;4182:20;;;;;;;;;;;;;;;;4175:27;;4092:117;;;:::o;1873:286::-;1952:1;1943:6;:10;1935:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;1997:55;2018:10;2038:4;2045:6;1997:3;:20;;;;:55;;;;;;:::i;:::-;2092:6;2062:14;:26;2077:10;2062:26;;;;;;;;;;;;;;;;:36;;;;;;;:::i;:::-;;;;;;;;2133:10;2113:39;;;2145:6;2113:39;;;;;;:::i;:::-;;;;;;;;1873:286;:::o;6384:120::-;6449:7;6475:14;:22;6490:6;6475:22;;;;;;;;;;;;;;;;6468:29;;6384:120;;;:::o;2903:1031::-;2974:1;2965:6;:10;2957:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;3041:5;:17;3047:10;3041:17;;;;;;;;;;;;;;;:24;;;;;;;;;;;;3040:25;3019:106;;;;;;;;;;;;:::i;:::-;;;;;;;;;3136:26;3195:3;421;3166:6;:25;;;;:::i;:::-;3165:33;;;;:::i;:::-;3136:62;;3259:18;3229:14;:26;3244:10;3229:26;;;;;;;;;;;;;;;;:48;;3208:118;;;;;;;;;;;;:::i;:::-;;;;;;;;;3337:21;3423:3;499:2;3362:14;:26;3377:10;3362:26;;;;;;;;;;;;;;;;:57;;;;:::i;:::-;3361:65;;;;:::i;:::-;3337:89;;3454:13;3444:6;:23;;3436:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;3563:6;3531:3;:13;;;3553:4;3531:28;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:38;;3510:113;;;;;;;;;;;;:::i;:::-;;;;;;;;;3654;;;;;;;;3672:6;3654:113;;;;3692:18;3654:113;;;;3724:15;3654:113;;;;3753:4;3654:113;;;;;3634:5;:17;3640:10;3634:17;;;;;;;;;;;;;;;:133;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3777:36;3794:10;3806:6;3777:3;:16;;;;:36;;;;;:::i;:::-;3856:6;3840:13;;:22;;;;:::i;:::-;3824:13;:38;;;;3888:10;3878:49;;;3900:6;3908:18;3878:49;;;;;;;:::i;:::-;;;;;;;;2947:987;;2903:1031;:::o;378:46::-;421:3;378:46;:::o;4920:113::-;4980:7;5006:14;:20;5021:4;5006:20;;;;;;;;;;;;;;;;4999:27;;4920:113;;;:::o;611:47::-;651:7;611:47;:::o;5796:431::-;5860:7;5879:17;5899:5;:11;5905:4;5899:11;;;;;;;;;;;;;;;5879:31;;5924:4;:11;;;;;;;;;;;;5920:301;;;5951:19;708:5;5992:4;:14;;;5974:15;:32;;;;:::i;:::-;5973:69;;;;:::i;:::-;5951:91;;6056:16;6137:5;6106:11;584:1;6076:4;:11;;;:27;;;;:::i;:::-;:41;;;;:::i;:::-;6075:67;;;;:::i;:::-;6056:86;;6163:8;6156:15;;;;;;;5920:301;6209:1;6202:8;;;5796:431;;;;:::o;6712:206::-;6774:7;6793:17;6813:5;:11;6819:4;6813:11;;;;;;;;;;;;;;;6793:31;;6838:4;:11;;;;;;;;;;;;6834:60;;;6872:4;:11;;;6865:18;;;;;6834:60;6910:1;6903:8;;;6712:206;;;;:::o;6233:145::-;6322:11;;:::i;:::-;6356:5;:15;6362:8;6356:15;;;;;;;;;;;;;;;6349:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6233:145;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;5039:94:6:-;5087:7;584:1;5106:20;;5039:94;:::o;1021:49::-;;;;;;;;;;;;;;;;;:::o;1702:188:3:-;1802:81;1822:5;1844;:18;;;1865:4;1871:2;1875:5;1829:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1802:19;:81::i;:::-;1702:188;;;;:::o;1303:160::-;1385:71;1405:5;1427;:14;;;1444:2;1448:5;1412:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1385:19;:71::i;:::-;1303:160;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;4059:629:3:-;4478:23;4504:33;4532:4;4512:5;4504:27;;;;:33;;;;:::i;:::-;4478:59;;4572:1;4551:10;:17;:22;;:57;;;;;4589:10;4578:30;;;;;;;;;;;;:::i;:::-;4577:31;4551:57;4547:135;;;4664:5;4631:40;;;;;;;;;;;:::i;:::-;;;;;;;;4547:135;4129:559;4059:629;;:::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;2705:151:4:-;2780:12;2811:38;2833:6;2841:4;2847:1;2811:21;:38::i;:::-;2804:45;;2705:151;;;;:::o;3180:392::-;3279:12;3331:5;3307:21;:29;3303:108;;;3394:4;3359:41;;;;;;;;;;;:::i;:::-;;;;;;;;3303:108;3421:12;3435:23;3462:6;:11;;3481:5;3488:4;3462:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3420:73;;;;3510:55;3537:6;3545:7;3554:10;3510:26;:55::i;:::-;3503:62;;;;3180:392;;;;;:::o;4625:582::-;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5066:1;5045:10;:17;:22;:49;;;;;5093:1;5071:6;:18;;;:23;5045:49;5041:119;;;5138:6;5121:24;;;;;;;;;;;:::i;:::-;;;;;;;;5041:119;5180:10;5173:17;;;;4793:408;4625:582;;;;;;:::o;5743:516::-;5894:1;5874:10;:17;:21;5870:383;;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:77:7:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;769:126;806:7;846:42;839:5;835:54;824:65;;769:126;;;:::o;901:96::-;938:7;967:24;985:5;967:24;:::i;:::-;956:35;;901:96;;;:::o;1003:122::-;1076:24;1094:5;1076:24;:::i;:::-;1069:5;1066:35;1056:63;;1115:1;1112;1105:12;1056:63;1003:122;:::o;1131:139::-;1177:5;1215:6;1202:20;1193:29;;1231:33;1258:5;1231:33;:::i;:::-;1131:139;;;;:::o;1276:329::-;1335:6;1384:2;1372:9;1363:7;1359:23;1355:32;1352:119;;;1390:79;;:::i;:::-;1352:119;1510:1;1535:53;1580:7;1571:6;1560:9;1556:22;1535:53;:::i;:::-;1525:63;;1481:117;1276:329;;;;:::o;1611:60::-;1639:3;1660:5;1653:12;;1611:60;;;:::o;1677:142::-;1727:9;1760:53;1778:34;1787:24;1805:5;1787:24;:::i;:::-;1778:34;:::i;:::-;1760:53;:::i;:::-;1747:66;;1677:142;;;:::o;1825:126::-;1875:9;1908:37;1939:5;1908:37;:::i;:::-;1895:50;;1825:126;;;:::o;1957:140::-;2021:9;2054:37;2085:5;2054:37;:::i;:::-;2041:50;;1957:140;;;:::o;2103:159::-;2204:51;2249:5;2204:51;:::i;:::-;2199:3;2192:64;2103:159;;:::o;2268:250::-;2375:4;2413:2;2402:9;2398:18;2390:26;;2426:85;2508:1;2497:9;2493:17;2484:6;2426:85;:::i;:::-;2268:250;;;;:::o;2524:122::-;2597:24;2615:5;2597:24;:::i;:::-;2590:5;2587:35;2577:63;;2636:1;2633;2626:12;2577:63;2524:122;:::o;2652:139::-;2698:5;2736:6;2723:20;2714:29;;2752:33;2779:5;2752:33;:::i;:::-;2652:139;;;;:::o;2797:329::-;2856:6;2905:2;2893:9;2884:7;2880:23;2876:32;2873:119;;;2911:79;;:::i;:::-;2873:119;3031:1;3056:53;3101:7;3092:6;3081:9;3077:22;3056:53;:::i;:::-;3046:63;;3002:117;2797:329;;;;:::o;3132:90::-;3166:7;3209:5;3202:13;3195:21;3184:32;;3132:90;;;:::o;3228:109::-;3309:21;3324:5;3309:21;:::i;:::-;3304:3;3297:34;3228:109;;:::o;3343:541::-;3514:4;3552:3;3541:9;3537:19;3529:27;;3566:71;3634:1;3623:9;3619:17;3610:6;3566:71;:::i;:::-;3647:72;3715:2;3704:9;3700:18;3691:6;3647:72;:::i;:::-;3729;3797:2;3786:9;3782:18;3773:6;3729:72;:::i;:::-;3811:66;3873:2;3862:9;3858:18;3849:6;3811:66;:::i;:::-;3343:541;;;;;;;:::o;3890:118::-;3977:24;3995:5;3977:24;:::i;:::-;3972:3;3965:37;3890:118;;:::o;4014:222::-;4107:4;4145:2;4134:9;4130:18;4122:26;;4158:71;4226:1;4215:9;4211:17;4202:6;4158:71;:::i;:::-;4014:222;;;;:::o;4242:108::-;4319:24;4337:5;4319:24;:::i;:::-;4314:3;4307:37;4242:108;;:::o;4356:99::-;4427:21;4442:5;4427:21;:::i;:::-;4422:3;4415:34;4356:99;;:::o;4529:856::-;4668:4;4663:3;4659:14;4757:4;4750:5;4746:16;4740:23;4776:63;4833:4;4828:3;4824:14;4810:12;4776:63;:::i;:::-;4683:166;4937:4;4930:5;4926:16;4920:23;4956:63;5013:4;5008:3;5004:14;4990:12;4956:63;:::i;:::-;4859:170;5116:4;5109:5;5105:16;5099:23;5135:63;5192:4;5187:3;5183:14;5169:12;5135:63;:::i;:::-;5039:169;5292:4;5285:5;5281:16;5275:23;5311:57;5362:4;5357:3;5353:14;5339:12;5311:57;:::i;:::-;5218:160;4637:748;4529:856;;:::o;5391:307::-;5526:4;5564:3;5553:9;5549:19;5541:27;;5578:113;5688:1;5677:9;5673:17;5664:6;5578:113;:::i;:::-;5391:307;;;;:::o;5704:169::-;5788:11;5822:6;5817:3;5810:19;5862:4;5857:3;5853:14;5838:29;;5704:169;;;;:::o;5879:164::-;6019:16;6015:1;6007:6;6003:14;5996:40;5879:164;:::o;6049:366::-;6191:3;6212:67;6276:2;6271:3;6212:67;:::i;:::-;6205:74;;6288:93;6377:3;6288:93;:::i;:::-;6406:2;6401:3;6397:12;6390:19;;6049:366;;;:::o;6421:419::-;6587:4;6625:2;6614:9;6610:18;6602:26;;6674:9;6668:4;6664:20;6660:1;6649:9;6645:17;6638:47;6702:131;6828:4;6702:131;:::i;:::-;6694:139;;6421:419;;;:::o;6846:180::-;6894:77;6891:1;6884:88;6991:4;6988:1;6981:15;7015:4;7012:1;7005:15;7032:194;7072:4;7092:20;7110:1;7092:20;:::i;:::-;7087:25;;7126:20;7144:1;7126:20;:::i;:::-;7121:25;;7170:1;7167;7163:9;7155:17;;7194:1;7188:4;7185:11;7182:37;;;7199:18;;:::i;:::-;7182:37;7032:194;;;;:::o;7232:180::-;7280:77;7277:1;7270:88;7377:4;7374:1;7367:15;7401:4;7398:1;7391:15;7418:185;7458:1;7475:20;7493:1;7475:20;:::i;:::-;7470:25;;7509:20;7527:1;7509:20;:::i;:::-;7504:25;;7548:1;7538:35;;7553:18;;:::i;:::-;7538:35;7595:1;7592;7588:9;7583:14;;7418:185;;;;:::o;7609:180::-;7749:32;7745:1;7737:6;7733:14;7726:56;7609:180;:::o;7795:366::-;7937:3;7958:67;8022:2;8017:3;7958:67;:::i;:::-;7951:74;;8034:93;8123:3;8034:93;:::i;:::-;8152:2;8147:3;8143:12;8136:19;;7795:366;;;:::o;8167:419::-;8333:4;8371:2;8360:9;8356:18;8348:26;;8420:9;8414:4;8410:20;8406:1;8395:9;8391:17;8384:47;8448:131;8574:4;8448:131;:::i;:::-;8440:139;;8167:419;;;:::o;8592:410::-;8632:7;8655:20;8673:1;8655:20;:::i;:::-;8650:25;;8689:20;8707:1;8689:20;:::i;:::-;8684:25;;8744:1;8741;8737:9;8766:30;8784:11;8766:30;:::i;:::-;8755:41;;8945:1;8936:7;8932:15;8929:1;8926:22;8906:1;8899:9;8879:83;8856:139;;8975:18;;:::i;:::-;8856:139;8640:362;8592:410;;;;:::o;9008:191::-;9048:3;9067:20;9085:1;9067:20;:::i;:::-;9062:25;;9101:20;9119:1;9101:20;:::i;:::-;9096:25;;9144:1;9141;9137:9;9130:16;;9165:3;9162:1;9159:10;9156:36;;;9172:18;;:::i;:::-;9156:36;9008:191;;;;:::o;9205:332::-;9326:4;9364:2;9353:9;9349:18;9341:26;;9377:71;9445:1;9434:9;9430:17;9421:6;9377:71;:::i;:::-;9458:72;9526:2;9515:9;9511:18;9502:6;9458:72;:::i;:::-;9205:332;;;;;:::o;9543:179::-;9683:31;9679:1;9671:6;9667:14;9660:55;9543:179;:::o;9728:366::-;9870:3;9891:67;9955:2;9950:3;9891:67;:::i;:::-;9884:74;;9967:93;10056:3;9967:93;:::i;:::-;10085:2;10080:3;10076:12;10069:19;;9728:366;;;:::o;10100:419::-;10266:4;10304:2;10293:9;10289:18;10281:26;;10353:9;10347:4;10343:20;10339:1;10328:9;10324:17;10317:47;10381:131;10507:4;10381:131;:::i;:::-;10373:139;;10100:419;;;:::o;10525:173::-;10665:25;10661:1;10653:6;10649:14;10642:49;10525:173;:::o;10704:366::-;10846:3;10867:67;10931:2;10926:3;10867:67;:::i;:::-;10860:74;;10943:93;11032:3;10943:93;:::i;:::-;11061:2;11056:3;11052:12;11045:19;;10704:366;;;:::o;11076:419::-;11242:4;11280:2;11269:9;11265:18;11257:26;;11329:9;11323:4;11319:20;11315:1;11304:9;11300:17;11293:47;11357:131;11483:4;11357:131;:::i;:::-;11349:139;;11076:419;;;:::o;11501:227::-;11641:34;11637:1;11629:6;11625:14;11618:58;11710:10;11705:2;11697:6;11693:15;11686:35;11501:227;:::o;11734:366::-;11876:3;11897:67;11961:2;11956:3;11897:67;:::i;:::-;11890:74;;11973:93;12062:3;11973:93;:::i;:::-;12091:2;12086:3;12082:12;12075:19;;11734:366;;;:::o;12106:419::-;12272:4;12310:2;12299:9;12295:18;12287:26;;12359:9;12353:4;12349:20;12345:1;12334:9;12330:17;12323:47;12387:131;12513:4;12387:131;:::i;:::-;12379:139;;12106:419;;;:::o;12531:170::-;12671:22;12667:1;12659:6;12655:14;12648:46;12531:170;:::o;12707:366::-;12849:3;12870:67;12934:2;12929:3;12870:67;:::i;:::-;12863:74;;12946:93;13035:3;12946:93;:::i;:::-;13064:2;13059:3;13055:12;13048:19;;12707:366;;;:::o;13079:419::-;13245:4;13283:2;13272:9;13268:18;13260:26;;13332:9;13326:4;13322:20;13318:1;13307:9;13303:17;13296:47;13360:131;13486:4;13360:131;:::i;:::-;13352:139;;13079:419;;;:::o;13504:221::-;13644:34;13640:1;13632:6;13628:14;13621:58;13713:4;13708:2;13700:6;13696:15;13689:29;13504:221;:::o;13731:366::-;13873:3;13894:67;13958:2;13953:3;13894:67;:::i;:::-;13887:74;;13970:93;14059:3;13970:93;:::i;:::-;14088:2;14083:3;14079:12;14072:19;;13731:366;;;:::o;14103:419::-;14269:4;14307:2;14296:9;14292:18;14284:26;;14356:9;14350:4;14346:20;14342:1;14331:9;14327:17;14320:47;14384:131;14510:4;14384:131;:::i;:::-;14376:139;;14103:419;;;:::o;14528:177::-;14668:29;14664:1;14656:6;14652:14;14645:53;14528:177;:::o;14711:366::-;14853:3;14874:67;14938:2;14933:3;14874:67;:::i;:::-;14867:74;;14950:93;15039:3;14950:93;:::i;:::-;15068:2;15063:3;15059:12;15052:19;;14711:366;;;:::o;15083:419::-;15249:4;15287:2;15276:9;15272:18;15264:26;;15336:9;15330:4;15326:20;15322:1;15311:9;15307:17;15300:47;15364:131;15490:4;15364:131;:::i;:::-;15356:139;;15083:419;;;:::o;15508:143::-;15565:5;15596:6;15590:13;15581:22;;15612:33;15639:5;15612:33;:::i;:::-;15508:143;;;;:::o;15657:351::-;15727:6;15776:2;15764:9;15755:7;15751:23;15747:32;15744:119;;;15782:79;;:::i;:::-;15744:119;15902:1;15927:64;15983:7;15974:6;15963:9;15959:22;15927:64;:::i;:::-;15917:74;;15873:128;15657:351;;;;:::o;16014:178::-;16154:30;16150:1;16142:6;16138:14;16131:54;16014:178;:::o;16198:366::-;16340:3;16361:67;16425:2;16420:3;16361:67;:::i;:::-;16354:74;;16437:93;16526:3;16437:93;:::i;:::-;16555:2;16550:3;16546:12;16539:19;;16198:366;;;:::o;16570:419::-;16736:4;16774:2;16763:9;16759:18;16751:26;;16823:9;16817:4;16813:20;16809:1;16798:9;16794:17;16787:47;16851:131;16977:4;16851:131;:::i;:::-;16843:139;;16570:419;;;:::o;16995:442::-;17144:4;17182:2;17171:9;17167:18;17159:26;;17195:71;17263:1;17252:9;17248:17;17239:6;17195:71;:::i;:::-;17276:72;17344:2;17333:9;17329:18;17320:6;17276:72;:::i;:::-;17358;17426:2;17415:9;17411:18;17402:6;17358:72;:::i;:::-;16995:442;;;;;;:::o;17443:332::-;17564:4;17602:2;17591:9;17587:18;17579:26;;17615:71;17683:1;17672:9;17668:17;17659:6;17615:71;:::i;:::-;17696:72;17764:2;17753:9;17749:18;17740:6;17696:72;:::i;:::-;17443:332;;;;;:::o;17781:116::-;17851:21;17866:5;17851:21;:::i;:::-;17844:5;17841:32;17831:60;;17887:1;17884;17877:12;17831:60;17781:116;:::o;17903:137::-;17957:5;17988:6;17982:13;17973:22;;18004:30;18028:5;18004:30;:::i;:::-;17903:137;;;;:::o;18046:345::-;18113:6;18162:2;18150:9;18141:7;18137:23;18133:32;18130:119;;;18168:79;;:::i;:::-;18130:119;18288:1;18313:61;18366:7;18357:6;18346:9;18342:22;18313:61;:::i;:::-;18303:71;;18259:125;18046:345;;;;:::o;18397:98::-;18448:6;18482:5;18476:12;18466:22;;18397:98;;;:::o;18501:147::-;18602:11;18639:3;18624:18;;18501:147;;;;:::o;18654:248::-;18736:1;18746:113;18760:6;18757:1;18754:13;18746:113;;;18845:1;18840:3;18836:11;18830:18;18826:1;18821:3;18817:11;18810:39;18782:2;18779:1;18775:10;18770:15;;18746:113;;;18893:1;18884:6;18879:3;18875:16;18868:27;18716:186;18654:248;;;:::o;18908:386::-;19012:3;19040:38;19072:5;19040:38;:::i;:::-;19094:88;19175:6;19170:3;19094:88;:::i;:::-;19087:95;;19191:65;19249:6;19244:3;19237:4;19230:5;19226:16;19191:65;:::i;:::-;19281:6;19276:3;19272:16;19265:23;;19016:278;18908:386;;;;:::o;19300:271::-;19430:3;19452:93;19541:3;19532:6;19452:93;:::i;:::-;19445:100;;19562:3;19555:10;;19300:271;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1983800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"BORROWABLE_RATIO()": "397",
								"BTC()": "infinite",
								"COLLATERAL_RATIO()": "418",
								"INTEREST_RATE()": "419",
								"LOAN_DURATION()": "374",
								"USD()": "infinite",
								"borrowBTC(uint256)": "infinite",
								"calculateInterest(address)": "infinite",
								"depositBTC(uint256)": "infinite",
								"depositCollateral(uint256)": "infinite",
								"getBorrowableAmount(address)": "infinite",
								"getCurrentApy()": "425",
								"getLenderBalance(address)": "2886",
								"getLoanDetails(address)": "infinite",
								"getTotalBorrowed()": "2484",
								"getTotalStaked()": "2506",
								"getUserBorrowed(address)": "5122",
								"getUserCollateral(address)": "2909",
								"getUserStaked(address)": "2952",
								"lenderBalances(address)": "2925",
								"loans(address)": "infinite",
								"owner()": "2589",
								"renounceOwnership()": "infinite",
								"repayLoan(address)": "infinite",
								"transferOwnership(address)": "infinite",
								"userCollateral(address)": "2924",
								"withdrawBTC(uint256)": "infinite",
								"withdrawCollateral(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 235,
									"end": 6920,
									"name": "PUSH",
									"source": 6,
									"value": "C0"
								},
								{
									"begin": 235,
									"end": 6920,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 235,
									"end": 6920,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 750,
									"end": 751,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 720,
									"end": 751,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 720,
									"end": 751,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 816,
									"end": 817,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 817,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 784,
									"end": 817,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1624,
									"end": 1867,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 1624,
									"end": 1867,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1624,
									"end": 1867,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1624,
									"end": 1867,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1624,
									"end": 1867,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1624,
									"end": 1867,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1624,
									"end": 1867,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1624,
									"end": 1867,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1624,
									"end": 1867,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1624,
									"end": 1867,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1624,
									"end": 1867,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1624,
									"end": 1867,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1624,
									"end": 1867,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1624,
									"end": 1867,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1624,
									"end": 1867,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 1624,
									"end": 1867,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1624,
									"end": 1867,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1624,
									"end": 1867,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1624,
									"end": 1867,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1624,
									"end": 1867,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 1624,
									"end": 1867,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1624,
									"end": 1867,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1624,
									"end": 1867,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1624,
									"end": 1867,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1624,
									"end": 1867,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1624,
									"end": 1867,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1624,
									"end": 1867,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1624,
									"end": 1867,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1624,
									"end": 1867,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1624,
									"end": 1867,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1624,
									"end": 1867,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1624,
									"end": 1867,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1624,
									"end": 1867,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1624,
									"end": 1867,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1624,
									"end": 1867,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1672,
									"end": 1682,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1731,
									"end": 1732,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1715,
									"end": 1733,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1715,
									"end": 1733,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1715,
									"end": 1719,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1715,
									"end": 1733,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1715,
									"end": 1733,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1715,
									"end": 1733,
									"modifierDepth": 1,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 1715,
									"end": 1733,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1715,
									"end": 1755,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1715,
									"end": 1755,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1715,
									"end": 1755,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 1715,
									"end": 1755,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1715,
									"end": 1755,
									"modifierDepth": 1,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1753,
									"end": 1754,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1737,
									"end": 1755,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1737,
									"end": 1755,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1737,
									"end": 1741,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1737,
									"end": 1755,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1737,
									"end": 1755,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1737,
									"end": 1755,
									"modifierDepth": 1,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 1737,
									"end": 1755,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1715,
									"end": 1755,
									"modifierDepth": 1,
									"name": "tag",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 1715,
									"end": 1755,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1694,
									"end": 1804,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 1694,
									"end": 1804,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1694,
									"end": 1804,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1694,
									"end": 1804,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1694,
									"end": 1804,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1694,
									"end": 1804,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1694,
									"end": 1804,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1694,
									"end": 1804,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1694,
									"end": 1804,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1694,
									"end": 1804,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 1694,
									"end": 1804,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1694,
									"end": 1804,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 1694,
									"end": 1804,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1694,
									"end": 1804,
									"modifierDepth": 1,
									"name": "tag",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 1694,
									"end": 1804,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1694,
									"end": 1804,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1694,
									"end": 1804,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1694,
									"end": 1804,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1694,
									"end": 1804,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1694,
									"end": 1804,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1694,
									"end": 1804,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1694,
									"end": 1804,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1694,
									"end": 1804,
									"modifierDepth": 1,
									"name": "tag",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 1694,
									"end": 1804,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1827,
									"end": 1831,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1814,
									"end": 1832,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1814,
									"end": 1832,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1814,
									"end": 1832,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 1814,
									"end": 1832,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1814,
									"end": 1832,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1814,
									"end": 1832,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1814,
									"end": 1832,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1814,
									"end": 1832,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1814,
									"end": 1832,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1814,
									"end": 1832,
									"modifierDepth": 1,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1855,
									"end": 1859,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1842,
									"end": 1860,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1842,
									"end": 1860,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1842,
									"end": 1860,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "A0"
								},
								{
									"begin": 1842,
									"end": 1860,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1842,
									"end": 1860,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1842,
									"end": 1860,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1842,
									"end": 1860,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1842,
									"end": 1860,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1842,
									"end": 1860,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1842,
									"end": 1860,
									"modifierDepth": 1,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1624,
									"end": 1867,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1624,
									"end": 1867,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 235,
									"end": 6920,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 235,
									"end": 6920,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 924,
									"end": 930,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 938,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 981,
									"end": 983,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 969,
									"end": 978,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 960,
									"end": 967,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 956,
									"end": 979,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 952,
									"end": 984,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 987,
									"end": 1066,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "tag",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "tag",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1107,
									"end": 1108,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 1188,
									"end": 1195,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1179,
									"end": 1185,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1168,
									"end": 1177,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1164,
									"end": 1186,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 1132,
									"end": 1196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "tag",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1078,
									"end": 1206,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 1247,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 1327,
									"end": 1334,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1318,
									"end": 1324,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1307,
									"end": 1316,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1303,
									"end": 1325,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 1271,
									"end": 1335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "tag",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1216,
									"end": 1345,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1352,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "tag",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 1463,
									"end": 1468,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 1445,
									"end": 1469,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "tag",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1440,
									"end": 1443,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1433,
									"end": 1470,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1358,
									"end": 1476,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "tag",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1575,
									"end": 1579,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1613,
									"end": 1615,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1602,
									"end": 1611,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1598,
									"end": 1616,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1590,
									"end": 1616,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1590,
									"end": 1616,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 1694,
									"end": 1695,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1683,
									"end": 1692,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1679,
									"end": 1696,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1670,
									"end": 1676,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 1626,
									"end": 1697,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "tag",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1482,
									"end": 1704,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1710,
									"end": 1879,
									"name": "tag",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 1710,
									"end": 1879,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1794,
									"end": 1805,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1828,
									"end": 1834,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1823,
									"end": 1826,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1816,
									"end": 1835,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1868,
									"end": 1872,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1863,
									"end": 1866,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1859,
									"end": 1873,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1844,
									"end": 1873,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1844,
									"end": 1873,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1710,
									"end": 1879,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1710,
									"end": 1879,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1710,
									"end": 1879,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1710,
									"end": 1879,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1710,
									"end": 1879,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1885,
									"end": 2058,
									"name": "tag",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 1885,
									"end": 2058,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2025,
									"end": 2050,
									"name": "PUSH",
									"source": 7,
									"value": "496E76616C696420746F6B656E20616464726573736573000000000000000000"
								},
								{
									"begin": 2021,
									"end": 2022,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2013,
									"end": 2019,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2002,
									"end": 2051,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1885,
									"end": 2058,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1885,
									"end": 2058,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2064,
									"end": 2430,
									"name": "tag",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 2064,
									"end": 2430,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2206,
									"end": 2209,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2227,
									"end": 2294,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 2291,
									"end": 2293,
									"name": "PUSH",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 2286,
									"end": 2289,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2227,
									"end": 2294,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 2227,
									"end": 2294,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2227,
									"end": 2294,
									"name": "tag",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 2227,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2220,
									"end": 2294,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2220,
									"end": 2294,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2303,
									"end": 2396,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 2392,
									"end": 2395,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2303,
									"end": 2396,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 2303,
									"end": 2396,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2303,
									"end": 2396,
									"name": "tag",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 2303,
									"end": 2396,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2421,
									"end": 2423,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2416,
									"end": 2419,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2412,
									"end": 2424,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2405,
									"end": 2424,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2405,
									"end": 2424,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2064,
									"end": 2430,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2064,
									"end": 2430,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2064,
									"end": 2430,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2064,
									"end": 2430,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2436,
									"end": 2855,
									"name": "tag",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 2436,
									"end": 2855,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2602,
									"end": 2606,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2640,
									"end": 2642,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2629,
									"end": 2638,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2625,
									"end": 2643,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2617,
									"end": 2643,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2617,
									"end": 2643,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2689,
									"end": 2698,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2683,
									"end": 2687,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2679,
									"end": 2699,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 2675,
									"end": 2676,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2664,
									"end": 2673,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2660,
									"end": 2677,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2653,
									"end": 2700,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2717,
									"end": 2848,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 2843,
									"end": 2847,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2717,
									"end": 2848,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 2717,
									"end": 2848,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2717,
									"end": 2848,
									"name": "tag",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 2717,
									"end": 2848,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2709,
									"end": 2848,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2709,
									"end": 2848,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2436,
									"end": 2855,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2436,
									"end": 2855,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2436,
									"end": 2855,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2436,
									"end": 2855,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 235,
									"end": 6920,
									"name": "tag",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 235,
									"end": 6920,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 235,
									"end": 6920,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 235,
									"end": 6920,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 235,
									"end": 6920,
									"name": "PUSH",
									"source": 6,
									"value": "A0"
								},
								{
									"begin": 235,
									"end": 6920,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 235,
									"end": 6920,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 235,
									"end": 6920,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 235,
									"end": 6920,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 235,
									"end": 6920,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 235,
									"end": 6920,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 235,
									"end": 6920,
									"name": "ASSIGNIMMUTABLE",
									"source": 6,
									"value": "851"
								},
								{
									"begin": 235,
									"end": 6920,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 235,
									"end": 6920,
									"name": "ASSIGNIMMUTABLE",
									"source": 6,
									"value": "848"
								},
								{
									"begin": 235,
									"end": 6920,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 235,
									"end": 6920,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 235,
									"end": 6920,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205727f18691e4eec948595c84a9e106ca36f54798dfa6d564e0ea40331243351d64736f6c634300081a0033",
									".code": [
										{
											"begin": 235,
											"end": 6920,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "PUSH",
											"source": 6,
											"value": "A6B6D798"
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "PUSH",
											"source": 6,
											"value": "E02A4DFD"
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "PUSH",
											"source": 6,
											"value": "E8A7DA8E"
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "PUSH",
											"source": 6,
											"value": "E8A7DA8E"
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "PUSH",
											"source": 6,
											"value": "F4925DE5"
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "PUSH",
											"source": 6,
											"value": "F69F1E4A"
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "PUSH",
											"source": 6,
											"value": "E02A4DFD"
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "PUSH",
											"source": 6,
											"value": "E11932CF"
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "PUSH",
											"source": 6,
											"value": "E86EF40B"
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "PUSH",
											"source": 6,
											"value": "BD09085A"
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "PUSH",
											"source": 6,
											"value": "BD09085A"
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "PUSH",
											"source": 6,
											"value": "D1A40564"
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "PUSH",
											"source": 6,
											"value": "D9E69A05"
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "PUSH",
											"source": 6,
											"value": "DAC3FC3F"
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "PUSH",
											"source": 6,
											"value": "A6B6D798"
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "PUSH",
											"source": 6,
											"value": "B6F7132F"
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "PUSH",
											"source": 6,
											"value": "BAD4A01F"
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "PUSH",
											"source": 6,
											"value": "691D1EB3"
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "PUSH",
											"source": 6,
											"value": "73B4086B"
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "PUSH",
											"source": 6,
											"value": "73B4086B"
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "PUSH",
											"source": 6,
											"value": "90B4588B"
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "PUSH",
											"source": 6,
											"value": "A27A944D"
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "PUSH",
											"source": 6,
											"value": "691D1EB3"
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "PUSH",
											"source": 6,
											"value": "6E35F124"
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "PUSH",
											"source": 6,
											"value": "1BF6C21B"
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "PUSH",
											"source": 6,
											"value": "1BF6C21B"
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "PUSH",
											"source": 6,
											"value": "2792949D"
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "PUSH",
											"source": 6,
											"value": "5B72A33A"
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "PUSH",
											"source": 6,
											"value": "6112FE2E"
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "PUSH",
											"source": 6,
											"value": "307C4A1"
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "PUSH",
											"source": 6,
											"value": "917E776"
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "PUSH",
											"source": 6,
											"value": "190EF1E6"
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 235,
											"end": 6920,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6609,
											"end": 6706,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 6609,
											"end": 6706,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6609,
											"end": 6706,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 6609,
											"end": 6706,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 6609,
											"end": 6706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6609,
											"end": 6706,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 6609,
											"end": 6706,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6609,
											"end": 6706,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6609,
											"end": 6706,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6609,
											"end": 6706,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6609,
											"end": 6706,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6609,
											"end": 6706,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6609,
											"end": 6706,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 6609,
											"end": 6706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6609,
											"end": 6706,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6609,
											"end": 6706,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6609,
											"end": 6706,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6609,
											"end": 6706,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6609,
											"end": 6706,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6609,
											"end": 6706,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6609,
											"end": 6706,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6609,
											"end": 6706,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6609,
											"end": 6706,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 6510,
											"end": 6603,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6510,
											"end": 6603,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6510,
											"end": 6603,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 6510,
											"end": 6603,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 6510,
											"end": 6603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6510,
											"end": 6603,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 6510,
											"end": 6603,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6510,
											"end": 6603,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6510,
											"end": 6603,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6510,
											"end": 6603,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 6510,
											"end": 6603,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6510,
											"end": 6603,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6510,
											"end": 6603,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 6510,
											"end": 6603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6510,
											"end": 6603,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 6510,
											"end": 6603,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6510,
											"end": 6603,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6510,
											"end": 6603,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6510,
											"end": 6603,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6510,
											"end": 6603,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6510,
											"end": 6603,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6510,
											"end": 6603,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6510,
											"end": 6603,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 5139,
											"end": 5790,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 5139,
											"end": 5790,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5139,
											"end": 5790,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 5139,
											"end": 5790,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5139,
											"end": 5790,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5139,
											"end": 5790,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 5139,
											"end": 5790,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5139,
											"end": 5790,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5139,
											"end": 5790,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5139,
											"end": 5790,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5139,
											"end": 5790,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 5139,
											"end": 5790,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5139,
											"end": 5790,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5139,
											"end": 5790,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 5139,
											"end": 5790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5139,
											"end": 5790,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 5139,
											"end": 5790,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5139,
											"end": 5790,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 5139,
											"end": 5790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5139,
											"end": 5790,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 5139,
											"end": 5790,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5139,
											"end": 5790,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 311,
											"end": 338,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 311,
											"end": 338,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 311,
											"end": 338,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 311,
											"end": 338,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 311,
											"end": 338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 311,
											"end": 338,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 311,
											"end": 338,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 311,
											"end": 338,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 311,
											"end": 338,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 311,
											"end": 338,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 311,
											"end": 338,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 311,
											"end": 338,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 311,
											"end": 338,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 311,
											"end": 338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 311,
											"end": 338,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 311,
											"end": 338,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 311,
											"end": 338,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 311,
											"end": 338,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 311,
											"end": 338,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 311,
											"end": 338,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 311,
											"end": 338,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 311,
											"end": 338,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 311,
											"end": 338,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 344,
											"end": 371,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 344,
											"end": 371,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 344,
											"end": 371,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 344,
											"end": 371,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 344,
											"end": 371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 344,
											"end": 371,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 344,
											"end": 371,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 344,
											"end": 371,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 344,
											"end": 371,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 344,
											"end": 371,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 344,
											"end": 371,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 344,
											"end": 371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 344,
											"end": 371,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 344,
											"end": 371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 344,
											"end": 371,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 344,
											"end": 371,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 344,
											"end": 371,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 344,
											"end": 371,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 344,
											"end": 371,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 344,
											"end": 371,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 344,
											"end": 371,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 344,
											"end": 371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 344,
											"end": 371,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 544,
											"end": 585,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 544,
											"end": 585,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 544,
											"end": 585,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 544,
											"end": 585,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 544,
											"end": 585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 544,
											"end": 585,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 544,
											"end": 585,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 544,
											"end": 585,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 544,
											"end": 585,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 544,
											"end": 585,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 544,
											"end": 585,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 544,
											"end": 585,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 544,
											"end": 585,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 544,
											"end": 585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 544,
											"end": 585,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 544,
											"end": 585,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 544,
											"end": 585,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 544,
											"end": 585,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 544,
											"end": 585,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 544,
											"end": 585,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 544,
											"end": 585,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 544,
											"end": 585,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 544,
											"end": 585,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2897,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 2165,
											"end": 2897,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2897,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 2165,
											"end": 2897,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2165,
											"end": 2897,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2897,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2897,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2897,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2897,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2897,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2897,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2165,
											"end": 2897,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2897,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2897,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 2165,
											"end": 2897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2897,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2165,
											"end": 2897,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2897,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 2165,
											"end": 2897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2897,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 2165,
											"end": 2897,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2897,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 3940,
											"end": 4086,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 3940,
											"end": 4086,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3940,
											"end": 4086,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 3940,
											"end": 4086,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3940,
											"end": 4086,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3940,
											"end": 4086,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3940,
											"end": 4086,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3940,
											"end": 4086,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3940,
											"end": 4086,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3940,
											"end": 4086,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3940,
											"end": 4086,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3940,
											"end": 4086,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3940,
											"end": 4086,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3940,
											"end": 4086,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 3940,
											"end": 4086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3940,
											"end": 4086,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3940,
											"end": 4086,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3940,
											"end": 4086,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 3940,
											"end": 4086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3940,
											"end": 4086,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 3940,
											"end": 4086,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3940,
											"end": 4086,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3940,
											"end": 4086,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3940,
											"end": 4086,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 3940,
											"end": 4086,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3940,
											"end": 4086,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3940,
											"end": 4086,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 3940,
											"end": 4086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3940,
											"end": 4086,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 3940,
											"end": 4086,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3940,
											"end": 4086,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3940,
											"end": 4086,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3940,
											"end": 4086,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3940,
											"end": 4086,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3940,
											"end": 4086,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3940,
											"end": 4086,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3940,
											"end": 4086,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 456,
											"end": 501,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 456,
											"end": 501,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 456,
											"end": 501,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 456,
											"end": 501,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 456,
											"end": 501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 456,
											"end": 501,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 456,
											"end": 501,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 456,
											"end": 501,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 456,
											"end": 501,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 456,
											"end": 501,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 456,
											"end": 501,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 456,
											"end": 501,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 456,
											"end": 501,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 456,
											"end": 501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 456,
											"end": 501,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 456,
											"end": 501,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 456,
											"end": 501,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 456,
											"end": 501,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 456,
											"end": 501,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 456,
											"end": 501,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 456,
											"end": 501,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 456,
											"end": 501,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 456,
											"end": 501,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 978,
											"end": 1015,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 978,
											"end": 1015,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 978,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 978,
											"end": 1015,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 978,
											"end": 1015,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 978,
											"end": 1015,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 978,
											"end": 1015,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 978,
											"end": 1015,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 978,
											"end": 1015,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 978,
											"end": 1015,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 978,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 978,
											"end": 1015,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 978,
											"end": 1015,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 978,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 978,
											"end": 1015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 978,
											"end": 1015,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 978,
											"end": 1015,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 978,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 978,
											"end": 1015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 978,
											"end": 1015,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 978,
											"end": 1015,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 978,
											"end": 1015,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 978,
											"end": 1015,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 978,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 978,
											"end": 1015,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 978,
											"end": 1015,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 978,
											"end": 1015,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 978,
											"end": 1015,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 978,
											"end": 1015,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 978,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 978,
											"end": 1015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 978,
											"end": 1015,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 978,
											"end": 1015,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 978,
											"end": 1015,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 978,
											"end": 1015,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 978,
											"end": 1015,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 978,
											"end": 1015,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 978,
											"end": 1015,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 978,
											"end": 1015,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 978,
											"end": 1015,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4537,
											"end": 4914,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 4537,
											"end": 4914,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4537,
											"end": 4914,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 4537,
											"end": 4914,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4537,
											"end": 4914,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4537,
											"end": 4914,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4537,
											"end": 4914,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4537,
											"end": 4914,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4537,
											"end": 4914,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4537,
											"end": 4914,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4537,
											"end": 4914,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 4537,
											"end": 4914,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4537,
											"end": 4914,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4537,
											"end": 4914,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 4537,
											"end": 4914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4537,
											"end": 4914,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 4537,
											"end": 4914,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4537,
											"end": 4914,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 4537,
											"end": 4914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4537,
											"end": 4914,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 4537,
											"end": 4914,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4537,
											"end": 4914,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1076,
											"end": 1125,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 1076,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1076,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 1076,
											"end": 1125,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1076,
											"end": 1125,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1076,
											"end": 1125,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1076,
											"end": 1125,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1076,
											"end": 1125,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1076,
											"end": 1125,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1076,
											"end": 1125,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1076,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 1076,
											"end": 1125,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1076,
											"end": 1125,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1076,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 1076,
											"end": 1125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1076,
											"end": 1125,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 1076,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1076,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 1076,
											"end": 1125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1076,
											"end": 1125,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 1076,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1076,
											"end": 1125,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1076,
											"end": 1125,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1076,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 1076,
											"end": 1125,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1076,
											"end": 1125,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1076,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 1076,
											"end": 1125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1076,
											"end": 1125,
											"name": "tag",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 1076,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1076,
											"end": 1125,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1076,
											"end": 1125,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1076,
											"end": 1125,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1076,
											"end": 1125,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1076,
											"end": 1125,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1076,
											"end": 1125,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1076,
											"end": 1125,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 4215,
											"end": 4531,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 4215,
											"end": 4531,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4215,
											"end": 4531,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 4215,
											"end": 4531,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4215,
											"end": 4531,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4215,
											"end": 4531,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4215,
											"end": 4531,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4215,
											"end": 4531,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4215,
											"end": 4531,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4215,
											"end": 4531,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4215,
											"end": 4531,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 4215,
											"end": 4531,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4215,
											"end": 4531,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4215,
											"end": 4531,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 4215,
											"end": 4531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4215,
											"end": 4531,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 4215,
											"end": 4531,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4215,
											"end": 4531,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 4215,
											"end": 4531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4215,
											"end": 4531,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 4215,
											"end": 4531,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4215,
											"end": 4531,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 4092,
											"end": 4209,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 4092,
											"end": 4209,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4092,
											"end": 4209,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 4092,
											"end": 4209,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4092,
											"end": 4209,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4092,
											"end": 4209,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4092,
											"end": 4209,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4092,
											"end": 4209,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4092,
											"end": 4209,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4092,
											"end": 4209,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4092,
											"end": 4209,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 4092,
											"end": 4209,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4092,
											"end": 4209,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4092,
											"end": 4209,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 4092,
											"end": 4209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4092,
											"end": 4209,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 4092,
											"end": 4209,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4092,
											"end": 4209,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 4092,
											"end": 4209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4092,
											"end": 4209,
											"name": "tag",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 4092,
											"end": 4209,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4092,
											"end": 4209,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4092,
											"end": 4209,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4092,
											"end": 4209,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 4092,
											"end": 4209,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4092,
											"end": 4209,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4092,
											"end": 4209,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 4092,
											"end": 4209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4092,
											"end": 4209,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 4092,
											"end": 4209,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4092,
											"end": 4209,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4092,
											"end": 4209,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4092,
											"end": 4209,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4092,
											"end": 4209,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4092,
											"end": 4209,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4092,
											"end": 4209,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4092,
											"end": 4209,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1873,
											"end": 2159,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 1873,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1873,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 1873,
											"end": 2159,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1873,
											"end": 2159,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1873,
											"end": 2159,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1873,
											"end": 2159,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1873,
											"end": 2159,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1873,
											"end": 2159,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1873,
											"end": 2159,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1873,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 1873,
											"end": 2159,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1873,
											"end": 2159,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1873,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 1873,
											"end": 2159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1873,
											"end": 2159,
											"name": "tag",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 1873,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1873,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 1873,
											"end": 2159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1873,
											"end": 2159,
											"name": "tag",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 1873,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1873,
											"end": 2159,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 6384,
											"end": 6504,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6384,
											"end": 6504,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6384,
											"end": 6504,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 6384,
											"end": 6504,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6384,
											"end": 6504,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6384,
											"end": 6504,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 6384,
											"end": 6504,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6384,
											"end": 6504,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6384,
											"end": 6504,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6384,
											"end": 6504,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6384,
											"end": 6504,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 6384,
											"end": 6504,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6384,
											"end": 6504,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6384,
											"end": 6504,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 6384,
											"end": 6504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6384,
											"end": 6504,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 6384,
											"end": 6504,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6384,
											"end": 6504,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 6384,
											"end": 6504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6384,
											"end": 6504,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 6384,
											"end": 6504,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6384,
											"end": 6504,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6384,
											"end": 6504,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6384,
											"end": 6504,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 6384,
											"end": 6504,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6384,
											"end": 6504,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6384,
											"end": 6504,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 6384,
											"end": 6504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6384,
											"end": 6504,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 6384,
											"end": 6504,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6384,
											"end": 6504,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6384,
											"end": 6504,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6384,
											"end": 6504,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6384,
											"end": 6504,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6384,
											"end": 6504,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6384,
											"end": 6504,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6384,
											"end": 6504,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2903,
											"end": 3934,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 2903,
											"end": 3934,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2903,
											"end": 3934,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 2903,
											"end": 3934,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2903,
											"end": 3934,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2903,
											"end": 3934,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2903,
											"end": 3934,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2903,
											"end": 3934,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2903,
											"end": 3934,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2903,
											"end": 3934,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2903,
											"end": 3934,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 2903,
											"end": 3934,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2903,
											"end": 3934,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2903,
											"end": 3934,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 2903,
											"end": 3934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2903,
											"end": 3934,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 2903,
											"end": 3934,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2903,
											"end": 3934,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 2903,
											"end": 3934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2903,
											"end": 3934,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 2903,
											"end": 3934,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2903,
											"end": 3934,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 378,
											"end": 424,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 378,
											"end": 424,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 378,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 378,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 378,
											"end": 424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 378,
											"end": 424,
											"name": "tag",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 378,
											"end": 424,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 378,
											"end": 424,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 378,
											"end": 424,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 378,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 378,
											"end": 424,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 378,
											"end": 424,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 378,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 378,
											"end": 424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 378,
											"end": 424,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 378,
											"end": 424,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 378,
											"end": 424,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 378,
											"end": 424,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 378,
											"end": 424,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 378,
											"end": 424,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 378,
											"end": 424,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 378,
											"end": 424,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 378,
											"end": 424,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 4920,
											"end": 5033,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 4920,
											"end": 5033,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4920,
											"end": 5033,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 4920,
											"end": 5033,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4920,
											"end": 5033,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4920,
											"end": 5033,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4920,
											"end": 5033,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4920,
											"end": 5033,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4920,
											"end": 5033,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4920,
											"end": 5033,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4920,
											"end": 5033,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 4920,
											"end": 5033,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4920,
											"end": 5033,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4920,
											"end": 5033,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 4920,
											"end": 5033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4920,
											"end": 5033,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 4920,
											"end": 5033,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4920,
											"end": 5033,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 4920,
											"end": 5033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4920,
											"end": 5033,
											"name": "tag",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 4920,
											"end": 5033,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4920,
											"end": 5033,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4920,
											"end": 5033,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4920,
											"end": 5033,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 4920,
											"end": 5033,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4920,
											"end": 5033,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4920,
											"end": 5033,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 4920,
											"end": 5033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4920,
											"end": 5033,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 4920,
											"end": 5033,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4920,
											"end": 5033,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4920,
											"end": 5033,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4920,
											"end": 5033,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4920,
											"end": 5033,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4920,
											"end": 5033,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4920,
											"end": 5033,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4920,
											"end": 5033,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 611,
											"end": 658,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 611,
											"end": 658,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 611,
											"end": 658,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 611,
											"end": 658,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 611,
											"end": 658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 611,
											"end": 658,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 611,
											"end": 658,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 611,
											"end": 658,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 611,
											"end": 658,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 611,
											"end": 658,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 611,
											"end": 658,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 611,
											"end": 658,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 611,
											"end": 658,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 611,
											"end": 658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 611,
											"end": 658,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 611,
											"end": 658,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 611,
											"end": 658,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 611,
											"end": 658,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 611,
											"end": 658,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 611,
											"end": 658,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 611,
											"end": 658,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 611,
											"end": 658,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 611,
											"end": 658,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 5796,
											"end": 6227,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 5796,
											"end": 6227,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5796,
											"end": 6227,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 5796,
											"end": 6227,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5796,
											"end": 6227,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5796,
											"end": 6227,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 5796,
											"end": 6227,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5796,
											"end": 6227,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5796,
											"end": 6227,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5796,
											"end": 6227,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5796,
											"end": 6227,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 5796,
											"end": 6227,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5796,
											"end": 6227,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5796,
											"end": 6227,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 5796,
											"end": 6227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5796,
											"end": 6227,
											"name": "tag",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 5796,
											"end": 6227,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5796,
											"end": 6227,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 5796,
											"end": 6227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5796,
											"end": 6227,
											"name": "tag",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 5796,
											"end": 6227,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5796,
											"end": 6227,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5796,
											"end": 6227,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5796,
											"end": 6227,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 5796,
											"end": 6227,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5796,
											"end": 6227,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5796,
											"end": 6227,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 5796,
											"end": 6227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5796,
											"end": 6227,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 5796,
											"end": 6227,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5796,
											"end": 6227,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5796,
											"end": 6227,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5796,
											"end": 6227,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5796,
											"end": 6227,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5796,
											"end": 6227,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5796,
											"end": 6227,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5796,
											"end": 6227,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 6712,
											"end": 6918,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 6712,
											"end": 6918,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6712,
											"end": 6918,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 6712,
											"end": 6918,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6712,
											"end": 6918,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6712,
											"end": 6918,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 6712,
											"end": 6918,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6712,
											"end": 6918,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6712,
											"end": 6918,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6712,
											"end": 6918,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6712,
											"end": 6918,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 6712,
											"end": 6918,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6712,
											"end": 6918,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6712,
											"end": 6918,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 6712,
											"end": 6918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6712,
											"end": 6918,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 6712,
											"end": 6918,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6712,
											"end": 6918,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 6712,
											"end": 6918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6712,
											"end": 6918,
											"name": "tag",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 6712,
											"end": 6918,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6712,
											"end": 6918,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6712,
											"end": 6918,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6712,
											"end": 6918,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 6712,
											"end": 6918,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6712,
											"end": 6918,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6712,
											"end": 6918,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 6712,
											"end": 6918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6712,
											"end": 6918,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 6712,
											"end": 6918,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6712,
											"end": 6918,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6712,
											"end": 6918,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6712,
											"end": 6918,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6712,
											"end": 6918,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6712,
											"end": 6918,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6712,
											"end": 6918,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6712,
											"end": 6918,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 6233,
											"end": 6378,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 6233,
											"end": 6378,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6233,
											"end": 6378,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 6233,
											"end": 6378,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6233,
											"end": 6378,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6233,
											"end": 6378,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 6233,
											"end": 6378,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6233,
											"end": 6378,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6233,
											"end": 6378,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6233,
											"end": 6378,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6233,
											"end": 6378,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 6233,
											"end": 6378,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6233,
											"end": 6378,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6233,
											"end": 6378,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 6233,
											"end": 6378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6233,
											"end": 6378,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 6233,
											"end": 6378,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6233,
											"end": 6378,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 6233,
											"end": 6378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6233,
											"end": 6378,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 6233,
											"end": 6378,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6233,
											"end": 6378,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6233,
											"end": 6378,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6233,
											"end": 6378,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 6233,
											"end": 6378,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6233,
											"end": 6378,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6233,
											"end": 6378,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 6233,
											"end": 6378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6233,
											"end": 6378,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 6233,
											"end": 6378,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6233,
											"end": 6378,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6233,
											"end": 6378,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6233,
											"end": 6378,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6233,
											"end": 6378,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6233,
											"end": 6378,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6233,
											"end": 6378,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6233,
											"end": 6378,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5039,
											"end": 5133,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 5039,
											"end": 5133,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5039,
											"end": 5133,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 5039,
											"end": 5133,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 5039,
											"end": 5133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5039,
											"end": 5133,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 5039,
											"end": 5133,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5039,
											"end": 5133,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5133,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5039,
											"end": 5133,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 5039,
											"end": 5133,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5039,
											"end": 5133,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5039,
											"end": 5133,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 5039,
											"end": 5133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5039,
											"end": 5133,
											"name": "tag",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 5039,
											"end": 5133,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5039,
											"end": 5133,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5133,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5039,
											"end": 5133,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5039,
											"end": 5133,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5039,
											"end": 5133,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5039,
											"end": 5133,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5039,
											"end": 5133,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 1070,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 1021,
											"end": 1070,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 1070,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 1021,
											"end": 1070,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1021,
											"end": 1070,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 1070,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 1070,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 1070,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 1070,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 1070,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 1070,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 1021,
											"end": 1070,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 1070,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 1070,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 1021,
											"end": 1070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 1070,
											"name": "tag",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 1021,
											"end": 1070,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 1070,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 1021,
											"end": 1070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 1070,
											"name": "tag",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 1021,
											"end": 1070,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 1070,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1021,
											"end": 1070,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 1070,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 1021,
											"end": 1070,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 1070,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 1070,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 1021,
											"end": 1070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 1070,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 1021,
											"end": 1070,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 1070,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1021,
											"end": 1070,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 1070,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 1070,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 1070,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 1070,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 1070,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 6609,
											"end": 6706,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 6609,
											"end": 6706,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6660,
											"end": 6667,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6686,
											"end": 6699,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 6686,
											"end": 6699,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6679,
											"end": 6699,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6679,
											"end": 6699,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6609,
											"end": 6706,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6609,
											"end": 6706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6510,
											"end": 6603,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 6510,
											"end": 6603,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6559,
											"end": 6566,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6585,
											"end": 6596,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6585,
											"end": 6596,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6578,
											"end": 6596,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6578,
											"end": 6596,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6510,
											"end": 6603,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6510,
											"end": 6603,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5139,
											"end": 5790,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 5139,
											"end": 5790,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5191,
											"end": 5208,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5211,
											"end": 5216,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 5211,
											"end": 5222,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5217,
											"end": 5221,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5211,
											"end": 5222,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5211,
											"end": 5222,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5211,
											"end": 5222,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5211,
											"end": 5222,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5211,
											"end": 5222,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5211,
											"end": 5222,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5211,
											"end": 5222,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5211,
											"end": 5222,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5211,
											"end": 5222,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5211,
											"end": 5222,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5211,
											"end": 5222,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5211,
											"end": 5222,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5211,
											"end": 5222,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5211,
											"end": 5222,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5211,
											"end": 5222,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5191,
											"end": 5222,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5191,
											"end": 5222,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5240,
											"end": 5244,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5240,
											"end": 5251,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 5240,
											"end": 5251,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5240,
											"end": 5251,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5240,
											"end": 5251,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5240,
											"end": 5251,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5240,
											"end": 5251,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5240,
											"end": 5251,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 5240,
											"end": 5251,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 5240,
											"end": 5251,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5240,
											"end": 5251,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 5240,
											"end": 5251,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 5240,
											"end": 5251,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5232,
											"end": 5270,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 5232,
											"end": 5270,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5232,
											"end": 5270,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5232,
											"end": 5270,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5232,
											"end": 5270,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5232,
											"end": 5270,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5232,
											"end": 5270,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5232,
											"end": 5270,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5232,
											"end": 5270,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5232,
											"end": 5270,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 5232,
											"end": 5270,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5232,
											"end": 5270,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 5232,
											"end": 5270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5232,
											"end": 5270,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 5232,
											"end": 5270,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5232,
											"end": 5270,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5232,
											"end": 5270,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5232,
											"end": 5270,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5232,
											"end": 5270,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5232,
											"end": 5270,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5232,
											"end": 5270,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5232,
											"end": 5270,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5232,
											"end": 5270,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 5232,
											"end": 5270,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5280,
											"end": 5299,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 708,
											"end": 713,
											"name": "PUSH",
											"source": 6,
											"value": "15180"
										},
										{
											"begin": 5321,
											"end": 5325,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5321,
											"end": 5335,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 5321,
											"end": 5335,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5321,
											"end": 5335,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5303,
											"end": 5318,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 5303,
											"end": 5335,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 5303,
											"end": 5335,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5303,
											"end": 5335,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5303,
											"end": 5335,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 5303,
											"end": 5335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5303,
											"end": 5335,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 5303,
											"end": 5335,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5302,
											"end": 5367,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 5302,
											"end": 5367,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5302,
											"end": 5367,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5302,
											"end": 5367,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 5302,
											"end": 5367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5302,
											"end": 5367,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 5302,
											"end": 5367,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5280,
											"end": 5367,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5280,
											"end": 5367,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5400,
											"end": 5402,
											"name": "PUSH",
											"source": 6,
											"value": "1E"
										},
										{
											"begin": 5385,
											"end": 5396,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5385,
											"end": 5402,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5385,
											"end": 5402,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5377,
											"end": 5437,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 5377,
											"end": 5437,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5377,
											"end": 5437,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5377,
											"end": 5437,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5377,
											"end": 5437,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5377,
											"end": 5437,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5377,
											"end": 5437,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5377,
											"end": 5437,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5377,
											"end": 5437,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5377,
											"end": 5437,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 5377,
											"end": 5437,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5377,
											"end": 5437,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 5377,
											"end": 5437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5377,
											"end": 5437,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 5377,
											"end": 5437,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5377,
											"end": 5437,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5377,
											"end": 5437,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5377,
											"end": 5437,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5377,
											"end": 5437,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5377,
											"end": 5437,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5377,
											"end": 5437,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5377,
											"end": 5437,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5377,
											"end": 5437,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 5377,
											"end": 5437,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5447,
											"end": 5463,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5512,
											"end": 5517,
											"name": "PUSH",
											"source": 6,
											"value": "8E94"
										},
										{
											"begin": 5497,
											"end": 5508,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 584,
											"end": 585,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 5467,
											"end": 5471,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5467,
											"end": 5478,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5467,
											"end": 5478,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5467,
											"end": 5478,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5467,
											"end": 5494,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 5467,
											"end": 5494,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5467,
											"end": 5494,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5467,
											"end": 5494,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 5467,
											"end": 5494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5467,
											"end": 5494,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 5467,
											"end": 5494,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5467,
											"end": 5508,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 5467,
											"end": 5508,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5467,
											"end": 5508,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5467,
											"end": 5508,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 5467,
											"end": 5508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5467,
											"end": 5508,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 5467,
											"end": 5508,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5466,
											"end": 5517,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 5466,
											"end": 5517,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5466,
											"end": 5517,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5466,
											"end": 5517,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 5466,
											"end": 5517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5466,
											"end": 5517,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 5466,
											"end": 5517,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5447,
											"end": 5517,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5447,
											"end": 5517,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5527,
											"end": 5549,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5566,
											"end": 5574,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5552,
											"end": 5556,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5552,
											"end": 5563,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5552,
											"end": 5563,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5552,
											"end": 5563,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5552,
											"end": 5574,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 5552,
											"end": 5574,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5552,
											"end": 5574,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5552,
											"end": 5574,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 5552,
											"end": 5574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5552,
											"end": 5574,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 5552,
											"end": 5574,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5527,
											"end": 5574,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5527,
											"end": 5574,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5584,
											"end": 5641,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 5605,
											"end": 5609,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5619,
											"end": 5623,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 5626,
											"end": 5640,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5584,
											"end": 5587,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "851"
										},
										{
											"begin": 5584,
											"end": 5604,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5584,
											"end": 5604,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5584,
											"end": 5604,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 5584,
											"end": 5604,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5584,
											"end": 5641,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5584,
											"end": 5641,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5584,
											"end": 5641,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5584,
											"end": 5641,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5584,
											"end": 5641,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5584,
											"end": 5641,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5584,
											"end": 5641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5584,
											"end": 5641,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 5584,
											"end": 5641,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5665,
											"end": 5670,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5651,
											"end": 5655,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5651,
											"end": 5662,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 5651,
											"end": 5662,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5651,
											"end": 5662,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5651,
											"end": 5670,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 5651,
											"end": 5670,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 5651,
											"end": 5670,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5651,
											"end": 5670,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5651,
											"end": 5670,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5651,
											"end": 5670,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 5651,
											"end": 5670,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 5651,
											"end": 5670,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 5651,
											"end": 5670,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5651,
											"end": 5670,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5651,
											"end": 5670,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5651,
											"end": 5670,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5651,
											"end": 5670,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5651,
											"end": 5670,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 5651,
											"end": 5670,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 5651,
											"end": 5670,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5651,
											"end": 5670,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5651,
											"end": 5670,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5712,
											"end": 5716,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5712,
											"end": 5723,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5712,
											"end": 5723,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5712,
											"end": 5723,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5696,
											"end": 5709,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 5696,
											"end": 5709,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5696,
											"end": 5723,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 5696,
											"end": 5723,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5696,
											"end": 5723,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5696,
											"end": 5723,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 5696,
											"end": 5723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5696,
											"end": 5723,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 5696,
											"end": 5723,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5680,
											"end": 5693,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 5680,
											"end": 5723,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5680,
											"end": 5723,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5680,
											"end": 5723,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5680,
											"end": 5723,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5749,
											"end": 5759,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5738,
											"end": 5783,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5738,
											"end": 5783,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5738,
											"end": 5783,
											"name": "PUSH",
											"source": 6,
											"value": "C7CE0A35F17B490DE2A317E7FECB2CAE86B1ABFFB03800B2F492823521382698"
										},
										{
											"begin": 5761,
											"end": 5765,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5761,
											"end": 5772,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5761,
											"end": 5772,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5761,
											"end": 5772,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5774,
											"end": 5782,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5738,
											"end": 5783,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5738,
											"end": 5783,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5738,
											"end": 5783,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 5738,
											"end": 5783,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5738,
											"end": 5783,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5738,
											"end": 5783,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5738,
											"end": 5783,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 5738,
											"end": 5783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5738,
											"end": 5783,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 5738,
											"end": 5783,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5738,
											"end": 5783,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5738,
											"end": 5783,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5738,
											"end": 5783,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5738,
											"end": 5783,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5738,
											"end": 5783,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5738,
											"end": 5783,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5738,
											"end": 5783,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 5181,
											"end": 5790,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5181,
											"end": 5790,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5181,
											"end": 5790,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5181,
											"end": 5790,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5139,
											"end": 5790,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5139,
											"end": 5790,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 311,
											"end": 338,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 311,
											"end": 338,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 311,
											"end": 338,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "848"
										},
										{
											"begin": 311,
											"end": 338,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 311,
											"end": 338,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 344,
											"end": 371,
											"name": "tag",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 344,
											"end": 371,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 344,
											"end": 371,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "851"
										},
										{
											"begin": 344,
											"end": 371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 344,
											"end": 371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 544,
											"end": 585,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 544,
											"end": 585,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 584,
											"end": 585,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 544,
											"end": 585,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 544,
											"end": 585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2897,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 2165,
											"end": 2897,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2245,
											"end": 2246,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2236,
											"end": 2242,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2236,
											"end": 2246,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2228,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 2228,
											"end": 2280,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2228,
											"end": 2280,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2228,
											"end": 2280,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2228,
											"end": 2280,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2228,
											"end": 2280,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2228,
											"end": 2280,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2228,
											"end": 2280,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2228,
											"end": 2280,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2228,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 2228,
											"end": 2280,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2228,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 2228,
											"end": 2280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2228,
											"end": 2280,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 2228,
											"end": 2280,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2228,
											"end": 2280,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2228,
											"end": 2280,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2228,
											"end": 2280,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2228,
											"end": 2280,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2228,
											"end": 2280,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2228,
											"end": 2280,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2228,
											"end": 2280,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2228,
											"end": 2280,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 2228,
											"end": 2280,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2341,
											"end": 2347,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2311,
											"end": 2325,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2311,
											"end": 2337,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2326,
											"end": 2336,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2311,
											"end": 2337,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2311,
											"end": 2337,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2311,
											"end": 2337,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2311,
											"end": 2337,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2311,
											"end": 2337,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2311,
											"end": 2337,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2311,
											"end": 2337,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2311,
											"end": 2337,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2311,
											"end": 2337,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2311,
											"end": 2337,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2311,
											"end": 2337,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2311,
											"end": 2337,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2311,
											"end": 2337,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2311,
											"end": 2337,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2311,
											"end": 2337,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2311,
											"end": 2337,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2311,
											"end": 2347,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2311,
											"end": 2347,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2290,
											"end": 2396,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 2290,
											"end": 2396,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2290,
											"end": 2396,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2290,
											"end": 2396,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2290,
											"end": 2396,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2290,
											"end": 2396,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2290,
											"end": 2396,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2290,
											"end": 2396,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2290,
											"end": 2396,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2290,
											"end": 2396,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 2290,
											"end": 2396,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2290,
											"end": 2396,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 2290,
											"end": 2396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2290,
											"end": 2396,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 2290,
											"end": 2396,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2290,
											"end": 2396,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2290,
											"end": 2396,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2290,
											"end": 2396,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2290,
											"end": 2396,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2290,
											"end": 2396,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2290,
											"end": 2396,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2290,
											"end": 2396,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2290,
											"end": 2396,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 2290,
											"end": 2396,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2428,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2431,
											"end": 2436,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2431,
											"end": 2448,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2437,
											"end": 2447,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2431,
											"end": 2448,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2431,
											"end": 2448,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2431,
											"end": 2448,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2431,
											"end": 2448,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2431,
											"end": 2448,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2431,
											"end": 2448,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2431,
											"end": 2448,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2431,
											"end": 2448,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2431,
											"end": 2448,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2431,
											"end": 2448,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2431,
											"end": 2448,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2431,
											"end": 2448,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2431,
											"end": 2448,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2431,
											"end": 2448,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2431,
											"end": 2448,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2431,
											"end": 2455,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2431,
											"end": 2455,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2431,
											"end": 2455,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2431,
											"end": 2455,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2431,
											"end": 2455,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2431,
											"end": 2455,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2431,
											"end": 2455,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2431,
											"end": 2455,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2431,
											"end": 2455,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2431,
											"end": 2455,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2431,
											"end": 2455,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2431,
											"end": 2455,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2431,
											"end": 2510,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 2431,
											"end": 2510,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2509,
											"end": 2510,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2431,
											"end": 2510,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 2431,
											"end": 2510,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2431,
											"end": 2510,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 2431,
											"end": 2510,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2470,
											"end": 2475,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2470,
											"end": 2487,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2476,
											"end": 2486,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2470,
											"end": 2487,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2470,
											"end": 2487,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2470,
											"end": 2487,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2470,
											"end": 2487,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2470,
											"end": 2487,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2470,
											"end": 2487,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2470,
											"end": 2487,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2470,
											"end": 2487,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2470,
											"end": 2487,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2470,
											"end": 2487,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2470,
											"end": 2487,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2470,
											"end": 2487,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2470,
											"end": 2487,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2470,
											"end": 2487,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2470,
											"end": 2487,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2470,
											"end": 2494,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2470,
											"end": 2494,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2470,
											"end": 2494,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2431,
											"end": 2510,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 2431,
											"end": 2510,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2510,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2510,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2520,
											"end": 2546,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2587,
											"end": 2590,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 421,
											"end": 424,
											"name": "PUSH",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 2550,
											"end": 2564,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2550,
											"end": 2583,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 2550,
											"end": 2583,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2550,
											"end": 2583,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2550,
											"end": 2583,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 2550,
											"end": 2583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2550,
											"end": 2583,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 2550,
											"end": 2583,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2549,
											"end": 2590,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 2549,
											"end": 2590,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2549,
											"end": 2590,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2549,
											"end": 2590,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 2549,
											"end": 2590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2549,
											"end": 2590,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 2549,
											"end": 2590,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2520,
											"end": 2590,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2520,
											"end": 2590,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2660,
											"end": 2678,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 2656,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2621,
											"end": 2635,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2621,
											"end": 2647,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2636,
											"end": 2646,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2621,
											"end": 2647,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2621,
											"end": 2647,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2621,
											"end": 2647,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2621,
											"end": 2647,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2621,
											"end": 2647,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2621,
											"end": 2647,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2621,
											"end": 2647,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2621,
											"end": 2647,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2621,
											"end": 2647,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2621,
											"end": 2647,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2621,
											"end": 2647,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2621,
											"end": 2647,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2621,
											"end": 2647,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2621,
											"end": 2647,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2621,
											"end": 2647,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2621,
											"end": 2647,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2621,
											"end": 2656,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 2621,
											"end": 2656,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2621,
											"end": 2656,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2621,
											"end": 2656,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 2621,
											"end": 2656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2621,
											"end": 2656,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 2621,
											"end": 2656,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2621,
											"end": 2678,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2621,
											"end": 2678,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2600,
											"end": 2744,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 2600,
											"end": 2744,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2600,
											"end": 2744,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2600,
											"end": 2744,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2600,
											"end": 2744,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2600,
											"end": 2744,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2600,
											"end": 2744,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2600,
											"end": 2744,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2600,
											"end": 2744,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2600,
											"end": 2744,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 2600,
											"end": 2744,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2600,
											"end": 2744,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 2600,
											"end": 2744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2600,
											"end": 2744,
											"name": "tag",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 2600,
											"end": 2744,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2600,
											"end": 2744,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2600,
											"end": 2744,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2600,
											"end": 2744,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2600,
											"end": 2744,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2600,
											"end": 2744,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2600,
											"end": 2744,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2600,
											"end": 2744,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2600,
											"end": 2744,
											"name": "tag",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 2600,
											"end": 2744,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2784,
											"end": 2790,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2754,
											"end": 2768,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2754,
											"end": 2780,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2769,
											"end": 2779,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2754,
											"end": 2780,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2754,
											"end": 2780,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2754,
											"end": 2780,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2754,
											"end": 2780,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2754,
											"end": 2780,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2754,
											"end": 2780,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2754,
											"end": 2780,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2754,
											"end": 2780,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2754,
											"end": 2780,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2754,
											"end": 2780,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2754,
											"end": 2780,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2754,
											"end": 2780,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2754,
											"end": 2780,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2754,
											"end": 2780,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2754,
											"end": 2780,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2754,
											"end": 2780,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2754,
											"end": 2790,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2754,
											"end": 2790,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2754,
											"end": 2790,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2754,
											"end": 2790,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 2754,
											"end": 2790,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2754,
											"end": 2790,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2754,
											"end": 2790,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 2754,
											"end": 2790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2754,
											"end": 2790,
											"name": "tag",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 2754,
											"end": 2790,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2754,
											"end": 2790,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2754,
											"end": 2790,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2754,
											"end": 2790,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2754,
											"end": 2790,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2754,
											"end": 2790,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2754,
											"end": 2790,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2754,
											"end": 2790,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2800,
											"end": 2836,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 2817,
											"end": 2827,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2829,
											"end": 2835,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2800,
											"end": 2803,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "848"
										},
										{
											"begin": 2800,
											"end": 2816,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2800,
											"end": 2816,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2800,
											"end": 2816,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 2800,
											"end": 2816,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2800,
											"end": 2836,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2800,
											"end": 2836,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2800,
											"end": 2836,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2800,
											"end": 2836,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2800,
											"end": 2836,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2800,
											"end": 2836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2800,
											"end": 2836,
											"name": "tag",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 2800,
											"end": 2836,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2871,
											"end": 2881,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2851,
											"end": 2890,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2851,
											"end": 2890,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2851,
											"end": 2890,
											"name": "PUSH",
											"source": 6,
											"value": "C30FCFBCAAC9E0DEFFA719714EAA82396FF506A0D0D0EEBE170830177288715D"
										},
										{
											"begin": 2883,
											"end": 2889,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2851,
											"end": 2890,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2851,
											"end": 2890,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2851,
											"end": 2890,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 2851,
											"end": 2890,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2851,
											"end": 2890,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2851,
											"end": 2890,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 2851,
											"end": 2890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2851,
											"end": 2890,
											"name": "tag",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 2851,
											"end": 2890,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2851,
											"end": 2890,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2851,
											"end": 2890,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2851,
											"end": 2890,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2851,
											"end": 2890,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2851,
											"end": 2890,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2851,
											"end": 2890,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2851,
											"end": 2890,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 2218,
											"end": 2897,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2218,
											"end": 2897,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2897,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2897,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3940,
											"end": 4086,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 3940,
											"end": 4086,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4006,
											"end": 4013,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4076,
											"end": 4079,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 499,
											"end": 501,
											"name": "PUSH",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 4033,
											"end": 4047,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4033,
											"end": 4053,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4048,
											"end": 4052,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4033,
											"end": 4053,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4033,
											"end": 4053,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4033,
											"end": 4053,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4033,
											"end": 4053,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4033,
											"end": 4053,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4033,
											"end": 4053,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4033,
											"end": 4053,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4033,
											"end": 4053,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4033,
											"end": 4053,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4033,
											"end": 4053,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4033,
											"end": 4053,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4033,
											"end": 4053,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4033,
											"end": 4053,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4033,
											"end": 4053,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4033,
											"end": 4053,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4033,
											"end": 4053,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4033,
											"end": 4072,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 4033,
											"end": 4072,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4033,
											"end": 4072,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4033,
											"end": 4072,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 4033,
											"end": 4072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4033,
											"end": 4072,
											"name": "tag",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 4033,
											"end": 4072,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4032,
											"end": 4079,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 4032,
											"end": 4079,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4032,
											"end": 4079,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4032,
											"end": 4079,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 4032,
											"end": 4079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4032,
											"end": 4079,
											"name": "tag",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 4032,
											"end": 4079,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4079,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4079,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3940,
											"end": 4086,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3940,
											"end": 4086,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3940,
											"end": 4086,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3940,
											"end": 4086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 456,
											"end": 501,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 456,
											"end": 501,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 499,
											"end": 501,
											"name": "PUSH",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 456,
											"end": 501,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 456,
											"end": 501,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 978,
											"end": 1015,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 978,
											"end": 1015,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 978,
											"end": 1015,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 978,
											"end": 1015,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 978,
											"end": 1015,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 978,
											"end": 1015,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 978,
											"end": 1015,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 978,
											"end": 1015,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 978,
											"end": 1015,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 978,
											"end": 1015,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 978,
											"end": 1015,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 978,
											"end": 1015,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 978,
											"end": 1015,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 978,
											"end": 1015,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 978,
											"end": 1015,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 978,
											"end": 1015,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 978,
											"end": 1015,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 978,
											"end": 1015,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 978,
											"end": 1015,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 978,
											"end": 1015,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 978,
											"end": 1015,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 978,
											"end": 1015,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 978,
											"end": 1015,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 978,
											"end": 1015,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 978,
											"end": 1015,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 978,
											"end": 1015,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 978,
											"end": 1015,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 978,
											"end": 1015,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 978,
											"end": 1015,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 978,
											"end": 1015,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 978,
											"end": 1015,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 978,
											"end": 1015,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 978,
											"end": 1015,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 978,
											"end": 1015,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 978,
											"end": 1015,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 978,
											"end": 1015,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 978,
											"end": 1015,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 978,
											"end": 1015,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 978,
											"end": 1015,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 978,
											"end": 1015,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 978,
											"end": 1015,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 978,
											"end": 1015,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 978,
											"end": 1015,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 978,
											"end": 1015,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 978,
											"end": 1015,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 978,
											"end": 1015,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 978,
											"end": 1015,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 978,
											"end": 1015,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4537,
											"end": 4914,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 4537,
											"end": 4914,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4610,
											"end": 4611,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4601,
											"end": 4607,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4601,
											"end": 4611,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4593,
											"end": 4645,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 4593,
											"end": 4645,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4593,
											"end": 4645,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4593,
											"end": 4645,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4593,
											"end": 4645,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4593,
											"end": 4645,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4593,
											"end": 4645,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4593,
											"end": 4645,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4593,
											"end": 4645,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4593,
											"end": 4645,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 4593,
											"end": 4645,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4593,
											"end": 4645,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 4593,
											"end": 4645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4593,
											"end": 4645,
											"name": "tag",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 4593,
											"end": 4645,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4593,
											"end": 4645,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4593,
											"end": 4645,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4593,
											"end": 4645,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4593,
											"end": 4645,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4593,
											"end": 4645,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4593,
											"end": 4645,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4593,
											"end": 4645,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4593,
											"end": 4645,
											"name": "tag",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 4593,
											"end": 4645,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4693,
											"end": 4699,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4663,
											"end": 4677,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 4663,
											"end": 4689,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4678,
											"end": 4688,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4663,
											"end": 4689,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4663,
											"end": 4689,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4663,
											"end": 4689,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4663,
											"end": 4689,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4663,
											"end": 4689,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4663,
											"end": 4689,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4663,
											"end": 4689,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4663,
											"end": 4689,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4663,
											"end": 4689,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4663,
											"end": 4689,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4663,
											"end": 4689,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4663,
											"end": 4689,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4663,
											"end": 4689,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4663,
											"end": 4689,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4663,
											"end": 4689,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4663,
											"end": 4689,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4663,
											"end": 4699,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4663,
											"end": 4699,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4655,
											"end": 4724,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 4655,
											"end": 4724,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4655,
											"end": 4724,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4655,
											"end": 4724,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4655,
											"end": 4724,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4655,
											"end": 4724,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4655,
											"end": 4724,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4655,
											"end": 4724,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4655,
											"end": 4724,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4655,
											"end": 4724,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 4655,
											"end": 4724,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4655,
											"end": 4724,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 4655,
											"end": 4724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4655,
											"end": 4724,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 4655,
											"end": 4724,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4655,
											"end": 4724,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4655,
											"end": 4724,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4655,
											"end": 4724,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4655,
											"end": 4724,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4655,
											"end": 4724,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4655,
											"end": 4724,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4655,
											"end": 4724,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4655,
											"end": 4724,
											"name": "tag",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 4655,
											"end": 4724,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4764,
											"end": 4770,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4734,
											"end": 4748,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 4734,
											"end": 4760,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4749,
											"end": 4759,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4734,
											"end": 4760,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4734,
											"end": 4760,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4734,
											"end": 4760,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4734,
											"end": 4760,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4734,
											"end": 4760,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4734,
											"end": 4760,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4734,
											"end": 4760,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4734,
											"end": 4760,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4734,
											"end": 4760,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4734,
											"end": 4760,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4734,
											"end": 4760,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4734,
											"end": 4760,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4734,
											"end": 4760,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4734,
											"end": 4760,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4734,
											"end": 4760,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4734,
											"end": 4760,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4734,
											"end": 4770,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4734,
											"end": 4770,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4734,
											"end": 4770,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4734,
											"end": 4770,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 4734,
											"end": 4770,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4734,
											"end": 4770,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4734,
											"end": 4770,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 4734,
											"end": 4770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4734,
											"end": 4770,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 4734,
											"end": 4770,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4734,
											"end": 4770,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4734,
											"end": 4770,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4734,
											"end": 4770,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4734,
											"end": 4770,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4734,
											"end": 4770,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4734,
											"end": 4770,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4734,
											"end": 4770,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4808,
											"end": 4814,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4794,
											"end": 4805,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4794,
											"end": 4805,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4794,
											"end": 4814,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 4794,
											"end": 4814,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4794,
											"end": 4814,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4794,
											"end": 4814,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 4794,
											"end": 4814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4794,
											"end": 4814,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 4794,
											"end": 4814,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4780,
											"end": 4791,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4780,
											"end": 4814,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4780,
											"end": 4814,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4780,
											"end": 4814,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4780,
											"end": 4814,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4824,
											"end": 4860,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 4841,
											"end": 4851,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4853,
											"end": 4859,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4824,
											"end": 4827,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "851"
										},
										{
											"begin": 4824,
											"end": 4840,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4824,
											"end": 4840,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4824,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 4824,
											"end": 4840,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4824,
											"end": 4860,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4824,
											"end": 4860,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4824,
											"end": 4860,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4824,
											"end": 4860,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4824,
											"end": 4860,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4824,
											"end": 4860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4824,
											"end": 4860,
											"name": "tag",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 4824,
											"end": 4860,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4888,
											"end": 4898,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4875,
											"end": 4907,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4875,
											"end": 4907,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4875,
											"end": 4907,
											"name": "PUSH",
											"source": 6,
											"value": "46CB947848D6E66F42FD865AFF4E0B9765DA557ED05874DB5A3C931CCEA58EF1"
										},
										{
											"begin": 4900,
											"end": 4906,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4875,
											"end": 4907,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4875,
											"end": 4907,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4875,
											"end": 4907,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 4875,
											"end": 4907,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4875,
											"end": 4907,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4875,
											"end": 4907,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 4875,
											"end": 4907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4875,
											"end": 4907,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 4875,
											"end": 4907,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4875,
											"end": 4907,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4875,
											"end": 4907,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4875,
											"end": 4907,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4875,
											"end": 4907,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4875,
											"end": 4907,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4875,
											"end": 4907,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4875,
											"end": 4907,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 4537,
											"end": 4914,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4537,
											"end": 4914,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1076,
											"end": 1125,
											"name": "tag",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 1076,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1076,
											"end": 1125,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1076,
											"end": 1125,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1076,
											"end": 1125,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1076,
											"end": 1125,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1076,
											"end": 1125,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1076,
											"end": 1125,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1076,
											"end": 1125,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1076,
											"end": 1125,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1076,
											"end": 1125,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1076,
											"end": 1125,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1076,
											"end": 1125,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1076,
											"end": 1125,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1076,
											"end": 1125,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1076,
											"end": 1125,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1076,
											"end": 1125,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1076,
											"end": 1125,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1076,
											"end": 1125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4215,
											"end": 4531,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 4215,
											"end": 4531,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4287,
											"end": 4288,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4278,
											"end": 4284,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4278,
											"end": 4288,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4270,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 4270,
											"end": 4322,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4270,
											"end": 4322,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4270,
											"end": 4322,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4270,
											"end": 4322,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4270,
											"end": 4322,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4270,
											"end": 4322,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4270,
											"end": 4322,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4270,
											"end": 4322,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4270,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 4270,
											"end": 4322,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4270,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 4270,
											"end": 4322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4270,
											"end": 4322,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 4270,
											"end": 4322,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4270,
											"end": 4322,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4270,
											"end": 4322,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4270,
											"end": 4322,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4270,
											"end": 4322,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4270,
											"end": 4322,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4270,
											"end": 4322,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4270,
											"end": 4322,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4270,
											"end": 4322,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 4270,
											"end": 4322,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4332,
											"end": 4387,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 4353,
											"end": 4363,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4373,
											"end": 4377,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 4380,
											"end": 4386,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4332,
											"end": 4335,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "851"
										},
										{
											"begin": 4332,
											"end": 4352,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4332,
											"end": 4352,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4332,
											"end": 4352,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 4332,
											"end": 4352,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4332,
											"end": 4387,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 4332,
											"end": 4387,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4332,
											"end": 4387,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4332,
											"end": 4387,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4332,
											"end": 4387,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4332,
											"end": 4387,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4332,
											"end": 4387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4332,
											"end": 4387,
											"name": "tag",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 4332,
											"end": 4387,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4427,
											"end": 4433,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4397,
											"end": 4411,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 4397,
											"end": 4423,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4412,
											"end": 4422,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4397,
											"end": 4423,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4397,
											"end": 4423,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4397,
											"end": 4423,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4397,
											"end": 4423,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4397,
											"end": 4423,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4397,
											"end": 4423,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4397,
											"end": 4423,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4397,
											"end": 4423,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4397,
											"end": 4423,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4397,
											"end": 4423,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4397,
											"end": 4423,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4397,
											"end": 4423,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4397,
											"end": 4423,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4397,
											"end": 4423,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4397,
											"end": 4423,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4397,
											"end": 4423,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4397,
											"end": 4433,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4397,
											"end": 4433,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4397,
											"end": 4433,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4397,
											"end": 4433,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 4397,
											"end": 4433,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4397,
											"end": 4433,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4397,
											"end": 4433,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 4397,
											"end": 4433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4397,
											"end": 4433,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 4397,
											"end": 4433,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4397,
											"end": 4433,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4397,
											"end": 4433,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4397,
											"end": 4433,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4397,
											"end": 4433,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4397,
											"end": 4433,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4397,
											"end": 4433,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4397,
											"end": 4433,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4471,
											"end": 4477,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4457,
											"end": 4468,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4457,
											"end": 4468,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4457,
											"end": 4477,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 4457,
											"end": 4477,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4457,
											"end": 4477,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4457,
											"end": 4477,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 4457,
											"end": 4477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4457,
											"end": 4477,
											"name": "tag",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 4457,
											"end": 4477,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4443,
											"end": 4454,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4443,
											"end": 4477,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4443,
											"end": 4477,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4443,
											"end": 4477,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4443,
											"end": 4477,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4505,
											"end": 4515,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4524,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4492,
											"end": 4524,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4524,
											"name": "PUSH",
											"source": 6,
											"value": "C876900062BF6768530BD9BE84C146F5C051F4A50A5BF7FBCDD9ED4C8FB154"
										},
										{
											"begin": 4517,
											"end": 4523,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4524,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4492,
											"end": 4524,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4524,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 4492,
											"end": 4524,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4524,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4524,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 4492,
											"end": 4524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4524,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 4492,
											"end": 4524,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4524,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4492,
											"end": 4524,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4524,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4524,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4524,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4524,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4524,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 4215,
											"end": 4531,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4215,
											"end": 4531,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4092,
											"end": 4209,
											"name": "tag",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 4092,
											"end": 4209,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4156,
											"end": 4163,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4182,
											"end": 4196,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4182,
											"end": 4202,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4197,
											"end": 4201,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4182,
											"end": 4202,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4182,
											"end": 4202,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4182,
											"end": 4202,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4182,
											"end": 4202,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4182,
											"end": 4202,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4182,
											"end": 4202,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4182,
											"end": 4202,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4182,
											"end": 4202,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4182,
											"end": 4202,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4182,
											"end": 4202,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4182,
											"end": 4202,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4182,
											"end": 4202,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4182,
											"end": 4202,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4182,
											"end": 4202,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4182,
											"end": 4202,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4182,
											"end": 4202,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4175,
											"end": 4202,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4175,
											"end": 4202,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4092,
											"end": 4209,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4092,
											"end": 4209,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4092,
											"end": 4209,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4092,
											"end": 4209,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1873,
											"end": 2159,
											"name": "tag",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 1873,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1952,
											"end": 1953,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1943,
											"end": 1949,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1943,
											"end": 1953,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1935,
											"end": 1987,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 1935,
											"end": 1987,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1935,
											"end": 1987,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1935,
											"end": 1987,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1935,
											"end": 1987,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1935,
											"end": 1987,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1935,
											"end": 1987,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1935,
											"end": 1987,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1935,
											"end": 1987,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1935,
											"end": 1987,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 1935,
											"end": 1987,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1935,
											"end": 1987,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 1935,
											"end": 1987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1935,
											"end": 1987,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 1935,
											"end": 1987,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1935,
											"end": 1987,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1935,
											"end": 1987,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1935,
											"end": 1987,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1935,
											"end": 1987,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1935,
											"end": 1987,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1935,
											"end": 1987,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1935,
											"end": 1987,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1935,
											"end": 1987,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 1935,
											"end": 1987,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1997,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 2018,
											"end": 2028,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2042,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 2045,
											"end": 2051,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1997,
											"end": 2000,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "848"
										},
										{
											"begin": 1997,
											"end": 2017,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1997,
											"end": 2017,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1997,
											"end": 2017,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 1997,
											"end": 2017,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1997,
											"end": 2052,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1997,
											"end": 2052,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1997,
											"end": 2052,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1997,
											"end": 2052,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1997,
											"end": 2052,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1997,
											"end": 2052,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1997,
											"end": 2052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1997,
											"end": 2052,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 1997,
											"end": 2052,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2092,
											"end": 2098,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2062,
											"end": 2076,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2062,
											"end": 2088,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2077,
											"end": 2087,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2062,
											"end": 2088,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2062,
											"end": 2088,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2062,
											"end": 2088,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2062,
											"end": 2088,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2062,
											"end": 2088,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2062,
											"end": 2088,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2062,
											"end": 2088,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2062,
											"end": 2088,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2062,
											"end": 2088,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2062,
											"end": 2088,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2062,
											"end": 2088,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2062,
											"end": 2088,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2062,
											"end": 2088,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2062,
											"end": 2088,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2062,
											"end": 2088,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2062,
											"end": 2088,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2062,
											"end": 2098,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2062,
											"end": 2098,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2062,
											"end": 2098,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2062,
											"end": 2098,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 2062,
											"end": 2098,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2062,
											"end": 2098,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2062,
											"end": 2098,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 2062,
											"end": 2098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2062,
											"end": 2098,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 2062,
											"end": 2098,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2062,
											"end": 2098,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2062,
											"end": 2098,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2062,
											"end": 2098,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2062,
											"end": 2098,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2062,
											"end": 2098,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2062,
											"end": 2098,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2062,
											"end": 2098,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2133,
											"end": 2143,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2113,
											"end": 2152,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2113,
											"end": 2152,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2113,
											"end": 2152,
											"name": "PUSH",
											"source": 6,
											"value": "D7243F6F8212D5188FD054141CF6EA89CFC0D91FACB8C3AFE2F88A1358480142"
										},
										{
											"begin": 2145,
											"end": 2151,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2113,
											"end": 2152,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2113,
											"end": 2152,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2113,
											"end": 2152,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 2113,
											"end": 2152,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2113,
											"end": 2152,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2113,
											"end": 2152,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 2113,
											"end": 2152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2113,
											"end": 2152,
											"name": "tag",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 2113,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2113,
											"end": 2152,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2113,
											"end": 2152,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2113,
											"end": 2152,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2113,
											"end": 2152,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2113,
											"end": 2152,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2113,
											"end": 2152,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2113,
											"end": 2152,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 1873,
											"end": 2159,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1873,
											"end": 2159,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6384,
											"end": 6504,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 6384,
											"end": 6504,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6449,
											"end": 6456,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6475,
											"end": 6489,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 6475,
											"end": 6497,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6490,
											"end": 6496,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6475,
											"end": 6497,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6475,
											"end": 6497,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6475,
											"end": 6497,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6475,
											"end": 6497,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6475,
											"end": 6497,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6475,
											"end": 6497,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6475,
											"end": 6497,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6475,
											"end": 6497,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6475,
											"end": 6497,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6475,
											"end": 6497,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6475,
											"end": 6497,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6475,
											"end": 6497,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6475,
											"end": 6497,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6475,
											"end": 6497,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6475,
											"end": 6497,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6475,
											"end": 6497,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6468,
											"end": 6497,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6468,
											"end": 6497,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6384,
											"end": 6504,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6384,
											"end": 6504,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6384,
											"end": 6504,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6384,
											"end": 6504,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2903,
											"end": 3934,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 2903,
											"end": 3934,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2974,
											"end": 2975,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2965,
											"end": 2971,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2965,
											"end": 2975,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2957,
											"end": 3009,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 2957,
											"end": 3009,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2957,
											"end": 3009,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2957,
											"end": 3009,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2957,
											"end": 3009,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2957,
											"end": 3009,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2957,
											"end": 3009,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2957,
											"end": 3009,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2957,
											"end": 3009,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2957,
											"end": 3009,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 2957,
											"end": 3009,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2957,
											"end": 3009,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 2957,
											"end": 3009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2957,
											"end": 3009,
											"name": "tag",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 2957,
											"end": 3009,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2957,
											"end": 3009,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2957,
											"end": 3009,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2957,
											"end": 3009,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2957,
											"end": 3009,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2957,
											"end": 3009,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2957,
											"end": 3009,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2957,
											"end": 3009,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2957,
											"end": 3009,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 2957,
											"end": 3009,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3041,
											"end": 3046,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3041,
											"end": 3058,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3047,
											"end": 3057,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3041,
											"end": 3058,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3041,
											"end": 3058,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3041,
											"end": 3058,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3041,
											"end": 3058,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3041,
											"end": 3058,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3041,
											"end": 3058,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3041,
											"end": 3058,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3041,
											"end": 3058,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3041,
											"end": 3058,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3041,
											"end": 3058,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3041,
											"end": 3058,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3041,
											"end": 3058,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3041,
											"end": 3058,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3041,
											"end": 3058,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3041,
											"end": 3058,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3041,
											"end": 3065,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3041,
											"end": 3065,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3041,
											"end": 3065,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3041,
											"end": 3065,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3041,
											"end": 3065,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3041,
											"end": 3065,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3041,
											"end": 3065,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3041,
											"end": 3065,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3041,
											"end": 3065,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3041,
											"end": 3065,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3041,
											"end": 3065,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3041,
											"end": 3065,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3040,
											"end": 3065,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3019,
											"end": 3125,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 3019,
											"end": 3125,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3019,
											"end": 3125,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3019,
											"end": 3125,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3019,
											"end": 3125,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3019,
											"end": 3125,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3019,
											"end": 3125,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3019,
											"end": 3125,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3019,
											"end": 3125,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3019,
											"end": 3125,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 3019,
											"end": 3125,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3019,
											"end": 3125,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 3019,
											"end": 3125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3019,
											"end": 3125,
											"name": "tag",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 3019,
											"end": 3125,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3019,
											"end": 3125,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3019,
											"end": 3125,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3019,
											"end": 3125,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3019,
											"end": 3125,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3019,
											"end": 3125,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3019,
											"end": 3125,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3019,
											"end": 3125,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3019,
											"end": 3125,
											"name": "tag",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 3019,
											"end": 3125,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3136,
											"end": 3162,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3195,
											"end": 3198,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 421,
											"end": 424,
											"name": "PUSH",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 3166,
											"end": 3172,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3166,
											"end": 3191,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 3166,
											"end": 3191,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3166,
											"end": 3191,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3166,
											"end": 3191,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 3166,
											"end": 3191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3166,
											"end": 3191,
											"name": "tag",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 3166,
											"end": 3191,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3165,
											"end": 3198,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 3165,
											"end": 3198,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3165,
											"end": 3198,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3165,
											"end": 3198,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 3165,
											"end": 3198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3165,
											"end": 3198,
											"name": "tag",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 3165,
											"end": 3198,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3136,
											"end": 3198,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3136,
											"end": 3198,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3259,
											"end": 3277,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3229,
											"end": 3243,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3229,
											"end": 3255,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3244,
											"end": 3254,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3229,
											"end": 3255,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3229,
											"end": 3255,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3229,
											"end": 3255,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3229,
											"end": 3255,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3229,
											"end": 3255,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3229,
											"end": 3255,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3229,
											"end": 3255,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3229,
											"end": 3255,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3229,
											"end": 3255,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3229,
											"end": 3255,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3229,
											"end": 3255,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3229,
											"end": 3255,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3229,
											"end": 3255,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3229,
											"end": 3255,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3229,
											"end": 3255,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3229,
											"end": 3255,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3229,
											"end": 3277,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3229,
											"end": 3277,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3208,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 3208,
											"end": 3326,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3208,
											"end": 3326,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3208,
											"end": 3326,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3208,
											"end": 3326,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3208,
											"end": 3326,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3208,
											"end": 3326,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3208,
											"end": 3326,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3208,
											"end": 3326,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3208,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 3208,
											"end": 3326,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3208,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 3208,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3208,
											"end": 3326,
											"name": "tag",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 3208,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3208,
											"end": 3326,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3208,
											"end": 3326,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3208,
											"end": 3326,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3208,
											"end": 3326,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3208,
											"end": 3326,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3208,
											"end": 3326,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3208,
											"end": 3326,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3208,
											"end": 3326,
											"name": "tag",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 3208,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3337,
											"end": 3358,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3423,
											"end": 3426,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 499,
											"end": 501,
											"name": "PUSH",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 3362,
											"end": 3376,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3362,
											"end": 3388,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3377,
											"end": 3387,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3362,
											"end": 3388,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3362,
											"end": 3388,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3362,
											"end": 3388,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3362,
											"end": 3388,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3362,
											"end": 3388,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3362,
											"end": 3388,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3362,
											"end": 3388,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3362,
											"end": 3388,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3362,
											"end": 3388,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3362,
											"end": 3388,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3362,
											"end": 3388,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3362,
											"end": 3388,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3362,
											"end": 3388,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3362,
											"end": 3388,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3362,
											"end": 3388,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3362,
											"end": 3388,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3362,
											"end": 3419,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 3362,
											"end": 3419,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3362,
											"end": 3419,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3362,
											"end": 3419,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 3362,
											"end": 3419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3362,
											"end": 3419,
											"name": "tag",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 3362,
											"end": 3419,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3361,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 3361,
											"end": 3426,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3361,
											"end": 3426,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3361,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 3361,
											"end": 3426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3361,
											"end": 3426,
											"name": "tag",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 3361,
											"end": 3426,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3337,
											"end": 3426,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3337,
											"end": 3426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3454,
											"end": 3467,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3444,
											"end": 3450,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3444,
											"end": 3467,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3444,
											"end": 3467,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3436,
											"end": 3499,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 3436,
											"end": 3499,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3436,
											"end": 3499,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3436,
											"end": 3499,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3436,
											"end": 3499,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3436,
											"end": 3499,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3436,
											"end": 3499,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3436,
											"end": 3499,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3436,
											"end": 3499,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3436,
											"end": 3499,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 3436,
											"end": 3499,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3436,
											"end": 3499,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 3436,
											"end": 3499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3436,
											"end": 3499,
											"name": "tag",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 3436,
											"end": 3499,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3436,
											"end": 3499,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3436,
											"end": 3499,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3436,
											"end": 3499,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3436,
											"end": 3499,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3436,
											"end": 3499,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3436,
											"end": 3499,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3436,
											"end": 3499,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3436,
											"end": 3499,
											"name": "tag",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 3436,
											"end": 3499,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3563,
											"end": 3569,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3531,
											"end": 3534,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "851"
										},
										{
											"begin": 3531,
											"end": 3544,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3531,
											"end": 3544,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3531,
											"end": 3544,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 3553,
											"end": 3557,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 3531,
											"end": 3559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "tag",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "tag",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 3531,
											"end": 3559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "tag",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3531,
											"end": 3569,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3531,
											"end": 3569,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3510,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 3510,
											"end": 3623,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3510,
											"end": 3623,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3510,
											"end": 3623,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3510,
											"end": 3623,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3510,
											"end": 3623,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3510,
											"end": 3623,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3510,
											"end": 3623,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3510,
											"end": 3623,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3510,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 3510,
											"end": 3623,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3510,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 3510,
											"end": 3623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3510,
											"end": 3623,
											"name": "tag",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 3510,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3510,
											"end": 3623,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3510,
											"end": 3623,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3510,
											"end": 3623,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3510,
											"end": 3623,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3510,
											"end": 3623,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3510,
											"end": 3623,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3510,
											"end": 3623,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3510,
											"end": 3623,
											"name": "tag",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 3510,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3654,
											"end": 3767,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3654,
											"end": 3767,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3654,
											"end": 3767,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3654,
											"end": 3767,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 3654,
											"end": 3767,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3654,
											"end": 3767,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3654,
											"end": 3767,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3654,
											"end": 3767,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3672,
											"end": 3678,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3654,
											"end": 3767,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3654,
											"end": 3767,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3654,
											"end": 3767,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3654,
											"end": 3767,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3692,
											"end": 3710,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3654,
											"end": 3767,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3654,
											"end": 3767,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3654,
											"end": 3767,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3654,
											"end": 3767,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3724,
											"end": 3739,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 3654,
											"end": 3767,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3654,
											"end": 3767,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3654,
											"end": 3767,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3654,
											"end": 3767,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3753,
											"end": 3757,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3654,
											"end": 3767,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3654,
											"end": 3767,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3654,
											"end": 3767,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3654,
											"end": 3767,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3654,
											"end": 3767,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3634,
											"end": 3639,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3634,
											"end": 3651,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3640,
											"end": 3650,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3634,
											"end": 3651,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3634,
											"end": 3651,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3634,
											"end": 3651,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3634,
											"end": 3651,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3634,
											"end": 3651,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3634,
											"end": 3651,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3634,
											"end": 3651,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3634,
											"end": 3651,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3634,
											"end": 3651,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3634,
											"end": 3651,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3634,
											"end": 3651,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3634,
											"end": 3651,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3634,
											"end": 3651,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3634,
											"end": 3651,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3634,
											"end": 3651,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3634,
											"end": 3767,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3634,
											"end": 3767,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3634,
											"end": 3767,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3634,
											"end": 3767,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3634,
											"end": 3767,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3634,
											"end": 3767,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3634,
											"end": 3767,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3634,
											"end": 3767,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3634,
											"end": 3767,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3634,
											"end": 3767,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3634,
											"end": 3767,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3634,
											"end": 3767,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3634,
											"end": 3767,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3634,
											"end": 3767,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3634,
											"end": 3767,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3634,
											"end": 3767,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3634,
											"end": 3767,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3634,
											"end": 3767,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3634,
											"end": 3767,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3634,
											"end": 3767,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3634,
											"end": 3767,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3634,
											"end": 3767,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 3634,
											"end": 3767,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3634,
											"end": 3767,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3634,
											"end": 3767,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3634,
											"end": 3767,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3634,
											"end": 3767,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3634,
											"end": 3767,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3634,
											"end": 3767,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3634,
											"end": 3767,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3634,
											"end": 3767,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3634,
											"end": 3767,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3634,
											"end": 3767,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3634,
											"end": 3767,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3634,
											"end": 3767,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3634,
											"end": 3767,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3634,
											"end": 3767,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3634,
											"end": 3767,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3634,
											"end": 3767,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3634,
											"end": 3767,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 3634,
											"end": 3767,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3634,
											"end": 3767,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3634,
											"end": 3767,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3634,
											"end": 3767,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3634,
											"end": 3767,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3634,
											"end": 3767,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3634,
											"end": 3767,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 3634,
											"end": 3767,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3634,
											"end": 3767,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3634,
											"end": 3767,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3634,
											"end": 3767,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3634,
											"end": 3767,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3634,
											"end": 3767,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3777,
											"end": 3813,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 3794,
											"end": 3804,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3806,
											"end": 3812,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3777,
											"end": 3780,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "851"
										},
										{
											"begin": 3777,
											"end": 3793,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3777,
											"end": 3793,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3777,
											"end": 3793,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 3777,
											"end": 3793,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3777,
											"end": 3813,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3777,
											"end": 3813,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3777,
											"end": 3813,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3777,
											"end": 3813,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3777,
											"end": 3813,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3777,
											"end": 3813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3777,
											"end": 3813,
											"name": "tag",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 3777,
											"end": 3813,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3856,
											"end": 3862,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3840,
											"end": 3853,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 3840,
											"end": 3853,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3840,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 3840,
											"end": 3862,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3840,
											"end": 3862,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3840,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 3840,
											"end": 3862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3840,
											"end": 3862,
											"name": "tag",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 3840,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3824,
											"end": 3837,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 3824,
											"end": 3862,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3824,
											"end": 3862,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3824,
											"end": 3862,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3824,
											"end": 3862,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3888,
											"end": 3898,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3878,
											"end": 3927,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3878,
											"end": 3927,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3878,
											"end": 3927,
											"name": "PUSH",
											"source": 6,
											"value": "6B9BB4766CF5AB74B890DF959E4FAD0E54B1C3885E49C9541D36253A6E39E6"
										},
										{
											"begin": 3900,
											"end": 3906,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3908,
											"end": 3926,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3878,
											"end": 3927,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3878,
											"end": 3927,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3878,
											"end": 3927,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 3878,
											"end": 3927,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3878,
											"end": 3927,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3878,
											"end": 3927,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3878,
											"end": 3927,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 3878,
											"end": 3927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3878,
											"end": 3927,
											"name": "tag",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 3878,
											"end": 3927,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3878,
											"end": 3927,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3878,
											"end": 3927,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3878,
											"end": 3927,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3878,
											"end": 3927,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3878,
											"end": 3927,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3878,
											"end": 3927,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3878,
											"end": 3927,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 2947,
											"end": 3934,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2947,
											"end": 3934,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2903,
											"end": 3934,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2903,
											"end": 3934,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 378,
											"end": 424,
											"name": "tag",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 378,
											"end": 424,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 421,
											"end": 424,
											"name": "PUSH",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 378,
											"end": 424,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 378,
											"end": 424,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4920,
											"end": 5033,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 4920,
											"end": 5033,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4980,
											"end": 4987,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5006,
											"end": 5020,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 5006,
											"end": 5026,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5021,
											"end": 5025,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5006,
											"end": 5026,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5006,
											"end": 5026,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5006,
											"end": 5026,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5006,
											"end": 5026,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5006,
											"end": 5026,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5006,
											"end": 5026,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5006,
											"end": 5026,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5006,
											"end": 5026,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5006,
											"end": 5026,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5006,
											"end": 5026,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5006,
											"end": 5026,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5006,
											"end": 5026,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5006,
											"end": 5026,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5006,
											"end": 5026,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5006,
											"end": 5026,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5006,
											"end": 5026,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4999,
											"end": 5026,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4999,
											"end": 5026,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4920,
											"end": 5033,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4920,
											"end": 5033,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4920,
											"end": 5033,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4920,
											"end": 5033,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 611,
											"end": 658,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 611,
											"end": 658,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 651,
											"end": 658,
											"name": "PUSH",
											"source": 6,
											"value": "278D00"
										},
										{
											"begin": 611,
											"end": 658,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 611,
											"end": 658,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5796,
											"end": 6227,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 5796,
											"end": 6227,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5860,
											"end": 5867,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5879,
											"end": 5896,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5899,
											"end": 5904,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 5899,
											"end": 5910,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5905,
											"end": 5909,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5899,
											"end": 5910,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5899,
											"end": 5910,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5899,
											"end": 5910,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5899,
											"end": 5910,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5899,
											"end": 5910,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5899,
											"end": 5910,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5899,
											"end": 5910,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5899,
											"end": 5910,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5899,
											"end": 5910,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5899,
											"end": 5910,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5899,
											"end": 5910,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5899,
											"end": 5910,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5899,
											"end": 5910,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5899,
											"end": 5910,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5899,
											"end": 5910,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5879,
											"end": 5910,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5879,
											"end": 5910,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5924,
											"end": 5928,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5924,
											"end": 5935,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 5924,
											"end": 5935,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5924,
											"end": 5935,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5924,
											"end": 5935,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5924,
											"end": 5935,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5924,
											"end": 5935,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5924,
											"end": 5935,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 5924,
											"end": 5935,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 5924,
											"end": 5935,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5924,
											"end": 5935,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 5924,
											"end": 5935,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 5924,
											"end": 5935,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5920,
											"end": 6221,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5920,
											"end": 6221,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 5920,
											"end": 6221,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5951,
											"end": 5970,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 708,
											"end": 713,
											"name": "PUSH",
											"source": 6,
											"value": "15180"
										},
										{
											"begin": 5992,
											"end": 5996,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5992,
											"end": 6006,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 5992,
											"end": 6006,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5992,
											"end": 6006,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5974,
											"end": 5989,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 5974,
											"end": 6006,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 5974,
											"end": 6006,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5974,
											"end": 6006,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5974,
											"end": 6006,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 5974,
											"end": 6006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5974,
											"end": 6006,
											"name": "tag",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 5974,
											"end": 6006,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5973,
											"end": 6042,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 5973,
											"end": 6042,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5973,
											"end": 6042,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5973,
											"end": 6042,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 5973,
											"end": 6042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5973,
											"end": 6042,
											"name": "tag",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 5973,
											"end": 6042,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5951,
											"end": 6042,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5951,
											"end": 6042,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6056,
											"end": 6072,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6137,
											"end": 6142,
											"name": "PUSH",
											"source": 6,
											"value": "8E94"
										},
										{
											"begin": 6106,
											"end": 6117,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 584,
											"end": 585,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 6076,
											"end": 6080,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6076,
											"end": 6087,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6076,
											"end": 6087,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6076,
											"end": 6087,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6076,
											"end": 6103,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 6076,
											"end": 6103,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6076,
											"end": 6103,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6076,
											"end": 6103,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 6076,
											"end": 6103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6076,
											"end": 6103,
											"name": "tag",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 6076,
											"end": 6103,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6076,
											"end": 6117,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 6076,
											"end": 6117,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6076,
											"end": 6117,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6076,
											"end": 6117,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 6076,
											"end": 6117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6076,
											"end": 6117,
											"name": "tag",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 6076,
											"end": 6117,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6075,
											"end": 6142,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 6075,
											"end": 6142,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6075,
											"end": 6142,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6075,
											"end": 6142,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 6075,
											"end": 6142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6075,
											"end": 6142,
											"name": "tag",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 6075,
											"end": 6142,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6056,
											"end": 6142,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6056,
											"end": 6142,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6163,
											"end": 6171,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6156,
											"end": 6171,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6156,
											"end": 6171,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6156,
											"end": 6171,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6156,
											"end": 6171,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6156,
											"end": 6171,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6156,
											"end": 6171,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 6156,
											"end": 6171,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5920,
											"end": 6221,
											"name": "tag",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 5920,
											"end": 6221,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6209,
											"end": 6210,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6202,
											"end": 6210,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6202,
											"end": 6210,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6202,
											"end": 6210,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5796,
											"end": 6227,
											"name": "tag",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 5796,
											"end": 6227,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5796,
											"end": 6227,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5796,
											"end": 6227,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5796,
											"end": 6227,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5796,
											"end": 6227,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6712,
											"end": 6918,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 6712,
											"end": 6918,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6774,
											"end": 6781,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6793,
											"end": 6810,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6813,
											"end": 6818,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 6813,
											"end": 6824,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6819,
											"end": 6823,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6813,
											"end": 6824,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6813,
											"end": 6824,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6813,
											"end": 6824,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6813,
											"end": 6824,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6813,
											"end": 6824,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6813,
											"end": 6824,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6813,
											"end": 6824,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6813,
											"end": 6824,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6813,
											"end": 6824,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6813,
											"end": 6824,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6813,
											"end": 6824,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6813,
											"end": 6824,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6813,
											"end": 6824,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6813,
											"end": 6824,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6813,
											"end": 6824,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6793,
											"end": 6824,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6793,
											"end": 6824,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6838,
											"end": 6842,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6838,
											"end": 6849,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 6838,
											"end": 6849,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6838,
											"end": 6849,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6838,
											"end": 6849,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6838,
											"end": 6849,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6838,
											"end": 6849,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6838,
											"end": 6849,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 6838,
											"end": 6849,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 6838,
											"end": 6849,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6838,
											"end": 6849,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 6838,
											"end": 6849,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 6838,
											"end": 6849,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6834,
											"end": 6894,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6834,
											"end": 6894,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 6834,
											"end": 6894,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6872,
											"end": 6876,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6872,
											"end": 6883,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6872,
											"end": 6883,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6872,
											"end": 6883,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6865,
											"end": 6883,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6865,
											"end": 6883,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6865,
											"end": 6883,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6865,
											"end": 6883,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 6865,
											"end": 6883,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6834,
											"end": 6894,
											"name": "tag",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 6834,
											"end": 6894,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6910,
											"end": 6911,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6903,
											"end": 6911,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6903,
											"end": 6911,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6903,
											"end": 6911,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6712,
											"end": 6918,
											"name": "tag",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 6712,
											"end": 6918,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6712,
											"end": 6918,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6712,
											"end": 6918,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6712,
											"end": 6918,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6712,
											"end": 6918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6233,
											"end": 6378,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 6233,
											"end": 6378,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6322,
											"end": 6333,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 6322,
											"end": 6333,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 6322,
											"end": 6333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6322,
											"end": 6333,
											"name": "tag",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 6322,
											"end": 6333,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6356,
											"end": 6361,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 6356,
											"end": 6371,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6362,
											"end": 6370,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6356,
											"end": 6371,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6356,
											"end": 6371,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6356,
											"end": 6371,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6356,
											"end": 6371,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6356,
											"end": 6371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6356,
											"end": 6371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6356,
											"end": 6371,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6356,
											"end": 6371,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6356,
											"end": 6371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6356,
											"end": 6371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6356,
											"end": 6371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6356,
											"end": 6371,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6356,
											"end": 6371,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6356,
											"end": 6371,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6356,
											"end": 6371,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6349,
											"end": 6371,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6349,
											"end": 6371,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6349,
											"end": 6371,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6349,
											"end": 6371,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 6349,
											"end": 6371,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6349,
											"end": 6371,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6349,
											"end": 6371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6349,
											"end": 6371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6349,
											"end": 6371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6349,
											"end": 6371,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6349,
											"end": 6371,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6349,
											"end": 6371,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6349,
											"end": 6371,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6349,
											"end": 6371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6349,
											"end": 6371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6349,
											"end": 6371,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6349,
											"end": 6371,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6349,
											"end": 6371,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6349,
											"end": 6371,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6349,
											"end": 6371,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6349,
											"end": 6371,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6349,
											"end": 6371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6349,
											"end": 6371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6349,
											"end": 6371,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6349,
											"end": 6371,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6349,
											"end": 6371,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 6349,
											"end": 6371,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6349,
											"end": 6371,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6349,
											"end": 6371,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6349,
											"end": 6371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6349,
											"end": 6371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6349,
											"end": 6371,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6349,
											"end": 6371,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6349,
											"end": 6371,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 6349,
											"end": 6371,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6349,
											"end": 6371,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6349,
											"end": 6371,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6349,
											"end": 6371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6349,
											"end": 6371,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6349,
											"end": 6371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6349,
											"end": 6371,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 6349,
											"end": 6371,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 6349,
											"end": 6371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6349,
											"end": 6371,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 6349,
											"end": 6371,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 6349,
											"end": 6371,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6349,
											"end": 6371,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6349,
											"end": 6371,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6349,
											"end": 6371,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6349,
											"end": 6371,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6349,
											"end": 6371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6349,
											"end": 6371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6349,
											"end": 6371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6349,
											"end": 6371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6349,
											"end": 6371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6349,
											"end": 6371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6233,
											"end": 6378,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6233,
											"end": 6378,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6233,
											"end": 6378,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6233,
											"end": 6378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5039,
											"end": 5133,
											"name": "tag",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 5039,
											"end": 5133,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5087,
											"end": 5094,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 584,
											"end": 585,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 5106,
											"end": 5126,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5106,
											"end": 5126,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5039,
											"end": 5133,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5039,
											"end": 5133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 1070,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 1021,
											"end": 1070,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 1070,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1021,
											"end": 1070,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1021,
											"end": 1070,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 1070,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 1070,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1021,
											"end": 1070,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 1070,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1021,
											"end": 1070,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1021,
											"end": 1070,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 1070,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1021,
											"end": 1070,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 1070,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 1070,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 1070,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 1070,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 1070,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 1070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "tag",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 1822,
											"end": 1827,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1844,
											"end": 1849,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "PUSH",
											"source": 3,
											"value": "23B872DD"
										},
										{
											"begin": 1865,
											"end": 1869,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1871,
											"end": 1873,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1875,
											"end": 1880,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 1829,
											"end": 1882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "tag",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1802,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "267"
										},
										{
											"begin": 1802,
											"end": 1883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "tag",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1702,
											"end": 1890,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "tag",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 1405,
											"end": 1410,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1427,
											"end": 1432,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB"
										},
										{
											"begin": 1444,
											"end": 1446,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1448,
											"end": 1453,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "270"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 1412,
											"end": 1455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "tag",
											"source": 3,
											"value": "270"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1385,
											"end": 1404,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "267"
										},
										{
											"begin": 1385,
											"end": 1456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "tag",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1303,
											"end": 1463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "tag",
											"source": 3,
											"value": "267"
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4478,
											"end": 4501,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "281"
										},
										{
											"begin": 4532,
											"end": 4536,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4512,
											"end": 4517,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4504,
											"end": 4537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "tag",
											"source": 3,
											"value": "281"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4478,
											"end": 4537,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4478,
											"end": 4537,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4572,
											"end": 4573,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4551,
											"end": 4561,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4568,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4573,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4573,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "283"
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4589,
											"end": 4599,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "284"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "285"
										},
										{
											"begin": 4578,
											"end": 4608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "tag",
											"source": 3,
											"value": "284"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4577,
											"end": 4608,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "tag",
											"source": 3,
											"value": "283"
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4664,
											"end": 4669,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 3,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 4631,
											"end": 4671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "tag",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "tag",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4129,
											"end": 4688,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4059,
											"end": 4688,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "tag",
											"source": 4,
											"value": "282"
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2780,
											"end": 2792,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "290"
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2841,
											"end": 2845,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2847,
											"end": 2848,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2811,
											"end": 2832,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "291"
										},
										{
											"begin": 2811,
											"end": 2849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "tag",
											"source": 4,
											"value": "290"
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2804,
											"end": 2849,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2804,
											"end": 2849,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2705,
											"end": 2856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "tag",
											"source": 4,
											"value": "291"
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3279,
											"end": 3291,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3331,
											"end": 3336,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3307,
											"end": 3328,
											"name": "SELFBALANCE",
											"source": 4
										},
										{
											"begin": 3307,
											"end": 3336,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "293"
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3394,
											"end": 3398,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 4,
											"value": "CD78605900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "294"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 3359,
											"end": 3400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "tag",
											"source": 4,
											"value": "294"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "tag",
											"source": 4,
											"value": "293"
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3435,
											"end": 3458,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3468,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3473,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3462,
											"end": 3473,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3481,
											"end": 3486,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3488,
											"end": 3492,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "295"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "296"
										},
										{
											"begin": 3462,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 4,
											"value": "295"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "299"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "3F"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "298"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 4,
											"value": "299"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 4,
											"value": "298"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "300"
										},
										{
											"begin": 3537,
											"end": 3543,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3545,
											"end": 3552,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3554,
											"end": 3564,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3536,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "301"
										},
										{
											"begin": 3510,
											"end": 3565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "tag",
											"source": 4,
											"value": "300"
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3180,
											"end": 3572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 4,
											"value": "301"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4769,
											"end": 4781,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 4798,
											"end": 4805,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "303"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "304"
										},
										{
											"begin": 4829,
											"end": 4839,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4821,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "305"
										},
										{
											"begin": 4821,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "tag",
											"source": 4,
											"value": "304"
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "306"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 4,
											"value": "303"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5066,
											"end": 5067,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5045,
											"end": 5055,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5045,
											"end": 5062,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5045,
											"end": 5067,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "307"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5093,
											"end": 5094,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5071,
											"end": 5077,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 5071,
											"end": 5094,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "tag",
											"source": 4,
											"value": "307"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "308"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5138,
											"end": 5144,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 4,
											"value": "9996B31500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "309"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 5121,
											"end": 5145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "tag",
											"source": 4,
											"value": "309"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "tag",
											"source": 4,
											"value": "308"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5180,
											"end": 5190,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "302"
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 4,
											"value": "306"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 4,
											"value": "302"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4625,
											"end": 5207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "tag",
											"source": 4,
											"value": "305"
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5894,
											"end": 5895,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5874,
											"end": 5884,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5874,
											"end": 5891,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5874,
											"end": 5895,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "311"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6102,
											"end": 6112,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6096,
											"end": 6113,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6158,
											"end": 6173,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6145,
											"end": 6155,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6141,
											"end": 6143,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6137,
											"end": 6156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6130,
											"end": 6174,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "tag",
											"source": 4,
											"value": "311"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 4,
											"value": "1425EA4200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "254"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 523,
											"end": 640,
											"name": "tag",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 523,
											"end": 640,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 632,
											"end": 633,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 630,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 622,
											"end": 634,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 769,
											"end": 895,
											"name": "tag",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 769,
											"end": 895,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 806,
											"end": 813,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 846,
											"end": 888,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 839,
											"end": 844,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 835,
											"end": 889,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 824,
											"end": 889,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 824,
											"end": 889,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 769,
											"end": 895,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 769,
											"end": 895,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 769,
											"end": 895,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 769,
											"end": 895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 901,
											"end": 997,
											"name": "tag",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 901,
											"end": 997,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 938,
											"end": 945,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 967,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 985,
											"end": 990,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 967,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 967,
											"end": 991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 967,
											"end": 991,
											"name": "tag",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 967,
											"end": 991,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 956,
											"end": 991,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 956,
											"end": 991,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 901,
											"end": 997,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 901,
											"end": 997,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 901,
											"end": 997,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 901,
											"end": 997,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "tag",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "376"
										},
										{
											"begin": 1094,
											"end": 1099,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 1076,
											"end": 1100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "tag",
											"source": 7,
											"value": "376"
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1069,
											"end": 1074,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1066,
											"end": 1101,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "377"
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1115,
											"end": 1116,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1112,
											"end": 1113,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1105,
											"end": 1117,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "tag",
											"source": 7,
											"value": "377"
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1003,
											"end": 1125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "tag",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1177,
											"end": 1182,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1202,
											"end": 1222,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 1258,
											"end": 1263,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 1231,
											"end": 1264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "tag",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1131,
											"end": 1270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "tag",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1335,
											"end": 1341,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1384,
											"end": 1386,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1372,
											"end": 1381,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1363,
											"end": 1370,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1355,
											"end": 1387,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "382"
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 1390,
											"end": 1469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "tag",
											"source": 7,
											"value": "382"
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "tag",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1510,
											"end": 1511,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "383"
										},
										{
											"begin": 1580,
											"end": 1587,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1560,
											"end": 1569,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1556,
											"end": 1578,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 1535,
											"end": 1588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "tag",
											"source": 7,
											"value": "383"
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1525,
											"end": 1588,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1525,
											"end": 1588,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1481,
											"end": 1598,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1276,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1671,
											"name": "tag",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 1611,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1639,
											"end": 1642,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1660,
											"end": 1665,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1653,
											"end": 1665,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1653,
											"end": 1665,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1671,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1671,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1671,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1677,
											"end": 1819,
											"name": "tag",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 1677,
											"end": 1819,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1727,
											"end": 1736,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1760,
											"end": 1813,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 1778,
											"end": 1812,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "387"
										},
										{
											"begin": 1787,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "388"
										},
										{
											"begin": 1805,
											"end": 1810,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1787,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 1787,
											"end": 1811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1787,
											"end": 1811,
											"name": "tag",
											"source": 7,
											"value": "388"
										},
										{
											"begin": 1787,
											"end": 1811,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1778,
											"end": 1812,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 1778,
											"end": 1812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1778,
											"end": 1812,
											"name": "tag",
											"source": 7,
											"value": "387"
										},
										{
											"begin": 1778,
											"end": 1812,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1813,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 1760,
											"end": 1813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1813,
											"name": "tag",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 1760,
											"end": 1813,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1747,
											"end": 1813,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1747,
											"end": 1813,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1677,
											"end": 1819,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1677,
											"end": 1819,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1677,
											"end": 1819,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1677,
											"end": 1819,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1825,
											"end": 1951,
											"name": "tag",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 1825,
											"end": 1951,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1875,
											"end": 1884,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1908,
											"end": 1945,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 1939,
											"end": 1944,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1908,
											"end": 1945,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 1908,
											"end": 1945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1908,
											"end": 1945,
											"name": "tag",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 1908,
											"end": 1945,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1895,
											"end": 1945,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1895,
											"end": 1945,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1825,
											"end": 1951,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1825,
											"end": 1951,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1825,
											"end": 1951,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1825,
											"end": 1951,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1957,
											"end": 2097,
											"name": "tag",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 1957,
											"end": 2097,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2021,
											"end": 2030,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2054,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "392"
										},
										{
											"begin": 2085,
											"end": 2090,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2054,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 2054,
											"end": 2091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2054,
											"end": 2091,
											"name": "tag",
											"source": 7,
											"value": "392"
										},
										{
											"begin": 2054,
											"end": 2091,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2041,
											"end": 2091,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2041,
											"end": 2091,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1957,
											"end": 2097,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1957,
											"end": 2097,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1957,
											"end": 2097,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1957,
											"end": 2097,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2103,
											"end": 2262,
											"name": "tag",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 2103,
											"end": 2262,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2204,
											"end": 2255,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "394"
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2204,
											"end": 2255,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 2204,
											"end": 2255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2204,
											"end": 2255,
											"name": "tag",
											"source": 7,
											"value": "394"
										},
										{
											"begin": 2204,
											"end": 2255,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2199,
											"end": 2202,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2192,
											"end": 2256,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2103,
											"end": 2262,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2103,
											"end": 2262,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2103,
											"end": 2262,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2268,
											"end": 2518,
											"name": "tag",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 2268,
											"end": 2518,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2375,
											"end": 2379,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2413,
											"end": 2415,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2402,
											"end": 2411,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2398,
											"end": 2416,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2390,
											"end": 2416,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2390,
											"end": 2416,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2426,
											"end": 2511,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "396"
										},
										{
											"begin": 2508,
											"end": 2509,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2497,
											"end": 2506,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2493,
											"end": 2510,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2484,
											"end": 2490,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2426,
											"end": 2511,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 2426,
											"end": 2511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2426,
											"end": 2511,
											"name": "tag",
											"source": 7,
											"value": "396"
										},
										{
											"begin": 2426,
											"end": 2511,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2268,
											"end": 2518,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2268,
											"end": 2518,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2268,
											"end": 2518,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2268,
											"end": 2518,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2268,
											"end": 2518,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2524,
											"end": 2646,
											"name": "tag",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 2524,
											"end": 2646,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2597,
											"end": 2621,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "398"
										},
										{
											"begin": 2615,
											"end": 2620,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2597,
											"end": 2621,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 2597,
											"end": 2621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2597,
											"end": 2621,
											"name": "tag",
											"source": 7,
											"value": "398"
										},
										{
											"begin": 2597,
											"end": 2621,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2595,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2587,
											"end": 2622,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2577,
											"end": 2640,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "399"
										},
										{
											"begin": 2577,
											"end": 2640,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2636,
											"end": 2637,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2633,
											"end": 2634,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2626,
											"end": 2638,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2577,
											"end": 2640,
											"name": "tag",
											"source": 7,
											"value": "399"
										},
										{
											"begin": 2577,
											"end": 2640,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2524,
											"end": 2646,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2524,
											"end": 2646,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2652,
											"end": 2791,
											"name": "tag",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 2652,
											"end": 2791,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2698,
											"end": 2703,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2736,
											"end": 2742,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2723,
											"end": 2743,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2714,
											"end": 2743,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2714,
											"end": 2743,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2752,
											"end": 2785,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "401"
										},
										{
											"begin": 2779,
											"end": 2784,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2752,
											"end": 2785,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 2752,
											"end": 2785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2752,
											"end": 2785,
											"name": "tag",
											"source": 7,
											"value": "401"
										},
										{
											"begin": 2752,
											"end": 2785,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2652,
											"end": 2791,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2652,
											"end": 2791,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2652,
											"end": 2791,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2652,
											"end": 2791,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2652,
											"end": 2791,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2797,
											"end": 3126,
											"name": "tag",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 2797,
											"end": 3126,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2856,
											"end": 2862,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2905,
											"end": 2907,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2893,
											"end": 2902,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2884,
											"end": 2891,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2880,
											"end": 2903,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2876,
											"end": 2908,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2873,
											"end": 2992,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2873,
											"end": 2992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "403"
										},
										{
											"begin": 2873,
											"end": 2992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2911,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "404"
										},
										{
											"begin": 2911,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 2911,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2911,
											"end": 2990,
											"name": "tag",
											"source": 7,
											"value": "404"
										},
										{
											"begin": 2911,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2873,
											"end": 2992,
											"name": "tag",
											"source": 7,
											"value": "403"
										},
										{
											"begin": 2873,
											"end": 2992,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3031,
											"end": 3032,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3056,
											"end": 3109,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 3101,
											"end": 3108,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3092,
											"end": 3098,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3081,
											"end": 3090,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3077,
											"end": 3099,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3056,
											"end": 3109,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 3056,
											"end": 3109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3056,
											"end": 3109,
											"name": "tag",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 3056,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3046,
											"end": 3109,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3046,
											"end": 3109,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3002,
											"end": 3119,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2797,
											"end": 3126,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2797,
											"end": 3126,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2797,
											"end": 3126,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2797,
											"end": 3126,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2797,
											"end": 3126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3132,
											"end": 3222,
											"name": "tag",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 3132,
											"end": 3222,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3166,
											"end": 3173,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3209,
											"end": 3214,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3202,
											"end": 3215,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3195,
											"end": 3216,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3184,
											"end": 3216,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3184,
											"end": 3216,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3132,
											"end": 3222,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3132,
											"end": 3222,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3132,
											"end": 3222,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3132,
											"end": 3222,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3228,
											"end": 3337,
											"name": "tag",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 3228,
											"end": 3337,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3309,
											"end": 3330,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "408"
										},
										{
											"begin": 3324,
											"end": 3329,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3309,
											"end": 3330,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 3309,
											"end": 3330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3309,
											"end": 3330,
											"name": "tag",
											"source": 7,
											"value": "408"
										},
										{
											"begin": 3309,
											"end": 3330,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3304,
											"end": 3307,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3297,
											"end": 3331,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3228,
											"end": 3337,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3228,
											"end": 3337,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3228,
											"end": 3337,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3343,
											"end": 3884,
											"name": "tag",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 3343,
											"end": 3884,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3514,
											"end": 3518,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3552,
											"end": 3555,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 3541,
											"end": 3550,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3537,
											"end": 3556,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3529,
											"end": 3556,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3529,
											"end": 3556,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3566,
											"end": 3637,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 3634,
											"end": 3635,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3623,
											"end": 3632,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3619,
											"end": 3636,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3610,
											"end": 3616,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 3566,
											"end": 3637,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 3566,
											"end": 3637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3566,
											"end": 3637,
											"name": "tag",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 3566,
											"end": 3637,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3647,
											"end": 3719,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 3715,
											"end": 3717,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3704,
											"end": 3713,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3700,
											"end": 3718,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 3697,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3647,
											"end": 3719,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 3647,
											"end": 3719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3647,
											"end": 3719,
											"name": "tag",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 3647,
											"end": 3719,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3729,
											"end": 3801,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "412"
										},
										{
											"begin": 3797,
											"end": 3799,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3786,
											"end": 3795,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3782,
											"end": 3800,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3773,
											"end": 3779,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3729,
											"end": 3801,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 3729,
											"end": 3801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3729,
											"end": 3801,
											"name": "tag",
											"source": 7,
											"value": "412"
										},
										{
											"begin": 3729,
											"end": 3801,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3811,
											"end": 3877,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 3873,
											"end": 3875,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3862,
											"end": 3871,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3858,
											"end": 3876,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3849,
											"end": 3855,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3811,
											"end": 3877,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 3811,
											"end": 3877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3811,
											"end": 3877,
											"name": "tag",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 3811,
											"end": 3877,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3343,
											"end": 3884,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 3343,
											"end": 3884,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 3343,
											"end": 3884,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3343,
											"end": 3884,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3343,
											"end": 3884,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3343,
											"end": 3884,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3343,
											"end": 3884,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3343,
											"end": 3884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3890,
											"end": 4008,
											"name": "tag",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 3890,
											"end": 4008,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3977,
											"end": 4001,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "415"
										},
										{
											"begin": 3995,
											"end": 4000,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3977,
											"end": 4001,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 3977,
											"end": 4001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3977,
											"end": 4001,
											"name": "tag",
											"source": 7,
											"value": "415"
										},
										{
											"begin": 3977,
											"end": 4001,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3972,
											"end": 3975,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3965,
											"end": 4002,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3890,
											"end": 4008,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3890,
											"end": 4008,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3890,
											"end": 4008,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4014,
											"end": 4236,
											"name": "tag",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 4014,
											"end": 4236,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4107,
											"end": 4111,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4145,
											"end": 4147,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4134,
											"end": 4143,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4130,
											"end": 4148,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4122,
											"end": 4148,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4122,
											"end": 4148,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4158,
											"end": 4229,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "417"
										},
										{
											"begin": 4226,
											"end": 4227,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4215,
											"end": 4224,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4211,
											"end": 4228,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4202,
											"end": 4208,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4158,
											"end": 4229,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 4158,
											"end": 4229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4158,
											"end": 4229,
											"name": "tag",
											"source": 7,
											"value": "417"
										},
										{
											"begin": 4158,
											"end": 4229,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4014,
											"end": 4236,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4014,
											"end": 4236,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4014,
											"end": 4236,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4014,
											"end": 4236,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4014,
											"end": 4236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4242,
											"end": 4350,
											"name": "tag",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 4242,
											"end": 4350,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4319,
											"end": 4343,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 4337,
											"end": 4342,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4319,
											"end": 4343,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 4319,
											"end": 4343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4319,
											"end": 4343,
											"name": "tag",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 4319,
											"end": 4343,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4314,
											"end": 4317,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4307,
											"end": 4344,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4242,
											"end": 4350,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4242,
											"end": 4350,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4242,
											"end": 4350,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4356,
											"end": 4455,
											"name": "tag",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 4356,
											"end": 4455,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4427,
											"end": 4448,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "421"
										},
										{
											"begin": 4442,
											"end": 4447,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4427,
											"end": 4448,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 4427,
											"end": 4448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4427,
											"end": 4448,
											"name": "tag",
											"source": 7,
											"value": "421"
										},
										{
											"begin": 4427,
											"end": 4448,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4422,
											"end": 4425,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4415,
											"end": 4449,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4356,
											"end": 4455,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4356,
											"end": 4455,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4356,
											"end": 4455,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4529,
											"end": 5385,
											"name": "tag",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 4529,
											"end": 5385,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4668,
											"end": 4672,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 4663,
											"end": 4666,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4659,
											"end": 4673,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4757,
											"end": 4761,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4750,
											"end": 4755,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 4762,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4740,
											"end": 4763,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4776,
											"end": 4839,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 4833,
											"end": 4837,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4828,
											"end": 4831,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4824,
											"end": 4838,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4810,
											"end": 4822,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4776,
											"end": 4839,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 4776,
											"end": 4839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4776,
											"end": 4839,
											"name": "tag",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 4776,
											"end": 4839,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4683,
											"end": 4849,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4937,
											"end": 4941,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4930,
											"end": 4935,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4926,
											"end": 4942,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4920,
											"end": 4943,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4956,
											"end": 5019,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "424"
										},
										{
											"begin": 5013,
											"end": 5017,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5008,
											"end": 5011,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5004,
											"end": 5018,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4990,
											"end": 5002,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4956,
											"end": 5019,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 4956,
											"end": 5019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4956,
											"end": 5019,
											"name": "tag",
											"source": 7,
											"value": "424"
										},
										{
											"begin": 4956,
											"end": 5019,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4859,
											"end": 5029,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5116,
											"end": 5120,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5109,
											"end": 5114,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5105,
											"end": 5121,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5099,
											"end": 5122,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5135,
											"end": 5198,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "425"
										},
										{
											"begin": 5192,
											"end": 5196,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5187,
											"end": 5190,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5183,
											"end": 5197,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5169,
											"end": 5181,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5135,
											"end": 5198,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 5135,
											"end": 5198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5135,
											"end": 5198,
											"name": "tag",
											"source": 7,
											"value": "425"
										},
										{
											"begin": 5135,
											"end": 5198,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5039,
											"end": 5208,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5292,
											"end": 5296,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 5285,
											"end": 5290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5281,
											"end": 5297,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5275,
											"end": 5298,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5311,
											"end": 5368,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 5362,
											"end": 5366,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 5357,
											"end": 5360,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5353,
											"end": 5367,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5339,
											"end": 5351,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5311,
											"end": 5368,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 5311,
											"end": 5368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5311,
											"end": 5368,
											"name": "tag",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 5311,
											"end": 5368,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5218,
											"end": 5378,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4637,
											"end": 5385,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4529,
											"end": 5385,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4529,
											"end": 5385,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4529,
											"end": 5385,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5391,
											"end": 5698,
											"name": "tag",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 5391,
											"end": 5698,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5530,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5564,
											"end": 5567,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 5553,
											"end": 5562,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5549,
											"end": 5568,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5541,
											"end": 5568,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5541,
											"end": 5568,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5578,
											"end": 5691,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "428"
										},
										{
											"begin": 5688,
											"end": 5689,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5677,
											"end": 5686,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5673,
											"end": 5690,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5664,
											"end": 5670,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5578,
											"end": 5691,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 5578,
											"end": 5691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5578,
											"end": 5691,
											"name": "tag",
											"source": 7,
											"value": "428"
										},
										{
											"begin": 5578,
											"end": 5691,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5391,
											"end": 5698,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5391,
											"end": 5698,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5391,
											"end": 5698,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5391,
											"end": 5698,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5391,
											"end": 5698,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5704,
											"end": 5873,
											"name": "tag",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 5704,
											"end": 5873,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5788,
											"end": 5799,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5822,
											"end": 5828,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5817,
											"end": 5820,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5810,
											"end": 5829,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5862,
											"end": 5866,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5857,
											"end": 5860,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5853,
											"end": 5867,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5838,
											"end": 5867,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5838,
											"end": 5867,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5704,
											"end": 5873,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5704,
											"end": 5873,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5704,
											"end": 5873,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5704,
											"end": 5873,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5704,
											"end": 5873,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5879,
											"end": 6043,
											"name": "tag",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 5879,
											"end": 6043,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6019,
											"end": 6035,
											"name": "PUSH",
											"source": 7,
											"value": "4E6F20616374697665206C6F616E000000000000000000000000000000000000"
										},
										{
											"begin": 6015,
											"end": 6016,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6007,
											"end": 6013,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6003,
											"end": 6017,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5996,
											"end": 6036,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5879,
											"end": 6043,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5879,
											"end": 6043,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6049,
											"end": 6415,
											"name": "tag",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 6049,
											"end": 6415,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6191,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6212,
											"end": 6279,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "432"
										},
										{
											"begin": 6276,
											"end": 6278,
											"name": "PUSH",
											"source": 7,
											"value": "E"
										},
										{
											"begin": 6271,
											"end": 6274,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6212,
											"end": 6279,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 6212,
											"end": 6279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6212,
											"end": 6279,
											"name": "tag",
											"source": 7,
											"value": "432"
										},
										{
											"begin": 6212,
											"end": 6279,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6205,
											"end": 6279,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6205,
											"end": 6279,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6288,
											"end": 6381,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "433"
										},
										{
											"begin": 6377,
											"end": 6380,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6288,
											"end": 6381,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 6288,
											"end": 6381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6288,
											"end": 6381,
											"name": "tag",
											"source": 7,
											"value": "433"
										},
										{
											"begin": 6288,
											"end": 6381,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6406,
											"end": 6408,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6401,
											"end": 6404,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6390,
											"end": 6409,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6390,
											"end": 6409,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6049,
											"end": 6415,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6049,
											"end": 6415,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6049,
											"end": 6415,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6049,
											"end": 6415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6421,
											"end": 6840,
											"name": "tag",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 6421,
											"end": 6840,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6587,
											"end": 6591,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6625,
											"end": 6627,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6614,
											"end": 6623,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6610,
											"end": 6628,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6602,
											"end": 6628,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6602,
											"end": 6628,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6674,
											"end": 6683,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6668,
											"end": 6672,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6664,
											"end": 6684,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6660,
											"end": 6661,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6649,
											"end": 6658,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6645,
											"end": 6662,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6638,
											"end": 6685,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6702,
											"end": 6833,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "435"
										},
										{
											"begin": 6828,
											"end": 6832,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6702,
											"end": 6833,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 6702,
											"end": 6833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6702,
											"end": 6833,
											"name": "tag",
											"source": 7,
											"value": "435"
										},
										{
											"begin": 6702,
											"end": 6833,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6694,
											"end": 6833,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6694,
											"end": 6833,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6421,
											"end": 6840,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6421,
											"end": 6840,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6421,
											"end": 6840,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6421,
											"end": 6840,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6846,
											"end": 7026,
											"name": "tag",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 6846,
											"end": 7026,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6894,
											"end": 6971,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6891,
											"end": 6892,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6884,
											"end": 6972,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6991,
											"end": 6995,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 6988,
											"end": 6989,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6981,
											"end": 6996,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7015,
											"end": 7019,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 7012,
											"end": 7013,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7005,
											"end": 7020,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7032,
											"end": 7226,
											"name": "tag",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 7032,
											"end": 7226,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7072,
											"end": 7076,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7092,
											"end": 7112,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "438"
										},
										{
											"begin": 7110,
											"end": 7111,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7092,
											"end": 7112,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 7092,
											"end": 7112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7092,
											"end": 7112,
											"name": "tag",
											"source": 7,
											"value": "438"
										},
										{
											"begin": 7092,
											"end": 7112,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7126,
											"end": 7146,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "439"
										},
										{
											"begin": 7144,
											"end": 7145,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7126,
											"end": 7146,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 7126,
											"end": 7146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7126,
											"end": 7146,
											"name": "tag",
											"source": 7,
											"value": "439"
										},
										{
											"begin": 7126,
											"end": 7146,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7121,
											"end": 7146,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7121,
											"end": 7146,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7170,
											"end": 7171,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7167,
											"end": 7168,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7163,
											"end": 7172,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7155,
											"end": 7172,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7155,
											"end": 7172,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7194,
											"end": 7195,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7188,
											"end": 7192,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7185,
											"end": 7196,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 7182,
											"end": 7219,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7182,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "440"
										},
										{
											"begin": 7182,
											"end": 7219,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7199,
											"end": 7217,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "441"
										},
										{
											"begin": 7199,
											"end": 7217,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 7199,
											"end": 7217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7199,
											"end": 7217,
											"name": "tag",
											"source": 7,
											"value": "441"
										},
										{
											"begin": 7199,
											"end": 7217,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7182,
											"end": 7219,
											"name": "tag",
											"source": 7,
											"value": "440"
										},
										{
											"begin": 7182,
											"end": 7219,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7032,
											"end": 7226,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7032,
											"end": 7226,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7032,
											"end": 7226,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7032,
											"end": 7226,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7032,
											"end": 7226,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7232,
											"end": 7412,
											"name": "tag",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 7232,
											"end": 7412,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7280,
											"end": 7357,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7277,
											"end": 7278,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7270,
											"end": 7358,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7377,
											"end": 7381,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 7374,
											"end": 7375,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7367,
											"end": 7382,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7401,
											"end": 7405,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 7398,
											"end": 7399,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7391,
											"end": 7406,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7418,
											"end": 7603,
											"name": "tag",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 7418,
											"end": 7603,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7458,
											"end": 7459,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7475,
											"end": 7495,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "444"
										},
										{
											"begin": 7493,
											"end": 7494,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7475,
											"end": 7495,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 7475,
											"end": 7495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7475,
											"end": 7495,
											"name": "tag",
											"source": 7,
											"value": "444"
										},
										{
											"begin": 7475,
											"end": 7495,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7470,
											"end": 7495,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7470,
											"end": 7495,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7509,
											"end": 7529,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "445"
										},
										{
											"begin": 7527,
											"end": 7528,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7509,
											"end": 7529,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 7509,
											"end": 7529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7509,
											"end": 7529,
											"name": "tag",
											"source": 7,
											"value": "445"
										},
										{
											"begin": 7509,
											"end": 7529,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7504,
											"end": 7529,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7504,
											"end": 7529,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7548,
											"end": 7549,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7538,
											"end": 7573,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "446"
										},
										{
											"begin": 7538,
											"end": 7573,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7553,
											"end": 7571,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "447"
										},
										{
											"begin": 7553,
											"end": 7571,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 7553,
											"end": 7571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7553,
											"end": 7571,
											"name": "tag",
											"source": 7,
											"value": "447"
										},
										{
											"begin": 7553,
											"end": 7571,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7538,
											"end": 7573,
											"name": "tag",
											"source": 7,
											"value": "446"
										},
										{
											"begin": 7538,
											"end": 7573,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7595,
											"end": 7596,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7592,
											"end": 7593,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7588,
											"end": 7597,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 7583,
											"end": 7597,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7583,
											"end": 7597,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7418,
											"end": 7603,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7418,
											"end": 7603,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7418,
											"end": 7603,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7418,
											"end": 7603,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7418,
											"end": 7603,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7609,
											"end": 7789,
											"name": "tag",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 7609,
											"end": 7789,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7749,
											"end": 7781,
											"name": "PUSH",
											"source": 7,
											"value": "4C6F616E206475726174696F6E20657863656564656420333020646179730000"
										},
										{
											"begin": 7745,
											"end": 7746,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7737,
											"end": 7743,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7733,
											"end": 7747,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7726,
											"end": 7782,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7609,
											"end": 7789,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7609,
											"end": 7789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7795,
											"end": 8161,
											"name": "tag",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 7795,
											"end": 8161,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7937,
											"end": 7940,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7958,
											"end": 8025,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "450"
										},
										{
											"begin": 8022,
											"end": 8024,
											"name": "PUSH",
											"source": 7,
											"value": "1E"
										},
										{
											"begin": 8017,
											"end": 8020,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7958,
											"end": 8025,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 7958,
											"end": 8025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7958,
											"end": 8025,
											"name": "tag",
											"source": 7,
											"value": "450"
										},
										{
											"begin": 7958,
											"end": 8025,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7951,
											"end": 8025,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7951,
											"end": 8025,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8034,
											"end": 8127,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "451"
										},
										{
											"begin": 8123,
											"end": 8126,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8034,
											"end": 8127,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 8034,
											"end": 8127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8034,
											"end": 8127,
											"name": "tag",
											"source": 7,
											"value": "451"
										},
										{
											"begin": 8034,
											"end": 8127,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8152,
											"end": 8154,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8147,
											"end": 8150,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8143,
											"end": 8155,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8136,
											"end": 8155,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8136,
											"end": 8155,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7795,
											"end": 8161,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7795,
											"end": 8161,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7795,
											"end": 8161,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7795,
											"end": 8161,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8167,
											"end": 8586,
											"name": "tag",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 8167,
											"end": 8586,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8333,
											"end": 8337,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8371,
											"end": 8373,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8360,
											"end": 8369,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8356,
											"end": 8374,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8348,
											"end": 8374,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8348,
											"end": 8374,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8420,
											"end": 8429,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8414,
											"end": 8418,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8410,
											"end": 8430,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8406,
											"end": 8407,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8395,
											"end": 8404,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8391,
											"end": 8408,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8384,
											"end": 8431,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8448,
											"end": 8579,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "453"
										},
										{
											"begin": 8574,
											"end": 8578,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8448,
											"end": 8579,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 8448,
											"end": 8579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8448,
											"end": 8579,
											"name": "tag",
											"source": 7,
											"value": "453"
										},
										{
											"begin": 8448,
											"end": 8579,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8440,
											"end": 8579,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8440,
											"end": 8579,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8167,
											"end": 8586,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8167,
											"end": 8586,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8167,
											"end": 8586,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8167,
											"end": 8586,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8592,
											"end": 9002,
											"name": "tag",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 8592,
											"end": 9002,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8632,
											"end": 8639,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8655,
											"end": 8675,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "455"
										},
										{
											"begin": 8673,
											"end": 8674,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8655,
											"end": 8675,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 8655,
											"end": 8675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8655,
											"end": 8675,
											"name": "tag",
											"source": 7,
											"value": "455"
										},
										{
											"begin": 8655,
											"end": 8675,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8650,
											"end": 8675,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8650,
											"end": 8675,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8689,
											"end": 8709,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "456"
										},
										{
											"begin": 8707,
											"end": 8708,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8689,
											"end": 8709,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 8689,
											"end": 8709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8689,
											"end": 8709,
											"name": "tag",
											"source": 7,
											"value": "456"
										},
										{
											"begin": 8689,
											"end": 8709,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8684,
											"end": 8709,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8684,
											"end": 8709,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8744,
											"end": 8745,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8741,
											"end": 8742,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8737,
											"end": 8746,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 8766,
											"end": 8796,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "457"
										},
										{
											"begin": 8784,
											"end": 8795,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8766,
											"end": 8796,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 8766,
											"end": 8796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8766,
											"end": 8796,
											"name": "tag",
											"source": 7,
											"value": "457"
										},
										{
											"begin": 8766,
											"end": 8796,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8755,
											"end": 8796,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8755,
											"end": 8796,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8945,
											"end": 8946,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8936,
											"end": 8943,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8932,
											"end": 8947,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 8929,
											"end": 8930,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8926,
											"end": 8948,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 8906,
											"end": 8907,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8899,
											"end": 8908,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8879,
											"end": 8962,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 8856,
											"end": 8995,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "458"
										},
										{
											"begin": 8856,
											"end": 8995,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8975,
											"end": 8993,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "459"
										},
										{
											"begin": 8975,
											"end": 8993,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 8975,
											"end": 8993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8975,
											"end": 8993,
											"name": "tag",
											"source": 7,
											"value": "459"
										},
										{
											"begin": 8975,
											"end": 8993,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8856,
											"end": 8995,
											"name": "tag",
											"source": 7,
											"value": "458"
										},
										{
											"begin": 8856,
											"end": 8995,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8640,
											"end": 9002,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8592,
											"end": 9002,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8592,
											"end": 9002,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8592,
											"end": 9002,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8592,
											"end": 9002,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8592,
											"end": 9002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9008,
											"end": 9199,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 9008,
											"end": 9199,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9048,
											"end": 9051,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9067,
											"end": 9087,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "461"
										},
										{
											"begin": 9085,
											"end": 9086,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9067,
											"end": 9087,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 9067,
											"end": 9087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9067,
											"end": 9087,
											"name": "tag",
											"source": 7,
											"value": "461"
										},
										{
											"begin": 9067,
											"end": 9087,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9062,
											"end": 9087,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9062,
											"end": 9087,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9101,
											"end": 9121,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "462"
										},
										{
											"begin": 9119,
											"end": 9120,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9101,
											"end": 9121,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 9101,
											"end": 9121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9101,
											"end": 9121,
											"name": "tag",
											"source": 7,
											"value": "462"
										},
										{
											"begin": 9101,
											"end": 9121,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9096,
											"end": 9121,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9096,
											"end": 9121,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9144,
											"end": 9145,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9141,
											"end": 9142,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9137,
											"end": 9146,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9130,
											"end": 9146,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9130,
											"end": 9146,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9165,
											"end": 9168,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9162,
											"end": 9163,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9159,
											"end": 9169,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 9156,
											"end": 9192,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9156,
											"end": 9192,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "463"
										},
										{
											"begin": 9156,
											"end": 9192,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9172,
											"end": 9190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "464"
										},
										{
											"begin": 9172,
											"end": 9190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 9172,
											"end": 9190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9172,
											"end": 9190,
											"name": "tag",
											"source": 7,
											"value": "464"
										},
										{
											"begin": 9172,
											"end": 9190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9156,
											"end": 9192,
											"name": "tag",
											"source": 7,
											"value": "463"
										},
										{
											"begin": 9156,
											"end": 9192,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9008,
											"end": 9199,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9008,
											"end": 9199,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9008,
											"end": 9199,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9008,
											"end": 9199,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9008,
											"end": 9199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9205,
											"end": 9537,
											"name": "tag",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 9205,
											"end": 9537,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9326,
											"end": 9330,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9364,
											"end": 9366,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9353,
											"end": 9362,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9349,
											"end": 9367,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9341,
											"end": 9367,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9341,
											"end": 9367,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9377,
											"end": 9448,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "466"
										},
										{
											"begin": 9445,
											"end": 9446,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9434,
											"end": 9443,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9430,
											"end": 9447,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9421,
											"end": 9427,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 9377,
											"end": 9448,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 9377,
											"end": 9448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9377,
											"end": 9448,
											"name": "tag",
											"source": 7,
											"value": "466"
										},
										{
											"begin": 9377,
											"end": 9448,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9458,
											"end": 9530,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "467"
										},
										{
											"begin": 9526,
											"end": 9528,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9515,
											"end": 9524,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9511,
											"end": 9529,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9502,
											"end": 9508,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9458,
											"end": 9530,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 9458,
											"end": 9530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9458,
											"end": 9530,
											"name": "tag",
											"source": 7,
											"value": "467"
										},
										{
											"begin": 9458,
											"end": 9530,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9205,
											"end": 9537,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 9205,
											"end": 9537,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9205,
											"end": 9537,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9205,
											"end": 9537,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9205,
											"end": 9537,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9205,
											"end": 9537,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9543,
											"end": 9722,
											"name": "tag",
											"source": 7,
											"value": "342"
										},
										{
											"begin": 9543,
											"end": 9722,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9683,
											"end": 9714,
											"name": "PUSH",
											"source": 7,
											"value": "416D6F756E74206D7573742062652067726561746572207468616E2030000000"
										},
										{
											"begin": 9679,
											"end": 9680,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9671,
											"end": 9677,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9667,
											"end": 9681,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9660,
											"end": 9715,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9543,
											"end": 9722,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9543,
											"end": 9722,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9728,
											"end": 10094,
											"name": "tag",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 9728,
											"end": 10094,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9870,
											"end": 9873,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9891,
											"end": 9958,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "470"
										},
										{
											"begin": 9955,
											"end": 9957,
											"name": "PUSH",
											"source": 7,
											"value": "1D"
										},
										{
											"begin": 9950,
											"end": 9953,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9891,
											"end": 9958,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 9891,
											"end": 9958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9891,
											"end": 9958,
											"name": "tag",
											"source": 7,
											"value": "470"
										},
										{
											"begin": 9891,
											"end": 9958,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9884,
											"end": 9958,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9884,
											"end": 9958,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9967,
											"end": 10060,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "471"
										},
										{
											"begin": 10056,
											"end": 10059,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9967,
											"end": 10060,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "342"
										},
										{
											"begin": 9967,
											"end": 10060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9967,
											"end": 10060,
											"name": "tag",
											"source": 7,
											"value": "471"
										},
										{
											"begin": 9967,
											"end": 10060,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10085,
											"end": 10087,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10080,
											"end": 10083,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10076,
											"end": 10088,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10069,
											"end": 10088,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10069,
											"end": 10088,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9728,
											"end": 10094,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9728,
											"end": 10094,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9728,
											"end": 10094,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9728,
											"end": 10094,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10100,
											"end": 10519,
											"name": "tag",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 10100,
											"end": 10519,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10266,
											"end": 10270,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10304,
											"end": 10306,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10293,
											"end": 10302,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10289,
											"end": 10307,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10281,
											"end": 10307,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10281,
											"end": 10307,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10353,
											"end": 10362,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10347,
											"end": 10351,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10343,
											"end": 10363,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10339,
											"end": 10340,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10328,
											"end": 10337,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10324,
											"end": 10341,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10317,
											"end": 10364,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10381,
											"end": 10512,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "473"
										},
										{
											"begin": 10507,
											"end": 10511,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10381,
											"end": 10512,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 10381,
											"end": 10512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10381,
											"end": 10512,
											"name": "tag",
											"source": 7,
											"value": "473"
										},
										{
											"begin": 10381,
											"end": 10512,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10373,
											"end": 10512,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10373,
											"end": 10512,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10100,
											"end": 10519,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10100,
											"end": 10519,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10100,
											"end": 10519,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10100,
											"end": 10519,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10525,
											"end": 10698,
											"name": "tag",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 10525,
											"end": 10698,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10665,
											"end": 10690,
											"name": "PUSH",
											"source": 7,
											"value": "496E73756666696369656E7420636F6C6C61746572616C000000000000000000"
										},
										{
											"begin": 10661,
											"end": 10662,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10653,
											"end": 10659,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10649,
											"end": 10663,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10642,
											"end": 10691,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10525,
											"end": 10698,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10525,
											"end": 10698,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10704,
											"end": 11070,
											"name": "tag",
											"source": 7,
											"value": "345"
										},
										{
											"begin": 10704,
											"end": 11070,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10846,
											"end": 10849,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10867,
											"end": 10934,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "476"
										},
										{
											"begin": 10931,
											"end": 10933,
											"name": "PUSH",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 10926,
											"end": 10929,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10867,
											"end": 10934,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 10867,
											"end": 10934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10867,
											"end": 10934,
											"name": "tag",
											"source": 7,
											"value": "476"
										},
										{
											"begin": 10867,
											"end": 10934,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10860,
											"end": 10934,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10860,
											"end": 10934,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10943,
											"end": 11036,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "477"
										},
										{
											"begin": 11032,
											"end": 11035,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10943,
											"end": 11036,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 10943,
											"end": 11036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10943,
											"end": 11036,
											"name": "tag",
											"source": 7,
											"value": "477"
										},
										{
											"begin": 10943,
											"end": 11036,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11061,
											"end": 11063,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11056,
											"end": 11059,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11052,
											"end": 11064,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11045,
											"end": 11064,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11045,
											"end": 11064,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10704,
											"end": 11070,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10704,
											"end": 11070,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10704,
											"end": 11070,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10704,
											"end": 11070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11076,
											"end": 11495,
											"name": "tag",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 11076,
											"end": 11495,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11242,
											"end": 11246,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11280,
											"end": 11282,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11269,
											"end": 11278,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11265,
											"end": 11283,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11257,
											"end": 11283,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11257,
											"end": 11283,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11329,
											"end": 11338,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11323,
											"end": 11327,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11319,
											"end": 11339,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 11315,
											"end": 11316,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11304,
											"end": 11313,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11300,
											"end": 11317,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11293,
											"end": 11340,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11357,
											"end": 11488,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "479"
										},
										{
											"begin": 11483,
											"end": 11487,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11357,
											"end": 11488,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "345"
										},
										{
											"begin": 11357,
											"end": 11488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11357,
											"end": 11488,
											"name": "tag",
											"source": 7,
											"value": "479"
										},
										{
											"begin": 11357,
											"end": 11488,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11349,
											"end": 11488,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11349,
											"end": 11488,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11076,
											"end": 11495,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11076,
											"end": 11495,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11076,
											"end": 11495,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11076,
											"end": 11495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11501,
											"end": 11728,
											"name": "tag",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 11501,
											"end": 11728,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11641,
											"end": 11675,
											"name": "PUSH",
											"source": 7,
											"value": "5769746864726177616C20776F756C6420756E646572636F6C6C61746572616C"
										},
										{
											"begin": 11637,
											"end": 11638,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11629,
											"end": 11635,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11625,
											"end": 11639,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11618,
											"end": 11676,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11710,
											"end": 11720,
											"name": "PUSH",
											"source": 7,
											"value": "697A65206C6F616E000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11705,
											"end": 11707,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11697,
											"end": 11703,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11693,
											"end": 11708,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11686,
											"end": 11721,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11501,
											"end": 11728,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11501,
											"end": 11728,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11734,
											"end": 12100,
											"name": "tag",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 11734,
											"end": 12100,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11876,
											"end": 11879,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11897,
											"end": 11964,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "482"
										},
										{
											"begin": 11961,
											"end": 11963,
											"name": "PUSH",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 11956,
											"end": 11959,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11897,
											"end": 11964,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 11897,
											"end": 11964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11897,
											"end": 11964,
											"name": "tag",
											"source": 7,
											"value": "482"
										},
										{
											"begin": 11897,
											"end": 11964,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11890,
											"end": 11964,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11890,
											"end": 11964,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11973,
											"end": 12066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "483"
										},
										{
											"begin": 12062,
											"end": 12065,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11973,
											"end": 12066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 11973,
											"end": 12066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11973,
											"end": 12066,
											"name": "tag",
											"source": 7,
											"value": "483"
										},
										{
											"begin": 11973,
											"end": 12066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12091,
											"end": 12093,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 12086,
											"end": 12089,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12082,
											"end": 12094,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12075,
											"end": 12094,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12075,
											"end": 12094,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11734,
											"end": 12100,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11734,
											"end": 12100,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11734,
											"end": 12100,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11734,
											"end": 12100,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12106,
											"end": 12525,
											"name": "tag",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 12106,
											"end": 12525,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12272,
											"end": 12276,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12310,
											"end": 12312,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12299,
											"end": 12308,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12295,
											"end": 12313,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12287,
											"end": 12313,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12287,
											"end": 12313,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12359,
											"end": 12368,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12353,
											"end": 12357,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12349,
											"end": 12369,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 12345,
											"end": 12346,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12334,
											"end": 12343,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12330,
											"end": 12347,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12323,
											"end": 12370,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12387,
											"end": 12518,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "485"
										},
										{
											"begin": 12513,
											"end": 12517,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12387,
											"end": 12518,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 12387,
											"end": 12518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12387,
											"end": 12518,
											"name": "tag",
											"source": 7,
											"value": "485"
										},
										{
											"begin": 12387,
											"end": 12518,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12379,
											"end": 12518,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12379,
											"end": 12518,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12106,
											"end": 12525,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12106,
											"end": 12525,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12106,
											"end": 12525,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12106,
											"end": 12525,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12531,
											"end": 12701,
											"name": "tag",
											"source": 7,
											"value": "348"
										},
										{
											"begin": 12531,
											"end": 12701,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12671,
											"end": 12693,
											"name": "PUSH",
											"source": 7,
											"value": "496E73756666696369656E742062616C616E6365000000000000000000000000"
										},
										{
											"begin": 12667,
											"end": 12668,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12659,
											"end": 12665,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12655,
											"end": 12669,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12648,
											"end": 12694,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12531,
											"end": 12701,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12531,
											"end": 12701,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12707,
											"end": 13073,
											"name": "tag",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 12707,
											"end": 13073,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12849,
											"end": 12852,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12870,
											"end": 12937,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "488"
										},
										{
											"begin": 12934,
											"end": 12936,
											"name": "PUSH",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 12929,
											"end": 12932,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12870,
											"end": 12937,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 12870,
											"end": 12937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12870,
											"end": 12937,
											"name": "tag",
											"source": 7,
											"value": "488"
										},
										{
											"begin": 12870,
											"end": 12937,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12863,
											"end": 12937,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12863,
											"end": 12937,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12946,
											"end": 13039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "489"
										},
										{
											"begin": 13035,
											"end": 13038,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12946,
											"end": 13039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "348"
										},
										{
											"begin": 12946,
											"end": 13039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12946,
											"end": 13039,
											"name": "tag",
											"source": 7,
											"value": "489"
										},
										{
											"begin": 12946,
											"end": 13039,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13064,
											"end": 13066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13059,
											"end": 13062,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13055,
											"end": 13067,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13048,
											"end": 13067,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13048,
											"end": 13067,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12707,
											"end": 13073,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12707,
											"end": 13073,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12707,
											"end": 13073,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12707,
											"end": 13073,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13079,
											"end": 13498,
											"name": "tag",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 13079,
											"end": 13498,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13245,
											"end": 13249,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13283,
											"end": 13285,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13272,
											"end": 13281,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13268,
											"end": 13286,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13260,
											"end": 13286,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13260,
											"end": 13286,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13332,
											"end": 13341,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13326,
											"end": 13330,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13322,
											"end": 13342,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 13318,
											"end": 13319,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13307,
											"end": 13316,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13303,
											"end": 13320,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13296,
											"end": 13343,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13360,
											"end": 13491,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "491"
										},
										{
											"begin": 13486,
											"end": 13490,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13360,
											"end": 13491,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 13360,
											"end": 13491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13360,
											"end": 13491,
											"name": "tag",
											"source": 7,
											"value": "491"
										},
										{
											"begin": 13360,
											"end": 13491,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13352,
											"end": 13491,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13352,
											"end": 13491,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13079,
											"end": 13498,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13079,
											"end": 13498,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13079,
											"end": 13498,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13079,
											"end": 13498,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13504,
											"end": 13725,
											"name": "tag",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 13504,
											"end": 13725,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13644,
											"end": 13678,
											"name": "PUSH",
											"source": 7,
											"value": "4578697374696E67206C6F616E206D7573742062652072657061696420666972"
										},
										{
											"begin": 13640,
											"end": 13641,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13632,
											"end": 13638,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13628,
											"end": 13642,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13621,
											"end": 13679,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13713,
											"end": 13717,
											"name": "PUSH",
											"source": 7,
											"value": "7374000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13708,
											"end": 13710,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13700,
											"end": 13706,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13696,
											"end": 13711,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13689,
											"end": 13718,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13504,
											"end": 13725,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13504,
											"end": 13725,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13731,
											"end": 14097,
											"name": "tag",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 13731,
											"end": 14097,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13873,
											"end": 13876,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13894,
											"end": 13961,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "494"
										},
										{
											"begin": 13958,
											"end": 13960,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 13953,
											"end": 13956,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13894,
											"end": 13961,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 13894,
											"end": 13961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13894,
											"end": 13961,
											"name": "tag",
											"source": 7,
											"value": "494"
										},
										{
											"begin": 13894,
											"end": 13961,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13887,
											"end": 13961,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13887,
											"end": 13961,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13970,
											"end": 14063,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "495"
										},
										{
											"begin": 14059,
											"end": 14062,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13970,
											"end": 14063,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 13970,
											"end": 14063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13970,
											"end": 14063,
											"name": "tag",
											"source": 7,
											"value": "495"
										},
										{
											"begin": 13970,
											"end": 14063,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14088,
											"end": 14090,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 14083,
											"end": 14086,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14079,
											"end": 14091,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14072,
											"end": 14091,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14072,
											"end": 14091,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13731,
											"end": 14097,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13731,
											"end": 14097,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13731,
											"end": 14097,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13731,
											"end": 14097,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14103,
											"end": 14522,
											"name": "tag",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 14103,
											"end": 14522,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14269,
											"end": 14273,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14307,
											"end": 14309,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 14296,
											"end": 14305,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14292,
											"end": 14310,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14284,
											"end": 14310,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14284,
											"end": 14310,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14356,
											"end": 14365,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14350,
											"end": 14354,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14346,
											"end": 14366,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 14342,
											"end": 14343,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14331,
											"end": 14340,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14327,
											"end": 14344,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14320,
											"end": 14367,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14384,
											"end": 14515,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "497"
										},
										{
											"begin": 14510,
											"end": 14514,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14384,
											"end": 14515,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 14384,
											"end": 14515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14384,
											"end": 14515,
											"name": "tag",
											"source": 7,
											"value": "497"
										},
										{
											"begin": 14384,
											"end": 14515,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14376,
											"end": 14515,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14376,
											"end": 14515,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14103,
											"end": 14522,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14103,
											"end": 14522,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14103,
											"end": 14522,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14103,
											"end": 14522,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14528,
											"end": 14705,
											"name": "tag",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 14528,
											"end": 14705,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14668,
											"end": 14697,
											"name": "PUSH",
											"source": 7,
											"value": "426F72726F7720616D6F756E742065786365656473206C696D69740000000000"
										},
										{
											"begin": 14664,
											"end": 14665,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14656,
											"end": 14662,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14652,
											"end": 14666,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14645,
											"end": 14698,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14528,
											"end": 14705,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14528,
											"end": 14705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14711,
											"end": 15077,
											"name": "tag",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 14711,
											"end": 15077,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14853,
											"end": 14856,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14874,
											"end": 14941,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "500"
										},
										{
											"begin": 14938,
											"end": 14940,
											"name": "PUSH",
											"source": 7,
											"value": "1B"
										},
										{
											"begin": 14933,
											"end": 14936,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14874,
											"end": 14941,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 14874,
											"end": 14941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14874,
											"end": 14941,
											"name": "tag",
											"source": 7,
											"value": "500"
										},
										{
											"begin": 14874,
											"end": 14941,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14867,
											"end": 14941,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14867,
											"end": 14941,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14950,
											"end": 15043,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "501"
										},
										{
											"begin": 15039,
											"end": 15042,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14950,
											"end": 15043,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 14950,
											"end": 15043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14950,
											"end": 15043,
											"name": "tag",
											"source": 7,
											"value": "501"
										},
										{
											"begin": 14950,
											"end": 15043,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15068,
											"end": 15070,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 15063,
											"end": 15066,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15059,
											"end": 15071,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15052,
											"end": 15071,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15052,
											"end": 15071,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14711,
											"end": 15077,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14711,
											"end": 15077,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14711,
											"end": 15077,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14711,
											"end": 15077,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15083,
											"end": 15502,
											"name": "tag",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 15083,
											"end": 15502,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15249,
											"end": 15253,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15287,
											"end": 15289,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 15276,
											"end": 15285,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15272,
											"end": 15290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15264,
											"end": 15290,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15264,
											"end": 15290,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15336,
											"end": 15345,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15330,
											"end": 15334,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15326,
											"end": 15346,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 15322,
											"end": 15323,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15311,
											"end": 15320,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15307,
											"end": 15324,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15300,
											"end": 15347,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15364,
											"end": 15495,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "503"
										},
										{
											"begin": 15490,
											"end": 15494,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15364,
											"end": 15495,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 15364,
											"end": 15495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15364,
											"end": 15495,
											"name": "tag",
											"source": 7,
											"value": "503"
										},
										{
											"begin": 15364,
											"end": 15495,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15356,
											"end": 15495,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15356,
											"end": 15495,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15083,
											"end": 15502,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15083,
											"end": 15502,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15083,
											"end": 15502,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15083,
											"end": 15502,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15508,
											"end": 15651,
											"name": "tag",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 15508,
											"end": 15651,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15565,
											"end": 15570,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15596,
											"end": 15602,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15590,
											"end": 15603,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 15581,
											"end": 15603,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15581,
											"end": 15603,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15612,
											"end": 15645,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "505"
										},
										{
											"begin": 15639,
											"end": 15644,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15612,
											"end": 15645,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 15612,
											"end": 15645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15612,
											"end": 15645,
											"name": "tag",
											"source": 7,
											"value": "505"
										},
										{
											"begin": 15612,
											"end": 15645,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15508,
											"end": 15651,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 15508,
											"end": 15651,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15508,
											"end": 15651,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15508,
											"end": 15651,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15508,
											"end": 15651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15657,
											"end": 16008,
											"name": "tag",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 15657,
											"end": 16008,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15727,
											"end": 15733,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15776,
											"end": 15778,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 15764,
											"end": 15773,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15755,
											"end": 15762,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 15751,
											"end": 15774,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 15747,
											"end": 15779,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 15744,
											"end": 15863,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 15744,
											"end": 15863,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "507"
										},
										{
											"begin": 15744,
											"end": 15863,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 15782,
											"end": 15861,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "508"
										},
										{
											"begin": 15782,
											"end": 15861,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 15782,
											"end": 15861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15782,
											"end": 15861,
											"name": "tag",
											"source": 7,
											"value": "508"
										},
										{
											"begin": 15782,
											"end": 15861,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15744,
											"end": 15863,
											"name": "tag",
											"source": 7,
											"value": "507"
										},
										{
											"begin": 15744,
											"end": 15863,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15902,
											"end": 15903,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15927,
											"end": 15991,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "509"
										},
										{
											"begin": 15983,
											"end": 15990,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 15974,
											"end": 15980,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15963,
											"end": 15972,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 15959,
											"end": 15981,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15927,
											"end": 15991,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 15927,
											"end": 15991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15927,
											"end": 15991,
											"name": "tag",
											"source": 7,
											"value": "509"
										},
										{
											"begin": 15927,
											"end": 15991,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15917,
											"end": 15991,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15917,
											"end": 15991,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15873,
											"end": 16001,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15657,
											"end": 16008,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 15657,
											"end": 16008,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15657,
											"end": 16008,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15657,
											"end": 16008,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15657,
											"end": 16008,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16014,
											"end": 16192,
											"name": "tag",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 16014,
											"end": 16192,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16154,
											"end": 16184,
											"name": "PUSH",
											"source": 7,
											"value": "496E73756666696369656E742042544320696E20636F6E747261637400000000"
										},
										{
											"begin": 16150,
											"end": 16151,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16142,
											"end": 16148,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16138,
											"end": 16152,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16131,
											"end": 16185,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16014,
											"end": 16192,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16014,
											"end": 16192,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16198,
											"end": 16564,
											"name": "tag",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 16198,
											"end": 16564,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16340,
											"end": 16343,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16361,
											"end": 16428,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "512"
										},
										{
											"begin": 16425,
											"end": 16427,
											"name": "PUSH",
											"source": 7,
											"value": "1C"
										},
										{
											"begin": 16420,
											"end": 16423,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16361,
											"end": 16428,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 16361,
											"end": 16428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16361,
											"end": 16428,
											"name": "tag",
											"source": 7,
											"value": "512"
										},
										{
											"begin": 16361,
											"end": 16428,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16354,
											"end": 16428,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16354,
											"end": 16428,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16437,
											"end": 16530,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "513"
										},
										{
											"begin": 16526,
											"end": 16529,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16437,
											"end": 16530,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 16437,
											"end": 16530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16437,
											"end": 16530,
											"name": "tag",
											"source": 7,
											"value": "513"
										},
										{
											"begin": 16437,
											"end": 16530,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16555,
											"end": 16557,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 16550,
											"end": 16553,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16546,
											"end": 16558,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16539,
											"end": 16558,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16539,
											"end": 16558,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16198,
											"end": 16564,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16198,
											"end": 16564,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16198,
											"end": 16564,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16198,
											"end": 16564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16570,
											"end": 16989,
											"name": "tag",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 16570,
											"end": 16989,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16736,
											"end": 16740,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16774,
											"end": 16776,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 16763,
											"end": 16772,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16759,
											"end": 16777,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16751,
											"end": 16777,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16751,
											"end": 16777,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16823,
											"end": 16832,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16817,
											"end": 16821,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16813,
											"end": 16833,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 16809,
											"end": 16810,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16798,
											"end": 16807,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16794,
											"end": 16811,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16787,
											"end": 16834,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16851,
											"end": 16982,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "515"
										},
										{
											"begin": 16977,
											"end": 16981,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16851,
											"end": 16982,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 16851,
											"end": 16982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16851,
											"end": 16982,
											"name": "tag",
											"source": 7,
											"value": "515"
										},
										{
											"begin": 16851,
											"end": 16982,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16843,
											"end": 16982,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16843,
											"end": 16982,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16570,
											"end": 16989,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16570,
											"end": 16989,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16570,
											"end": 16989,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16570,
											"end": 16989,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16995,
											"end": 17437,
											"name": "tag",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 16995,
											"end": 17437,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17144,
											"end": 17148,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17182,
											"end": 17184,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 17171,
											"end": 17180,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17167,
											"end": 17185,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17159,
											"end": 17185,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17159,
											"end": 17185,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17195,
											"end": 17266,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "517"
										},
										{
											"begin": 17263,
											"end": 17264,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17252,
											"end": 17261,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17248,
											"end": 17265,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17239,
											"end": 17245,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 17195,
											"end": 17266,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 17195,
											"end": 17266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17195,
											"end": 17266,
											"name": "tag",
											"source": 7,
											"value": "517"
										},
										{
											"begin": 17195,
											"end": 17266,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17276,
											"end": 17348,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "518"
										},
										{
											"begin": 17344,
											"end": 17346,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 17333,
											"end": 17342,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17329,
											"end": 17347,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17320,
											"end": 17326,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 17276,
											"end": 17348,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 17276,
											"end": 17348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17276,
											"end": 17348,
											"name": "tag",
											"source": 7,
											"value": "518"
										},
										{
											"begin": 17276,
											"end": 17348,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17358,
											"end": 17430,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "519"
										},
										{
											"begin": 17426,
											"end": 17428,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 17415,
											"end": 17424,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17411,
											"end": 17429,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17402,
											"end": 17408,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 17358,
											"end": 17430,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 17358,
											"end": 17430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17358,
											"end": 17430,
											"name": "tag",
											"source": 7,
											"value": "519"
										},
										{
											"begin": 17358,
											"end": 17430,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16995,
											"end": 17437,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 16995,
											"end": 17437,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 16995,
											"end": 17437,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16995,
											"end": 17437,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16995,
											"end": 17437,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16995,
											"end": 17437,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16995,
											"end": 17437,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17443,
											"end": 17775,
											"name": "tag",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 17443,
											"end": 17775,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17564,
											"end": 17568,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17602,
											"end": 17604,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 17591,
											"end": 17600,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17587,
											"end": 17605,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17579,
											"end": 17605,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17579,
											"end": 17605,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17615,
											"end": 17686,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "521"
										},
										{
											"begin": 17683,
											"end": 17684,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17672,
											"end": 17681,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17668,
											"end": 17685,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17659,
											"end": 17665,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 17615,
											"end": 17686,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 17615,
											"end": 17686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17615,
											"end": 17686,
											"name": "tag",
											"source": 7,
											"value": "521"
										},
										{
											"begin": 17615,
											"end": 17686,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17696,
											"end": 17768,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "522"
										},
										{
											"begin": 17764,
											"end": 17766,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 17753,
											"end": 17762,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17749,
											"end": 17767,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17740,
											"end": 17746,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 17696,
											"end": 17768,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 17696,
											"end": 17768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17696,
											"end": 17768,
											"name": "tag",
											"source": 7,
											"value": "522"
										},
										{
											"begin": 17696,
											"end": 17768,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17443,
											"end": 17775,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 17443,
											"end": 17775,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 17443,
											"end": 17775,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17443,
											"end": 17775,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17443,
											"end": 17775,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17443,
											"end": 17775,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17781,
											"end": 17897,
											"name": "tag",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 17781,
											"end": 17897,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17851,
											"end": 17872,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "524"
										},
										{
											"begin": 17866,
											"end": 17871,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17851,
											"end": 17872,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 17851,
											"end": 17872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17851,
											"end": 17872,
											"name": "tag",
											"source": 7,
											"value": "524"
										},
										{
											"begin": 17851,
											"end": 17872,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17844,
											"end": 17849,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17841,
											"end": 17873,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 17831,
											"end": 17891,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "525"
										},
										{
											"begin": 17831,
											"end": 17891,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 17887,
											"end": 17888,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17884,
											"end": 17885,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 17877,
											"end": 17889,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 17831,
											"end": 17891,
											"name": "tag",
											"source": 7,
											"value": "525"
										},
										{
											"begin": 17831,
											"end": 17891,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17781,
											"end": 17897,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17781,
											"end": 17897,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17903,
											"end": 18040,
											"name": "tag",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 17903,
											"end": 18040,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17957,
											"end": 17962,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17988,
											"end": 17994,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17982,
											"end": 17995,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 17973,
											"end": 17995,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17973,
											"end": 17995,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18004,
											"end": 18034,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "527"
										},
										{
											"begin": 18028,
											"end": 18033,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 18004,
											"end": 18034,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 18004,
											"end": 18034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18004,
											"end": 18034,
											"name": "tag",
											"source": 7,
											"value": "527"
										},
										{
											"begin": 18004,
											"end": 18034,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17903,
											"end": 18040,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 17903,
											"end": 18040,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17903,
											"end": 18040,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17903,
											"end": 18040,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17903,
											"end": 18040,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18046,
											"end": 18391,
											"name": "tag",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 18046,
											"end": 18391,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18113,
											"end": 18119,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18162,
											"end": 18164,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 18150,
											"end": 18159,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18141,
											"end": 18148,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 18137,
											"end": 18160,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 18133,
											"end": 18165,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 18130,
											"end": 18249,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 18130,
											"end": 18249,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "529"
										},
										{
											"begin": 18130,
											"end": 18249,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 18168,
											"end": 18247,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "530"
										},
										{
											"begin": 18168,
											"end": 18247,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 18168,
											"end": 18247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18168,
											"end": 18247,
											"name": "tag",
											"source": 7,
											"value": "530"
										},
										{
											"begin": 18168,
											"end": 18247,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18130,
											"end": 18249,
											"name": "tag",
											"source": 7,
											"value": "529"
										},
										{
											"begin": 18130,
											"end": 18249,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18288,
											"end": 18289,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18313,
											"end": 18374,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "531"
										},
										{
											"begin": 18366,
											"end": 18373,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 18357,
											"end": 18363,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18346,
											"end": 18355,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 18342,
											"end": 18364,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18313,
											"end": 18374,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 18313,
											"end": 18374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18313,
											"end": 18374,
											"name": "tag",
											"source": 7,
											"value": "531"
										},
										{
											"begin": 18313,
											"end": 18374,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18303,
											"end": 18374,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18303,
											"end": 18374,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18259,
											"end": 18384,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18046,
											"end": 18391,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 18046,
											"end": 18391,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18046,
											"end": 18391,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18046,
											"end": 18391,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18046,
											"end": 18391,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18397,
											"end": 18495,
											"name": "tag",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 18397,
											"end": 18495,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18448,
											"end": 18454,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18482,
											"end": 18487,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 18476,
											"end": 18488,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 18466,
											"end": 18488,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18466,
											"end": 18488,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18397,
											"end": 18495,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18397,
											"end": 18495,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18397,
											"end": 18495,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18397,
											"end": 18495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18501,
											"end": 18648,
											"name": "tag",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 18501,
											"end": 18648,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18602,
											"end": 18613,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18639,
											"end": 18642,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 18624,
											"end": 18642,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18624,
											"end": 18642,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18501,
											"end": 18648,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 18501,
											"end": 18648,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18501,
											"end": 18648,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18501,
											"end": 18648,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18501,
											"end": 18648,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18654,
											"end": 18902,
											"name": "tag",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 18654,
											"end": 18902,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18736,
											"end": 18737,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18746,
											"end": 18859,
											"name": "tag",
											"source": 7,
											"value": "535"
										},
										{
											"begin": 18746,
											"end": 18859,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18760,
											"end": 18766,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 18757,
											"end": 18758,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 18754,
											"end": 18767,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 18746,
											"end": 18859,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 18746,
											"end": 18859,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "537"
										},
										{
											"begin": 18746,
											"end": 18859,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 18845,
											"end": 18846,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 18840,
											"end": 18843,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18836,
											"end": 18847,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18830,
											"end": 18848,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 18826,
											"end": 18827,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 18821,
											"end": 18824,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 18817,
											"end": 18828,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18810,
											"end": 18849,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 18782,
											"end": 18784,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 18779,
											"end": 18780,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 18775,
											"end": 18785,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18770,
											"end": 18785,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18770,
											"end": 18785,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18746,
											"end": 18859,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "535"
										},
										{
											"begin": 18746,
											"end": 18859,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18746,
											"end": 18859,
											"name": "tag",
											"source": 7,
											"value": "537"
										},
										{
											"begin": 18746,
											"end": 18859,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18893,
											"end": 18894,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18884,
											"end": 18890,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 18879,
											"end": 18882,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 18875,
											"end": 18891,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18868,
											"end": 18895,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 18716,
											"end": 18902,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18654,
											"end": 18902,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18654,
											"end": 18902,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18654,
											"end": 18902,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18654,
											"end": 18902,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18908,
											"end": 19294,
											"name": "tag",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 18908,
											"end": 19294,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19012,
											"end": 19015,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19040,
											"end": 19078,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "539"
										},
										{
											"begin": 19072,
											"end": 19077,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19040,
											"end": 19078,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 19040,
											"end": 19078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19040,
											"end": 19078,
											"name": "tag",
											"source": 7,
											"value": "539"
										},
										{
											"begin": 19040,
											"end": 19078,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19094,
											"end": 19182,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "540"
										},
										{
											"begin": 19175,
											"end": 19181,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 19170,
											"end": 19173,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 19094,
											"end": 19182,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 19094,
											"end": 19182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19094,
											"end": 19182,
											"name": "tag",
											"source": 7,
											"value": "540"
										},
										{
											"begin": 19094,
											"end": 19182,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19087,
											"end": 19182,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 19087,
											"end": 19182,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19191,
											"end": 19256,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "541"
										},
										{
											"begin": 19249,
											"end": 19255,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 19244,
											"end": 19247,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 19237,
											"end": 19241,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 19230,
											"end": 19235,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 19226,
											"end": 19242,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19191,
											"end": 19256,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 19191,
											"end": 19256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19191,
											"end": 19256,
											"name": "tag",
											"source": 7,
											"value": "541"
										},
										{
											"begin": 19191,
											"end": 19256,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19281,
											"end": 19287,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 19276,
											"end": 19279,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 19272,
											"end": 19288,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19265,
											"end": 19288,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 19265,
											"end": 19288,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19016,
											"end": 19294,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18908,
											"end": 19294,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 18908,
											"end": 19294,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18908,
											"end": 19294,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18908,
											"end": 19294,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18908,
											"end": 19294,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19300,
											"end": 19571,
											"name": "tag",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 19300,
											"end": 19571,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19430,
											"end": 19433,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19452,
											"end": 19545,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "543"
										},
										{
											"begin": 19541,
											"end": 19544,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19532,
											"end": 19538,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 19452,
											"end": 19545,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 19452,
											"end": 19545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19452,
											"end": 19545,
											"name": "tag",
											"source": 7,
											"value": "543"
										},
										{
											"begin": 19452,
											"end": 19545,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19445,
											"end": 19545,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 19445,
											"end": 19545,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19562,
											"end": 19565,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 19555,
											"end": 19565,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19555,
											"end": 19565,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19300,
											"end": 19571,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 19300,
											"end": 19571,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 19300,
											"end": 19571,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19300,
											"end": 19571,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19300,
											"end": 19571,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/CoreLoanPlatform.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"BORROWABLE_RATIO()": "6e35f124",
							"BTC()": "2792949d",
							"COLLATERAL_RATIO()": "d9e69a05",
							"INTEREST_RATE()": "5b72a33a",
							"LOAN_DURATION()": "e02a4dfd",
							"USD()": "1bf6c21b",
							"borrowBTC(uint256)": "d1a40564",
							"calculateInterest(address)": "e11932cf",
							"depositBTC(uint256)": "a6b6d798",
							"depositCollateral(uint256)": "bad4a01f",
							"getBorrowableAmount(address)": "691d1eb3",
							"getCurrentApy()": "f4925de5",
							"getLenderBalance(address)": "bd09085a",
							"getLoanDetails(address)": "e8a7da8e",
							"getTotalBorrowed()": "0307c4a1",
							"getTotalStaked()": "0917e776",
							"getUserBorrowed(address)": "e86ef40b",
							"getUserCollateral(address)": "b6f7132f",
							"getUserStaked(address)": "dac3fc3f",
							"lenderBalances(address)": "a27a944d",
							"loans(address)": "73b4086b",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"repayLoan(address)": "190ef1e6",
							"transferOwnership(address)": "f2fde38b",
							"userCollateral(address)": "f69f1e4a",
							"withdrawBTC(uint256)": "90b4588b",
							"withdrawCollateral(uint256)": "6112fe2e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_USD\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_BTC\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BTCDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BTCWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"CollateralDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"CollateralWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"interest\",\"type\":\"uint256\"}],\"name\":\"LoanRepaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"}],\"name\":\"LoanTaken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BORROWABLE_RATIO\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BTC\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"COLLATERAL_RATIO\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"INTEREST_RATE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LOAN_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USD\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"borrowBTC\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"calculateInterest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositBTC\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getBorrowableAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentApy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"}],\"name\":\"getLenderBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"}],\"name\":\"getLoanDetails\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"internalType\":\"struct CoreLoanPlatform.Loan\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalBorrowed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserBorrowed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lenderBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"loans\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"repayLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawBTC\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CoreLoanPlatform.sol\":\"CoreLoanPlatform\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/CoreLoanPlatform.sol\":{\"keccak256\":\"0xc515cf7e7bf2b1f77b45c786b1027bdc6e8a8b731bcbba25b543dd3be1e6f8de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96b871aefccd01a253c2c5b613e81f2e4472e5d3cc1d6e5b0b3b71a745d878ae\",\"dweb:/ipfs/QmaryZHDmBxaE53muNoxHjFKZpBNGxuwkNZBiJ1wPT5K7w\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "contracts/CoreLoanPlatform.sol:CoreLoanPlatform",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 869,
								"contract": "contracts/CoreLoanPlatform.sol:CoreLoanPlatform",
								"label": "totalStaked",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 872,
								"contract": "contracts/CoreLoanPlatform.sol:CoreLoanPlatform",
								"label": "totalBorrowed",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 886,
								"contract": "contracts/CoreLoanPlatform.sol:CoreLoanPlatform",
								"label": "loans",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_struct(Loan)881_storage)"
							},
							{
								"astId": 890,
								"contract": "contracts/CoreLoanPlatform.sol:CoreLoanPlatform",
								"label": "userCollateral",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 894,
								"contract": "contracts/CoreLoanPlatform.sol:CoreLoanPlatform",
								"label": "lenderBalances",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_struct(Loan)881_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct CoreLoanPlatform.Loan)",
								"numberOfBytes": "32",
								"value": "t_struct(Loan)881_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(Loan)881_storage": {
								"encoding": "inplace",
								"label": "struct CoreLoanPlatform.Loan",
								"members": [
									{
										"astId": 874,
										"contract": "contracts/CoreLoanPlatform.sol:CoreLoanPlatform",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 876,
										"contract": "contracts/CoreLoanPlatform.sol:CoreLoanPlatform",
										"label": "collateral",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 878,
										"contract": "contracts/CoreLoanPlatform.sol:CoreLoanPlatform",
										"label": "timestamp",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 880,
										"contract": "contracts/CoreLoanPlatform.sol:CoreLoanPlatform",
										"label": "active",
										"offset": 0,
										"slot": "3",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "128"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							834
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 835,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 834,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 834,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								834
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 816,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 816,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							225
						]
					},
					"id": 226,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 225,
							"linearizedBaseContracts": [
								225
							],
							"name": "IERC20",
							"nameLocation": "213:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 159,
									"name": "Transfer",
									"nameLocation": "395:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "404:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "426:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "446:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:1"
									},
									"src": "389:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 168,
									"name": "Approval",
									"nameLocation": "626:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "635:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "658:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 166,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "683:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:1"
									},
									"src": "620:78:1"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:1",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 174,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 225,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:1",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 182,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "930:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:1"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "970:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:1"
									},
									"scope": 225,
									"src": "911:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1221:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1233:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1266:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:1"
									},
									"scope": 225,
									"src": "1203:69:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 202,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1566:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1581:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:1"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1621:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:1"
									},
									"scope": 225,
									"src": "1547:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 212,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2325:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2342:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2375:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 209,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:1"
									},
									"scope": 225,
									"src": "2308:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 224,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2711:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2725:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2737:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:1"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2770:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 221,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:1"
									},
									"scope": 225,
									"src": "2689:87:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 226,
							"src": "203:2575:1",
							"usedErrors": [],
							"usedEvents": [
								159,
								168
							]
						}
					],
					"src": "106:2673:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							261
						]
					},
					"id": 262,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 227,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "123:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 228,
								"nodeType": "StructuredDocumentation",
								"src": "149:1963:2",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."
							},
							"fullyImplemented": false,
							"id": 261,
							"linearizedBaseContracts": [
								261
							],
							"name": "IERC20Permit",
							"nameLocation": "2123:12:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 229,
										"nodeType": "StructuredDocumentation",
										"src": "2142:850:2",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."
									},
									"functionSelector": "d505accf",
									"id": 246,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "3006:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3030:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "3022:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3022:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3053:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "3045:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3045:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3078:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "3070:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3070:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3101:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "3093:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3093:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3125:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "3119:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 238,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3119:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3144:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "3136:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 240,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3136:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3163:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "3155:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 242,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3155:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3012:158:2"
									},
									"returnParameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3179:0:2"
									},
									"scope": 261,
									"src": "2997:183:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 247,
										"nodeType": "StructuredDocumentation",
										"src": "3186:294:2",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 254,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "3494:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3509:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "3501:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3501:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3500:15:2"
									},
									"returnParameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "3539:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3539:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3538:9:2"
									},
									"scope": 261,
									"src": "3485:63:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "3554:128:2",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 260,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "3749:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3765:2:2"
									},
									"returnParameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "3791:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 257,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3791:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3790:9:2"
									},
									"scope": 261,
									"src": "3740:60:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 262,
							"src": "2113:1689:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:3680:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							804
						],
						"IERC20": [
							225
						],
						"IERC20Permit": [
							261
						],
						"SafeERC20": [
							551
						]
					},
					"id": 552,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 263,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 265,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 552,
							"sourceUnit": 226,
							"src": "141:37:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 264,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 225,
										"src": "149:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
							"file": "../extensions/IERC20Permit.sol",
							"id": 267,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 552,
							"sourceUnit": 262,
							"src": "179:60:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 266,
										"name": "IERC20Permit",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 261,
										"src": "187:12:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 269,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 552,
							"sourceUnit": 805,
							"src": "240:51:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 268,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 804,
										"src": "248:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 270,
								"nodeType": "StructuredDocumentation",
								"src": "293:457:3",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 551,
							"linearizedBaseContracts": [
								551
							],
							"name": "SafeERC20",
							"nameLocation": "759:9:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 273,
									"libraryName": {
										"id": 271,
										"name": "Address",
										"nameLocations": [
											"781:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 804,
										"src": "781:7:3"
									},
									"nodeType": "UsingForDirective",
									"src": "775:26:3",
									"typeName": {
										"id": 272,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "793:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"documentation": {
										"id": 274,
										"nodeType": "StructuredDocumentation",
										"src": "807:64:3",
										"text": " @dev An operation with an ERC20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 278,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "882:24:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "915:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "907:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 275,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "906:15:3"
									},
									"src": "876:46:3"
								},
								{
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "928:71:3",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 287,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "1010:32:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1051:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "1043:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "1068:16:3",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "1060:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1060:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1094:17:3",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "1086:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1086:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1042:70:3"
									},
									"src": "1004:109:3"
								},
								{
									"body": {
										"id": 310,
										"nodeType": "Block",
										"src": "1375:88:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 299,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 291,
															"src": "1405:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 302,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 291,
																		"src": "1427:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$225",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 303,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1433:8:3",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 192,
																	"src": "1427:14:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 304,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 293,
																			"src": "1444:2:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 305,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 295,
																			"src": "1448:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 306,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1443:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 300,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1412:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 301,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1416:10:3",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1412:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1412:43:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 298,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "1385:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1385:71:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 309,
												"nodeType": "ExpressionStatement",
												"src": "1385:71:3"
											}
										]
									},
									"documentation": {
										"id": 288,
										"nodeType": "StructuredDocumentation",
										"src": "1119:179:3",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 311,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1312:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1332:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "1325:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$225",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 290,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 289,
														"name": "IERC20",
														"nameLocations": [
															"1325:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 225,
														"src": "1325:6:3"
													},
													"referencedDeclaration": 225,
													"src": "1325:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1347:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "1339:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1339:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1359:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "1351:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1351:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1324:41:3"
									},
									"returnParameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1375:0:3"
									},
									"scope": 551,
									"src": "1303:160:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 337,
										"nodeType": "Block",
										"src": "1792:98:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 325,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "1822:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 328,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 315,
																		"src": "1844:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$225",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 329,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1850:12:3",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 224,
																	"src": "1844:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 330,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 317,
																			"src": "1865:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 331,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 319,
																			"src": "1871:2:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 332,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 321,
																			"src": "1875:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 333,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1864:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 326,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1829:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 327,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1833:10:3",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1829:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1829:53:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 324,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "1802:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1802:81:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 336,
												"nodeType": "ExpressionStatement",
												"src": "1802:81:3"
											}
										]
									},
									"documentation": {
										"id": 312,
										"nodeType": "StructuredDocumentation",
										"src": "1469:228:3",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 338,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1711:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1735:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "1728:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$225",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 314,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 313,
														"name": "IERC20",
														"nameLocations": [
															"1728:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 225,
														"src": "1728:6:3"
													},
													"referencedDeclaration": 225,
													"src": "1728:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1750:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "1742:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1742:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1764:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "1756:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1756:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1776:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "1768:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1768:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1727:55:3"
									},
									"returnParameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:0:3"
									},
									"scope": 551,
									"src": "1702:188:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 368,
										"nodeType": "Block",
										"src": "2167:139:3",
										"statements": [
											{
												"assignments": [
													350
												],
												"declarations": [
													{
														"constant": false,
														"id": 350,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2185:12:3",
														"nodeType": "VariableDeclaration",
														"scope": 368,
														"src": "2177:20:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 349,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2177:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 359,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 355,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2224:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$551",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$551",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 354,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2216:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 353,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2216:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 356,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2216:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 357,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "2231:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 351,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 342,
															"src": "2200:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														"id": 352,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2206:9:3",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 202,
														"src": "2200:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2200:39:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2177:62:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 361,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 342,
															"src": "2262:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 362,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "2269:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 365,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 363,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 350,
																"src": "2278:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 364,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 346,
																"src": "2293:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2278:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 360,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "2249:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2249:50:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 367,
												"nodeType": "ExpressionStatement",
												"src": "2249:50:3"
											}
										]
									},
									"documentation": {
										"id": 339,
										"nodeType": "StructuredDocumentation",
										"src": "1896:180:3",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 369,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2090:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2119:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2112:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$225",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 341,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 340,
														"name": "IERC20",
														"nameLocations": [
															"2112:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 225,
														"src": "2112:6:3"
													},
													"referencedDeclaration": 225,
													"src": "2112:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2134:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2126:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2126:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2151:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2143:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2143:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2111:46:3"
									},
									"returnParameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2167:0:3"
									},
									"scope": 551,
									"src": "2081:225:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 411,
										"nodeType": "Block",
										"src": "2607:370:3",
										"statements": [
											{
												"id": 410,
												"nodeType": "UncheckedBlock",
												"src": "2617:354:3",
												"statements": [
													{
														"assignments": [
															381
														],
														"declarations": [
															{
																"constant": false,
																"id": 381,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "2649:16:3",
																"nodeType": "VariableDeclaration",
																"scope": 410,
																"src": "2641:24:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 380,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2641:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 390,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 386,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2692:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$551",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$551",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 385,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2684:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 384,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2684:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 387,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2684:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 388,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 375,
																	"src": "2699:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 382,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 373,
																	"src": "2668:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 383,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2674:9:3",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 202,
																"src": "2668:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2668:39:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2641:66:3"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 391,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 381,
																"src": "2725:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 392,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 377,
																"src": "2744:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2725:36:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 401,
														"nodeType": "IfStatement",
														"src": "2721:160:3",
														"trueBody": {
															"id": 400,
															"nodeType": "Block",
															"src": "2763:118:3",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 395,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 375,
																				"src": "2821:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 396,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 381,
																				"src": "2830:16:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 397,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 377,
																				"src": "2848:17:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 394,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 287,
																			"src": "2788:32:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 398,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2788:78:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 399,
																	"nodeType": "RevertStatement",
																	"src": "2781:85:3"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 403,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 373,
																	"src": "2907:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 404,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 375,
																	"src": "2914:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 407,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 405,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 381,
																		"src": "2923:16:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 406,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 377,
																		"src": "2942:17:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2923:36:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 402,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 459,
																"src": "2894:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2894:66:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 409,
														"nodeType": "ExpressionStatement",
														"src": "2894:66:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "2312:192:3",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful."
									},
									"id": 412,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2518:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2547:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "2540:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$225",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 372,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 371,
														"name": "IERC20",
														"nameLocations": [
															"2540:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 225,
														"src": "2540:6:3"
													},
													"referencedDeclaration": 225,
													"src": "2540:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2562:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "2554:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2554:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "2579:17:3",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "2571:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2571:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2539:58:3"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2607:0:3"
									},
									"scope": 551,
									"src": "2509:468:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 458,
										"nodeType": "Block",
										"src": "3373:303:3",
										"statements": [
											{
												"assignments": [
													424
												],
												"declarations": [
													{
														"constant": false,
														"id": 424,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "3396:12:3",
														"nodeType": "VariableDeclaration",
														"scope": 458,
														"src": "3383:25:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 423,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3383:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 433,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 427,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 416,
																"src": "3426:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$225",
																	"typeString": "contract IERC20"
																}
															},
															"id": 428,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3432:7:3",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 212,
															"src": "3426:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 429,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 418,
																	"src": "3442:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 430,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 420,
																	"src": "3451:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 431,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3441:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 425,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "3411:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 426,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3415:10:3",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "3411:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3411:47:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3383:75:3"
											},
											{
												"condition": {
													"id": 438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3473:45:3",
													"subExpression": {
														"arguments": [
															{
																"id": 435,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 416,
																"src": "3498:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$225",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 436,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 424,
																"src": "3505:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$225",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 434,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 550,
															"src": "3474:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 437,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3474:44:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 457,
												"nodeType": "IfStatement",
												"src": "3469:201:3",
												"trueBody": {
													"id": 456,
													"nodeType": "Block",
													"src": "3520:150:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 440,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 416,
																		"src": "3554:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$225",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 443,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 416,
																					"src": "3576:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$225",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 444,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3582:7:3",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 212,
																				"src": "3576:13:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 445,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 418,
																						"src": "3592:7:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 446,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3601:1:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 447,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3591:12:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 441,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3561:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 442,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "3565:10:3",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "3561:14:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 448,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3561:43:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$225",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 439,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 501,
																	"src": "3534:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 449,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:71:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 450,
															"nodeType": "ExpressionStatement",
															"src": "3534:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 452,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 416,
																		"src": "3639:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$225",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 453,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 424,
																		"src": "3646:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$225",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 451,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 501,
																	"src": "3619:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 454,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3619:40:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 455,
															"nodeType": "ExpressionStatement",
															"src": "3619:40:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 413,
										"nodeType": "StructuredDocumentation",
										"src": "2983:308:3",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."
									},
									"id": 459,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "3305:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3325:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "3318:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$225",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 415,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 414,
														"name": "IERC20",
														"nameLocations": [
															"3318:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 225,
														"src": "3318:6:3"
													},
													"referencedDeclaration": 225,
													"src": "3318:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3340:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "3332:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 417,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3332:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3357:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "3349:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 419,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3349:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:46:3"
									},
									"returnParameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3373:0:3"
									},
									"scope": 551,
									"src": "3296:380:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 500,
										"nodeType": "Block",
										"src": "4129:559:3",
										"statements": [
											{
												"assignments": [
													469
												],
												"declarations": [
													{
														"constant": false,
														"id": 469,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4491:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 500,
														"src": "4478:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 468,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4478:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 477,
												"initialValue": {
													"arguments": [
														{
															"id": 475,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 465,
															"src": "4532:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 472,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 463,
																	"src": "4512:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 471,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4504:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 470,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4504:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4504:14:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 474,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4519:12:3",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 625,
														"src": "4504:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
															"typeString": "function (address,bytes memory) returns (bytes memory)"
														}
													},
													"id": 476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4504:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4478:59:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 481,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 478,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 469,
																"src": "4551:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 479,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4562:6:3",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4551:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 480,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4572:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4551:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 489,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4577:31:3",
														"subExpression": {
															"arguments": [
																{
																	"id": 484,
																	"name": "returndata",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 469,
																	"src": "4589:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"components": [
																		{
																			"id": 486,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4602:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bool_$",
																				"typeString": "type(bool)"
																			},
																			"typeName": {
																				"id": 485,
																				"name": "bool",
																				"nodeType": "ElementaryTypeName",
																				"src": "4602:4:3",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"id": 487,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4601:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																],
																"expression": {
																	"id": 482,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4578:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4582:6:3",
																"memberName": "decode",
																"nodeType": "MemberAccess",
																"src": "4578:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 488,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4578:30:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4551:57:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 499,
												"nodeType": "IfStatement",
												"src": "4547:135:3",
												"trueBody": {
													"id": 498,
													"nodeType": "Block",
													"src": "4610:72:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 494,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 463,
																				"src": "4664:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$225",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$225",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 493,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4656:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 492,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4656:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 495,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4656:14:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 491,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 278,
																	"src": "4631:24:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 496,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4631:40:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 497,
															"nodeType": "RevertStatement",
															"src": "4624:47:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 460,
										"nodeType": "StructuredDocumentation",
										"src": "3682:372:3",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 501,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "4068:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4095:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "4088:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$225",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 462,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 461,
														"name": "IERC20",
														"nameLocations": [
															"4088:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 225,
														"src": "4088:6:3"
													},
													"referencedDeclaration": 225,
													"src": "4088:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4115:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "4102:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 464,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4102:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4087:33:3"
									},
									"returnParameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4129:0:3"
									},
									"scope": 551,
									"src": "4059:629:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 549,
										"nodeType": "Block",
										"src": "5278:489:3",
										"statements": [
											{
												"assignments": [
													513,
													515
												],
												"declarations": [
													{
														"constant": false,
														"id": 513,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5579:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 549,
														"src": "5574:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 512,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5574:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 515,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5601:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 549,
														"src": "5588:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 514,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5588:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 523,
												"initialValue": {
													"arguments": [
														{
															"id": 521,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 507,
															"src": "5635:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 518,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 505,
																	"src": "5623:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5615:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 516,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5615:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5615:14:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 520,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5630:4:3",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "5615:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5615:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5573:67:3"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 538,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 524,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 513,
															"src": "5657:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 536,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 528,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 525,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 515,
																				"src": "5669:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 526,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5680:6:3",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "5669:17:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 527,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5690:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "5669:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 531,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 515,
																				"src": "5706:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 533,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "5719:4:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 532,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "5719:4:3",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 534,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5718:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 529,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5695:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 530,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5699:6:3",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "5695:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 535,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5695:30:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "5669:56:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 537,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5668:58:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "5657:69:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 546,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 541,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 505,
																			"src": "5738:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$225",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$225",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 540,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5730:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 539,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5730:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 542,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5730:14:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 543,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5745:4:3",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "5730:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 544,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5750:6:3",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "5730:26:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 545,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5759:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5730:30:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5657:103:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 511,
												"id": 548,
												"nodeType": "Return",
												"src": "5650:110:3"
											}
										]
									},
									"documentation": {
										"id": 502,
										"nodeType": "StructuredDocumentation",
										"src": "4694:490:3",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."
									},
									"id": 550,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "5198:23:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5229:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "5222:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$225",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 504,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 503,
														"name": "IERC20",
														"nameLocations": [
															"5222:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 225,
														"src": "5222:6:3"
													},
													"referencedDeclaration": 225,
													"src": "5222:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5249:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "5236:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 506,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5236:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5221:33:3"
									},
									"returnParameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "5272:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 509,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5272:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5271:6:3"
									},
									"scope": 551,
									"src": "5189:578:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 552,
							"src": "751:5018:3",
							"usedErrors": [
								278,
								287
							],
							"usedEvents": []
						}
					],
					"src": "115:5655:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							804
						]
					},
					"id": 805,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 553,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 554,
								"nodeType": "StructuredDocumentation",
								"src": "127:67:4",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 804,
							"linearizedBaseContracts": [
								804
							],
							"name": "Address",
							"nameLocation": "203:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 555,
										"nodeType": "StructuredDocumentation",
										"src": "217:94:4",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cd786059",
									"id": 559,
									"name": "AddressInsufficientBalance",
									"nameLocation": "322:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "357:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "349:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 556,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:17:4"
									},
									"src": "316:50:4"
								},
								{
									"documentation": {
										"id": 560,
										"nodeType": "StructuredDocumentation",
										"src": "372:75:4",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 564,
									"name": "AddressEmptyCode",
									"nameLocation": "458:16:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "483:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "475:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 561,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:16:4"
									},
									"src": "452:39:4"
								},
								{
									"documentation": {
										"id": 565,
										"nodeType": "StructuredDocumentation",
										"src": "497:89:4",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "1425ea42",
									"id": 567,
									"name": "FailedInnerCall",
									"nameLocation": "597:15:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "612:2:4"
									},
									"src": "591:24:4"
								},
								{
									"body": {
										"id": 607,
										"nodeType": "Block",
										"src": "1602:260:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 577,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1624:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$804",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$804",
																		"typeString": "library Address"
																	}
																],
																"id": 576,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1616:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 575,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1616:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 578,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1616:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 579,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1630:7:4",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1616:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 580,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 572,
														"src": "1640:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1616:30:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 590,
												"nodeType": "IfStatement",
												"src": "1612:109:4",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "1648:73:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 585,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1704:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$804",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$804",
																					"typeString": "library Address"
																				}
																			],
																			"id": 584,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1696:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 583,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1696:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1696:13:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 582,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 559,
																	"src": "1669:26:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 587,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1669:41:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 588,
															"nodeType": "RevertStatement",
															"src": "1662:48:4"
														}
													]
												}
											},
											{
												"assignments": [
													592,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 592,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1737:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 607,
														"src": "1732:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 591,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1732:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 599,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 597,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1780:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 593,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 570,
																"src": "1750:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 594,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1760:4:4",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1750:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 596,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 595,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 572,
																"src": "1772:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1750:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1731:52:4"
											},
											{
												"condition": {
													"id": 601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1797:8:4",
													"subExpression": {
														"id": 600,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 592,
														"src": "1798:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 606,
												"nodeType": "IfStatement",
												"src": "1793:63:4",
												"trueBody": {
													"id": 605,
													"nodeType": "Block",
													"src": "1807:49:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 602,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 567,
																	"src": "1828:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 603,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1828:17:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 604,
															"nodeType": "RevertStatement",
															"src": "1821:24:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 568,
										"nodeType": "StructuredDocumentation",
										"src": "621:905:4",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 608,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1540:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1566:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "1550:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1550:15:4",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1585:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "1577:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1577:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1549:43:4"
									},
									"returnParameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1602:0:4"
									},
									"scope": 804,
									"src": "1531:331:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 624,
										"nodeType": "Block",
										"src": "2794:62:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 619,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "2833:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 620,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 613,
															"src": "2841:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 621,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2847:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 618,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "2811:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2811:38:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 617,
												"id": 623,
												"nodeType": "Return",
												"src": "2804:45:4"
											}
										]
									},
									"documentation": {
										"id": 609,
										"nodeType": "StructuredDocumentation",
										"src": "1868:832:4",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 625,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2714:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2735:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "2727:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 610,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2756:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "2743:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 612,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2743:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2726:35:4"
									},
									"returnParameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "2780:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 615,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2780:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2779:14:4"
									},
									"scope": 804,
									"src": "2705:151:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 670,
										"nodeType": "Block",
										"src": "3293:279:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 639,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3315:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$804",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$804",
																		"typeString": "library Address"
																	}
																],
																"id": 638,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3307:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 637,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3307:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3307:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 641,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3321:7:4",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3307:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 642,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 632,
														"src": "3331:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3307:29:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 652,
												"nodeType": "IfStatement",
												"src": "3303:108:4",
												"trueBody": {
													"id": 651,
													"nodeType": "Block",
													"src": "3338:73:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 647,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3394:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$804",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$804",
																					"typeString": "library Address"
																				}
																			],
																			"id": 646,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3386:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 645,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3386:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 648,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3386:13:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 644,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 559,
																	"src": "3359:26:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 649,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3359:41:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 650,
															"nodeType": "RevertStatement",
															"src": "3352:48:4"
														}
													]
												}
											},
											{
												"assignments": [
													654,
													656
												],
												"declarations": [
													{
														"constant": false,
														"id": 654,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3426:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 670,
														"src": "3421:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 653,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3421:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 656,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3448:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 670,
														"src": "3435:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 655,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3435:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 663,
												"initialValue": {
													"arguments": [
														{
															"id": 661,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 630,
															"src": "3488:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 657,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 628,
																"src": "3462:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3469:4:4",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3462:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 660,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 659,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 632,
																"src": "3481:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3462:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3462:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3420:73:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 665,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 628,
															"src": "3537:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 666,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "3545:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 667,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "3554:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 664,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 763,
														"src": "3510:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3510:55:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 636,
												"id": 669,
												"nodeType": "Return",
												"src": "3503:62:4"
											}
										]
									},
									"documentation": {
										"id": 626,
										"nodeType": "StructuredDocumentation",
										"src": "2862:313:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 671,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "3189:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3219:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "3211:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 627,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3211:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3240:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "3227:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 629,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3227:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3254:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "3246:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 631,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3246:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3210:50:4"
									},
									"returnParameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "3279:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 634,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3279:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3278:14:4"
									},
									"scope": 804,
									"src": "3180:392:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 696,
										"nodeType": "Block",
										"src": "3811:154:4",
										"statements": [
											{
												"assignments": [
													682,
													684
												],
												"declarations": [
													{
														"constant": false,
														"id": 682,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3827:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 696,
														"src": "3822:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 681,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3822:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 684,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3849:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 696,
														"src": "3836:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 683,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3836:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 689,
												"initialValue": {
													"arguments": [
														{
															"id": 687,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 676,
															"src": "3881:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 685,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 674,
															"src": "3863:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 686,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3870:10:4",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3863:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3863:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3821:65:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 691,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 674,
															"src": "3930:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 692,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 682,
															"src": "3938:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 693,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 684,
															"src": "3947:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 690,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 763,
														"src": "3903:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3903:55:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 680,
												"id": 695,
												"nodeType": "Return",
												"src": "3896:62:4"
											}
										]
									},
									"documentation": {
										"id": 672,
										"nodeType": "StructuredDocumentation",
										"src": "3578:128:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 697,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3720:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3747:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "3739:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3768:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "3755:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 675,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3755:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:35:4"
									},
									"returnParameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "3797:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 678,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3797:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:14:4"
									},
									"scope": 804,
									"src": "3711:254:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 722,
										"nodeType": "Block",
										"src": "4203:156:4",
										"statements": [
											{
												"assignments": [
													708,
													710
												],
												"declarations": [
													{
														"constant": false,
														"id": 708,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4219:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 722,
														"src": "4214:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 707,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4214:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 710,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4241:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 722,
														"src": "4228:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 709,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4228:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 715,
												"initialValue": {
													"arguments": [
														{
															"id": 713,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 702,
															"src": "4275:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 711,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 700,
															"src": "4255:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 712,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4262:12:4",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4255:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4255:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4213:67:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 717,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 700,
															"src": "4324:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 718,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 708,
															"src": "4332:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 719,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 710,
															"src": "4341:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 716,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 763,
														"src": "4297:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4297:55:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 706,
												"id": 721,
												"nodeType": "Return",
												"src": "4290:62:4"
											}
										]
									},
									"documentation": {
										"id": 698,
										"nodeType": "StructuredDocumentation",
										"src": "3971:130:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 723,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "4115:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4144:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "4136:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 699,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4136:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4165:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "4152:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 701,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4152:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4135:35:4"
									},
									"returnParameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "4189:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 704,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4189:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4188:14:4"
									},
									"scope": 804,
									"src": "4106:253:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 762,
										"nodeType": "Block",
										"src": "4783:424:4",
										"statements": [
											{
												"condition": {
													"id": 736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4797:8:4",
													"subExpression": {
														"id": 735,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 728,
														"src": "4798:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 760,
													"nodeType": "Block",
													"src": "4857:344:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 751,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 745,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 742,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 730,
																			"src": "5045:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 743,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5056:6:4",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5045:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 744,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5066:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5045:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 750,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 746,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 726,
																				"src": "5071:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 747,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5078:4:4",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "5071:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 748,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5083:6:4",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5071:18:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 749,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5093:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5071:23:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5045:49:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 757,
															"nodeType": "IfStatement",
															"src": "5041:119:4",
															"trueBody": {
																"id": 756,
																"nodeType": "Block",
																"src": "5096:64:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 753,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 726,
																					"src": "5138:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 752,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 564,
																				"src": "5121:16:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 754,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5121:24:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 755,
																		"nodeType": "RevertStatement",
																		"src": "5114:31:4"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 758,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 730,
																"src": "5180:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 734,
															"id": 759,
															"nodeType": "Return",
															"src": "5173:17:4"
														}
													]
												},
												"id": 761,
												"nodeType": "IfStatement",
												"src": "4793:408:4",
												"trueBody": {
													"id": 741,
													"nodeType": "Block",
													"src": "4807:44:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 738,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 730,
																		"src": "4829:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 737,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 803,
																	"src": "4821:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 739,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4821:19:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 740,
															"nodeType": "ExpressionStatement",
															"src": "4821:19:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 724,
										"nodeType": "StructuredDocumentation",
										"src": "4365:255:4",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."
									},
									"id": 763,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4634:26:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4678:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "4670:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 725,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4670:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4699:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "4694:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 727,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4694:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4729:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "4716:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 729,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4716:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4660:85:4"
									},
									"returnParameters": {
										"id": 734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "4769:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 732,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4769:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4768:14:4"
									},
									"scope": 804,
									"src": "4625:582:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 784,
										"nodeType": "Block",
										"src": "5509:122:4",
										"statements": [
											{
												"condition": {
													"id": 774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5523:8:4",
													"subExpression": {
														"id": 773,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 766,
														"src": "5524:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 782,
													"nodeType": "Block",
													"src": "5583:42:4",
													"statements": [
														{
															"expression": {
																"id": 780,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 768,
																"src": "5604:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 772,
															"id": 781,
															"nodeType": "Return",
															"src": "5597:17:4"
														}
													]
												},
												"id": 783,
												"nodeType": "IfStatement",
												"src": "5519:106:4",
												"trueBody": {
													"id": 779,
													"nodeType": "Block",
													"src": "5533:44:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 776,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 768,
																		"src": "5555:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 775,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 803,
																	"src": "5547:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 777,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5547:19:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 778,
															"nodeType": "ExpressionStatement",
															"src": "5547:19:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 764,
										"nodeType": "StructuredDocumentation",
										"src": "5213:189:4",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."
									},
									"id": 785,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5416:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5438:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "5433:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 765,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5433:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5460:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "5447:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 767,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5447:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5432:39:4"
									},
									"returnParameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "5495:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 770,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5495:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5494:14:4"
									},
									"scope": 804,
									"src": "5407:224:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 802,
										"nodeType": "Block",
										"src": "5798:461:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 791,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 788,
															"src": "5874:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 792,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5885:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5874:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 793,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5894:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5874:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 800,
													"nodeType": "Block",
													"src": "6204:49:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 797,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 567,
																	"src": "6225:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 798,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6225:17:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 799,
															"nodeType": "RevertStatement",
															"src": "6218:24:4"
														}
													]
												},
												"id": 801,
												"nodeType": "IfStatement",
												"src": "5870:383:4",
												"trueBody": {
													"id": 796,
													"nodeType": "Block",
													"src": "5897:301:4",
													"statements": [
														{
															"AST": {
																"nativeSrc": "6055:133:4",
																"nodeType": "YulBlock",
																"src": "6055:133:4",
																"statements": [
																	{
																		"nativeSrc": "6073:40:4",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6073:40:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "6102:10:4",
																					"nodeType": "YulIdentifier",
																					"src": "6102:10:4"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "6096:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "6096:5:4"
																			},
																			"nativeSrc": "6096:17:4",
																			"nodeType": "YulFunctionCall",
																			"src": "6096:17:4"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "6077:15:4",
																				"nodeType": "YulTypedName",
																				"src": "6077:15:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6141:2:4",
																							"nodeType": "YulLiteral",
																							"src": "6141:2:4",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "6145:10:4",
																							"nodeType": "YulIdentifier",
																							"src": "6145:10:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6137:3:4",
																						"nodeType": "YulIdentifier",
																						"src": "6137:3:4"
																					},
																					"nativeSrc": "6137:19:4",
																					"nodeType": "YulFunctionCall",
																					"src": "6137:19:4"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "6158:15:4",
																					"nodeType": "YulIdentifier",
																					"src": "6158:15:4"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6130:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "6130:6:4"
																			},
																			"nativeSrc": "6130:44:4",
																			"nodeType": "YulFunctionCall",
																			"src": "6130:44:4"
																		},
																		"nativeSrc": "6130:44:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "6130:44:4"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "paris",
															"externalReferences": [
																{
																	"declaration": 788,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6102:10:4",
																	"valueSize": 1
																},
																{
																	"declaration": 788,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6145:10:4",
																	"valueSize": 1
																}
															],
															"id": 795,
															"nodeType": "InlineAssembly",
															"src": "6046:142:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 786,
										"nodeType": "StructuredDocumentation",
										"src": "5637:101:4",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."
									},
									"id": 803,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5752:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5773:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "5760:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 787,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5760:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5759:25:4"
									},
									"returnParameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5798:0:4"
									},
									"scope": 804,
									"src": "5743:516:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 805,
							"src": "195:6066:4",
							"usedErrors": [
								559,
								564,
								567
							],
							"usedEvents": []
						}
					],
					"src": "101:6161:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							834
						]
					},
					"id": 835,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 806,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 807,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 834,
							"linearizedBaseContracts": [
								834
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 815,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 812,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 811,
												"id": 814,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 816,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 816,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 809,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 834,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 824,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 821,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 822,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 820,
												"id": 823,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 825,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 817,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 819,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 825,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 818,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 834,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 832,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 830,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 829,
												"id": 831,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 833,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 833,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 827,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 834,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 835,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			},
			"contracts/CoreLoanPlatform.sol": {
				"ast": {
					"absolutePath": "contracts/CoreLoanPlatform.sol",
					"exportedSymbols": {
						"Address": [
							804
						],
						"Context": [
							834
						],
						"CoreLoanPlatform": [
							1545
						],
						"IERC20": [
							225
						],
						"IERC20Permit": [
							261
						],
						"Ownable": [
							147
						],
						"SafeERC20": [
							551
						]
					},
					"id": 1546,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 836,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 837,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1546,
							"sourceUnit": 226,
							"src": "58:56:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 838,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1546,
							"sourceUnit": 552,
							"src": "115:65:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 839,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1546,
							"sourceUnit": 148,
							"src": "181:52:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 840,
										"name": "Ownable",
										"nameLocations": [
											"264:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "264:7:6"
									},
									"id": 841,
									"nodeType": "InheritanceSpecifier",
									"src": "264:7:6"
								}
							],
							"canonicalName": "CoreLoanPlatform",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1545,
							"linearizedBaseContracts": [
								1545,
								147,
								834
							],
							"name": "CoreLoanPlatform",
							"nameLocation": "244:16:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 845,
									"libraryName": {
										"id": 842,
										"name": "SafeERC20",
										"nameLocations": [
											"284:9:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 551,
										"src": "284:9:6"
									},
									"nodeType": "UsingForDirective",
									"src": "278:27:6",
									"typeName": {
										"id": 844,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 843,
											"name": "IERC20",
											"nameLocations": [
												"298:6:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 225,
											"src": "298:6:6"
										},
										"referencedDeclaration": 225,
										"src": "298:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$225",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "1bf6c21b",
									"id": 848,
									"mutability": "immutable",
									"name": "USD",
									"nameLocation": "335:3:6",
									"nodeType": "VariableDeclaration",
									"scope": 1545,
									"src": "311:27:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$225",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 847,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 846,
											"name": "IERC20",
											"nameLocations": [
												"311:6:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 225,
											"src": "311:6:6"
										},
										"referencedDeclaration": 225,
										"src": "311:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$225",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2792949d",
									"id": 851,
									"mutability": "immutable",
									"name": "BTC",
									"nameLocation": "368:3:6",
									"nodeType": "VariableDeclaration",
									"scope": 1545,
									"src": "344:27:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$225",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 850,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 849,
											"name": "IERC20",
											"nameLocations": [
												"344:6:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 225,
											"src": "344:6:6"
										},
										"referencedDeclaration": 225,
										"src": "344:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$225",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "d9e69a05",
									"id": 854,
									"mutability": "constant",
									"name": "COLLATERAL_RATIO",
									"nameLocation": "402:16:6",
									"nodeType": "VariableDeclaration",
									"scope": 1545,
									"src": "378:46:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 852,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "378:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313530",
										"id": 853,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "421:3:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_150_by_1",
											"typeString": "int_const 150"
										},
										"value": "150"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "6e35f124",
									"id": 857,
									"mutability": "constant",
									"name": "BORROWABLE_RATIO",
									"nameLocation": "480:16:6",
									"nodeType": "VariableDeclaration",
									"scope": 1545,
									"src": "456:45:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 855,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "456:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3830",
										"id": 856,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "499:2:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_80_by_1",
											"typeString": "int_const 80"
										},
										"value": "80"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "5b72a33a",
									"id": 860,
									"mutability": "constant",
									"name": "INTEREST_RATE",
									"nameLocation": "568:13:6",
									"nodeType": "VariableDeclaration",
									"scope": 1545,
									"src": "544:41:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 858,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "544:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "35",
										"id": 859,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "584:1:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5_by_1",
											"typeString": "int_const 5"
										},
										"value": "5"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "e02a4dfd",
									"id": 863,
									"mutability": "constant",
									"name": "LOAN_DURATION",
									"nameLocation": "635:13:6",
									"nodeType": "VariableDeclaration",
									"scope": 1545,
									"src": "611:47:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 861,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "611:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3330",
										"id": 862,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "651:7:6",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2592000_by_1",
											"typeString": "int_const 2592000"
										},
										"value": "30"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 866,
									"mutability": "constant",
									"name": "SECONDS_IN_A_DAY",
									"nameLocation": "689:16:6",
									"nodeType": "VariableDeclaration",
									"scope": 1545,
									"src": "664:49:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 864,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "664:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3836343030",
										"id": 865,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "708:5:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_86400_by_1",
											"typeString": "int_const 86400"
										},
										"value": "86400"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 869,
									"mutability": "mutable",
									"name": "totalStaked",
									"nameLocation": "736:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 1545,
									"src": "720:31:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 867,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "720:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 868,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "750:1:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 872,
									"mutability": "mutable",
									"name": "totalBorrowed",
									"nameLocation": "800:13:6",
									"nodeType": "VariableDeclaration",
									"scope": 1545,
									"src": "784:33:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 870,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "784:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 871,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "816:1:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "private"
								},
								{
									"canonicalName": "CoreLoanPlatform.Loan",
									"id": 881,
									"members": [
										{
											"constant": false,
											"id": 874,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "883:6:6",
											"nodeType": "VariableDeclaration",
											"scope": 881,
											"src": "875:14:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 873,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "875:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 876,
											"mutability": "mutable",
											"name": "collateral",
											"nameLocation": "907:10:6",
											"nodeType": "VariableDeclaration",
											"scope": 881,
											"src": "899:18:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 875,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "899:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 878,
											"mutability": "mutable",
											"name": "timestamp",
											"nameLocation": "935:9:6",
											"nodeType": "VariableDeclaration",
											"scope": 881,
											"src": "927:17:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 877,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "927:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 880,
											"mutability": "mutable",
											"name": "active",
											"nameLocation": "959:6:6",
											"nodeType": "VariableDeclaration",
											"scope": 881,
											"src": "954:11:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 879,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "954:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Loan",
									"nameLocation": "860:4:6",
									"nodeType": "StructDefinition",
									"scope": 1545,
									"src": "853:119:6",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "73b4086b",
									"id": 886,
									"mutability": "mutable",
									"name": "loans",
									"nameLocation": "1010:5:6",
									"nodeType": "VariableDeclaration",
									"scope": 1545,
									"src": "978:37:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Loan_$881_storage_$",
										"typeString": "mapping(address => struct CoreLoanPlatform.Loan)"
									},
									"typeName": {
										"id": 885,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 882,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "986:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "978:24:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Loan_$881_storage_$",
											"typeString": "mapping(address => struct CoreLoanPlatform.Loan)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 884,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 883,
												"name": "Loan",
												"nameLocations": [
													"997:4:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 881,
												"src": "997:4:6"
											},
											"referencedDeclaration": 881,
											"src": "997:4:6",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Loan_$881_storage_ptr",
												"typeString": "struct CoreLoanPlatform.Loan"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f69f1e4a",
									"id": 890,
									"mutability": "mutable",
									"name": "userCollateral",
									"nameLocation": "1056:14:6",
									"nodeType": "VariableDeclaration",
									"scope": 1545,
									"src": "1021:49:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 889,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 887,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1029:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1021:27:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 888,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1040:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a27a944d",
									"id": 894,
									"mutability": "mutable",
									"name": "lenderBalances",
									"nameLocation": "1111:14:6",
									"nodeType": "VariableDeclaration",
									"scope": 1545,
									"src": "1076:49:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 893,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 891,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1084:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1076:27:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 892,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1095:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "006b9bb4766cf5ab74b890df959e4fad0e54b1c3885e49c9541d36253a6e39e6",
									"id": 902,
									"name": "LoanTaken",
									"nameLocation": "1138:9:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 896,
												"indexed": true,
												"mutability": "mutable",
												"name": "borrower",
												"nameLocation": "1173:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "1157:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 895,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 898,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1199:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "1191:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 897,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1191:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 900,
												"indexed": false,
												"mutability": "mutable",
												"name": "collateral",
												"nameLocation": "1223:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "1215:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 899,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1215:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1147:92:6"
									},
									"src": "1132:108:6"
								},
								{
									"anonymous": false,
									"eventSelector": "c7ce0a35f17b490de2a317e7fecb2cae86b1abffb03800b2f492823521382698",
									"id": 910,
									"name": "LoanRepaid",
									"nameLocation": "1251:10:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 904,
												"indexed": true,
												"mutability": "mutable",
												"name": "borrower",
												"nameLocation": "1287:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "1271:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 903,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1271:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 906,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1313:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "1305:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 905,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1305:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 908,
												"indexed": false,
												"mutability": "mutable",
												"name": "interest",
												"nameLocation": "1337:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "1329:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 907,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1329:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1261:90:6"
									},
									"src": "1245:107:6"
								},
								{
									"anonymous": false,
									"eventSelector": "d7243f6f8212d5188fd054141cf6ea89cfc0d91facb8c3afe2f88a1358480142",
									"id": 916,
									"name": "CollateralDeposited",
									"nameLocation": "1363:19:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 912,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1399:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "1383:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 911,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1383:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 914,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1413:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "1405:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 913,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1405:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1382:38:6"
									},
									"src": "1357:64:6"
								},
								{
									"anonymous": false,
									"eventSelector": "c30fcfbcaac9e0deffa719714eaa82396ff506a0d0d0eebe170830177288715d",
									"id": 922,
									"name": "CollateralWithdrawn",
									"nameLocation": "1432:19:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1468:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "1452:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 917,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1452:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 920,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1482:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "1474:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 919,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1474:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1451:38:6"
									},
									"src": "1426:64:6"
								},
								{
									"anonymous": false,
									"eventSelector": "00c876900062bf6768530bd9be84c146f5c051f4a50a5bf7fbcdd9ed4c8fb154",
									"id": 928,
									"name": "BTCDeposited",
									"nameLocation": "1501:12:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 924,
												"indexed": true,
												"mutability": "mutable",
												"name": "lender",
												"nameLocation": "1530:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "1514:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 923,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1514:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 926,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1546:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "1538:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 925,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1538:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1513:40:6"
									},
									"src": "1495:59:6"
								},
								{
									"anonymous": false,
									"eventSelector": "46cb947848d6e66f42fd865aff4e0b9765da557ed05874db5a3c931ccea58ef1",
									"id": 934,
									"name": "BTCWithdrawn",
									"nameLocation": "1565:12:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 930,
												"indexed": true,
												"mutability": "mutable",
												"name": "lender",
												"nameLocation": "1594:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "1578:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 929,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1578:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 932,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1610:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "1602:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 931,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1602:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1577:40:6"
									},
									"src": "1559:59:6"
								},
								{
									"body": {
										"id": 974,
										"nodeType": "Block",
										"src": "1684:183:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 958,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 951,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 946,
																	"name": "_USD",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 936,
																	"src": "1715:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 949,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1731:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 948,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1723:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 947,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1723:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 950,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1723:10:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1715:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 957,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 952,
																	"name": "_BTC",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 938,
																	"src": "1737:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 955,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1753:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 954,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1745:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 953,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1745:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 956,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1745:10:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1737:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1715:40:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420746f6b656e20616464726573736573",
															"id": 959,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1769:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_535257d937ceb2997eb47681103ba11d606f9e1e617540d05fb326bc7328ad1e",
																"typeString": "literal_string \"Invalid token addresses\""
															},
															"value": "Invalid token addresses"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_535257d937ceb2997eb47681103ba11d606f9e1e617540d05fb326bc7328ad1e",
																"typeString": "literal_string \"Invalid token addresses\""
															}
														],
														"id": 945,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1694:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 960,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1694:110:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 961,
												"nodeType": "ExpressionStatement",
												"src": "1694:110:6"
											},
											{
												"expression": {
													"id": 966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 962,
														"name": "USD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 848,
														"src": "1814:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$225",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 964,
																"name": "_USD",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 936,
																"src": "1827:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 963,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 225,
															"src": "1820:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$225_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 965,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1820:12:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$225",
															"typeString": "contract IERC20"
														}
													},
													"src": "1814:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"id": 967,
												"nodeType": "ExpressionStatement",
												"src": "1814:18:6"
											},
											{
												"expression": {
													"id": 972,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 968,
														"name": "BTC",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 851,
														"src": "1842:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$225",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 970,
																"name": "_BTC",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 938,
																"src": "1855:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 969,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 225,
															"src": "1848:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$225_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 971,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1848:12:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$225",
															"typeString": "contract IERC20"
														}
													},
													"src": "1842:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"id": 973,
												"nodeType": "ExpressionStatement",
												"src": "1842:18:6"
											}
										]
									},
									"id": 975,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 941,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1672:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1676:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1672:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 943,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 940,
												"name": "Ownable",
												"nameLocations": [
													"1664:7:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1664:7:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1664:19:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "_USD",
												"nameLocation": "1644:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "1636:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 935,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1636:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 938,
												"mutability": "mutable",
												"name": "_BTC",
												"nameLocation": "1658:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "1650:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 937,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1650:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1635:28:6"
									},
									"returnParameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1684:0:6"
									},
									"scope": 1545,
									"src": "1624:243:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1012,
										"nodeType": "Block",
										"src": "1925:234:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 983,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 981,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 977,
																"src": "1943:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 982,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1952:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1943:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
															"id": 984,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1955:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															},
															"value": "Amount must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															}
														],
														"id": 980,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1935:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1935:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 986,
												"nodeType": "ExpressionStatement",
												"src": "1935:52:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 990,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2018:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 991,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2022:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2018:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 994,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2038:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_CoreLoanPlatform_$1545",
																		"typeString": "contract CoreLoanPlatform"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_CoreLoanPlatform_$1545",
																		"typeString": "contract CoreLoanPlatform"
																	}
																],
																"id": 993,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2030:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 992,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2030:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 995,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2030:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 996,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 977,
															"src": "2045:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 987,
															"name": "USD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 848,
															"src": "1997:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														"id": 989,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2001:16:6",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 338,
														"src": "1997:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$225_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 997,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1997:55:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 998,
												"nodeType": "ExpressionStatement",
												"src": "1997:55:6"
											},
											{
												"expression": {
													"id": 1004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 999,
															"name": "userCollateral",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 890,
															"src": "2062:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1002,
														"indexExpression": {
															"expression": {
																"id": 1000,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2077:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1001,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2081:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2077:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2062:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1003,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 977,
														"src": "2092:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2062:36:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1005,
												"nodeType": "ExpressionStatement",
												"src": "2062:36:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1007,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2133:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1008,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2137:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2133:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1009,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 977,
															"src": "2145:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1006,
														"name": "CollateralDeposited",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 916,
														"src": "2113:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2113:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1011,
												"nodeType": "EmitStatement",
												"src": "2108:44:6"
											}
										]
									},
									"functionSelector": "bad4a01f",
									"id": 1013,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "depositCollateral",
									"nameLocation": "1882:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1908:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "1900:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 976,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1900:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1899:16:6"
									},
									"returnParameters": {
										"id": 979,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1925:0:6"
									},
									"scope": 1545,
									"src": "1873:286:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1092,
										"nodeType": "Block",
										"src": "2218:679:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1021,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1019,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1015,
																"src": "2236:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1020,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2245:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
															"id": 1022,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2248:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															},
															"value": "Amount must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															}
														],
														"id": 1018,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2228:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1023,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2228:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1024,
												"nodeType": "ExpressionStatement",
												"src": "2228:52:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1031,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1026,
																	"name": "userCollateral",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 890,
																	"src": "2311:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1029,
																"indexExpression": {
																	"expression": {
																		"id": 1027,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2326:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1028,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2330:6:6",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2326:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2311:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1030,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1015,
																"src": "2341:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2311:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e7420636f6c6c61746572616c",
															"id": 1032,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2361:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c9a6548b8b08f3e884692ff4b4c5cb58e1633771e97667c355d207e48aa0a8aa",
																"typeString": "literal_string \"Insufficient collateral\""
															},
															"value": "Insufficient collateral"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c9a6548b8b08f3e884692ff4b4c5cb58e1633771e97667c355d207e48aa0a8aa",
																"typeString": "literal_string \"Insufficient collateral\""
															}
														],
														"id": 1025,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2290:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1033,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2290:106:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1034,
												"nodeType": "ExpressionStatement",
												"src": "2290:106:6"
											},
											{
												"assignments": [
													1036
												],
												"declarations": [
													{
														"constant": false,
														"id": 1036,
														"mutability": "mutable",
														"name": "borrowedAmount",
														"nameLocation": "2414:14:6",
														"nodeType": "VariableDeclaration",
														"scope": 1092,
														"src": "2406:22:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1035,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2406:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1049,
												"initialValue": {
													"condition": {
														"expression": {
															"baseExpression": {
																"id": 1037,
																"name": "loans",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 886,
																"src": "2431:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Loan_$881_storage_$",
																	"typeString": "mapping(address => struct CoreLoanPlatform.Loan storage ref)"
																}
															},
															"id": 1040,
															"indexExpression": {
																"expression": {
																	"id": 1038,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2437:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1039,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2441:6:6",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2437:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2431:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Loan_$881_storage",
																"typeString": "struct CoreLoanPlatform.Loan storage ref"
															}
														},
														"id": 1041,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2449:6:6",
														"memberName": "active",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 880,
														"src": "2431:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "30",
														"id": 1047,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2509:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"id": 1048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2431:79:6",
													"trueExpression": {
														"expression": {
															"baseExpression": {
																"id": 1042,
																"name": "loans",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 886,
																"src": "2470:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Loan_$881_storage_$",
																	"typeString": "mapping(address => struct CoreLoanPlatform.Loan storage ref)"
																}
															},
															"id": 1045,
															"indexExpression": {
																"expression": {
																	"id": 1043,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2476:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1044,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2480:6:6",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2476:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2470:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Loan_$881_storage",
																"typeString": "struct CoreLoanPlatform.Loan storage ref"
															}
														},
														"id": 1046,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2488:6:6",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 874,
														"src": "2470:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2406:104:6"
											},
											{
												"assignments": [
													1051
												],
												"declarations": [
													{
														"constant": false,
														"id": 1051,
														"mutability": "mutable",
														"name": "requiredCollateral",
														"nameLocation": "2528:18:6",
														"nodeType": "VariableDeclaration",
														"scope": 1092,
														"src": "2520:26:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1050,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2520:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1058,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1054,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1052,
																	"name": "borrowedAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1036,
																	"src": "2550:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1053,
																	"name": "COLLATERAL_RATIO",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 854,
																	"src": "2567:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2550:33:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1055,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2549:35:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 1056,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2587:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "2549:41:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2520:70:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1067,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1065,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1060,
																		"name": "userCollateral",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 890,
																		"src": "2621:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1063,
																	"indexExpression": {
																		"expression": {
																			"id": 1061,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2636:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1062,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2640:6:6",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2636:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2621:26:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1064,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1015,
																	"src": "2650:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2621:35:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1066,
																"name": "requiredCollateral",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1051,
																"src": "2660:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2621:57:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5769746864726177616c20776f756c6420756e646572636f6c6c61746572616c697a65206c6f616e",
															"id": 1068,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2692:42:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_520c8012aa686709e412a6a69ffe245d6710e9b6ae69e933e702530a547be766",
																"typeString": "literal_string \"Withdrawal would undercollateralize loan\""
															},
															"value": "Withdrawal would undercollateralize loan"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_520c8012aa686709e412a6a69ffe245d6710e9b6ae69e933e702530a547be766",
																"typeString": "literal_string \"Withdrawal would undercollateralize loan\""
															}
														],
														"id": 1059,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2600:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2600:144:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1070,
												"nodeType": "ExpressionStatement",
												"src": "2600:144:6"
											},
											{
												"expression": {
													"id": 1076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1071,
															"name": "userCollateral",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 890,
															"src": "2754:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1074,
														"indexExpression": {
															"expression": {
																"id": 1072,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2769:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1073,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2773:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2769:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2754:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1075,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1015,
														"src": "2784:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2754:36:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1077,
												"nodeType": "ExpressionStatement",
												"src": "2754:36:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1081,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2817:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1082,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2821:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2817:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1083,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1015,
															"src": "2829:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1078,
															"name": "USD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 848,
															"src": "2800:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														"id": 1080,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2804:12:6",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 311,
														"src": "2800:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$225_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1084,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2800:36:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1085,
												"nodeType": "ExpressionStatement",
												"src": "2800:36:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1087,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2871:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1088,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2875:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2871:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1089,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1015,
															"src": "2883:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1086,
														"name": "CollateralWithdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 922,
														"src": "2851:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1090,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2851:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1091,
												"nodeType": "EmitStatement",
												"src": "2846:44:6"
											}
										]
									},
									"functionSelector": "6112fe2e",
									"id": 1093,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawCollateral",
									"nameLocation": "2174:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1015,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2201:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1093,
												"src": "2193:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1014,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2193:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2192:16:6"
									},
									"returnParameters": {
										"id": 1017,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2218:0:6"
									},
									"scope": 1545,
									"src": "2165:732:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1200,
										"nodeType": "Block",
										"src": "2947:987:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1099,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1095,
																"src": "2965:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1100,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2974:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2965:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
															"id": 1102,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2977:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															},
															"value": "Amount must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															}
														],
														"id": 1098,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2957:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2957:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1104,
												"nodeType": "ExpressionStatement",
												"src": "2957:52:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1111,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "3040:25:6",
															"subExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1106,
																		"name": "loans",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 886,
																		"src": "3041:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Loan_$881_storage_$",
																			"typeString": "mapping(address => struct CoreLoanPlatform.Loan storage ref)"
																		}
																	},
																	"id": 1109,
																	"indexExpression": {
																		"expression": {
																			"id": 1107,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3047:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1108,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3051:6:6",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3047:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3041:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Loan_$881_storage",
																		"typeString": "struct CoreLoanPlatform.Loan storage ref"
																	}
																},
																"id": 1110,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3059:6:6",
																"memberName": "active",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 880,
																"src": "3041:24:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4578697374696e67206c6f616e206d75737420626520726570616964206669727374",
															"id": 1112,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3079:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_889a3b76d8842e701e057a17fd85bfbebe0b3cfb874080561fa0d002c2c44c71",
																"typeString": "literal_string \"Existing loan must be repaid first\""
															},
															"value": "Existing loan must be repaid first"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_889a3b76d8842e701e057a17fd85bfbebe0b3cfb874080561fa0d002c2c44c71",
																"typeString": "literal_string \"Existing loan must be repaid first\""
															}
														],
														"id": 1105,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3019:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3019:106:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1114,
												"nodeType": "ExpressionStatement",
												"src": "3019:106:6"
											},
											{
												"assignments": [
													1116
												],
												"declarations": [
													{
														"constant": false,
														"id": 1116,
														"mutability": "mutable",
														"name": "requiredCollateral",
														"nameLocation": "3144:18:6",
														"nodeType": "VariableDeclaration",
														"scope": 1200,
														"src": "3136:26:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1115,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3136:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1123,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1119,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1117,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1095,
																	"src": "3166:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1118,
																	"name": "COLLATERAL_RATIO",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 854,
																	"src": "3175:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3166:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1120,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3165:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 1121,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3195:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "3165:33:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3136:62:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1130,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1125,
																	"name": "userCollateral",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 890,
																	"src": "3229:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1128,
																"indexExpression": {
																	"expression": {
																		"id": 1126,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3244:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3248:6:6",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3244:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3229:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1129,
																"name": "requiredCollateral",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1116,
																"src": "3259:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3229:48:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e7420636f6c6c61746572616c",
															"id": 1131,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3291:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c9a6548b8b08f3e884692ff4b4c5cb58e1633771e97667c355d207e48aa0a8aa",
																"typeString": "literal_string \"Insufficient collateral\""
															},
															"value": "Insufficient collateral"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c9a6548b8b08f3e884692ff4b4c5cb58e1633771e97667c355d207e48aa0a8aa",
																"typeString": "literal_string \"Insufficient collateral\""
															}
														],
														"id": 1124,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3208:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3208:118:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1133,
												"nodeType": "ExpressionStatement",
												"src": "3208:118:6"
											},
											{
												"assignments": [
													1135
												],
												"declarations": [
													{
														"constant": false,
														"id": 1135,
														"mutability": "mutable",
														"name": "maxBorrowable",
														"nameLocation": "3345:13:6",
														"nodeType": "VariableDeclaration",
														"scope": 1200,
														"src": "3337:21:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1134,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3337:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1145,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1141,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1136,
																		"name": "userCollateral",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 890,
																		"src": "3362:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1139,
																	"indexExpression": {
																		"expression": {
																			"id": 1137,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3377:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1138,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3381:6:6",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3377:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3362:26:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1140,
																	"name": "BORROWABLE_RATIO",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 857,
																	"src": "3403:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3362:57:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1142,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3361:59:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 1143,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3423:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "3361:65:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3337:89:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1149,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1147,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1095,
																"src": "3444:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1148,
																"name": "maxBorrowable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1135,
																"src": "3454:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3444:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "426f72726f7720616d6f756e742065786365656473206c696d6974",
															"id": 1150,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3469:29:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0b13f011926795557929f438867da0012b263fbc8a672de2f5c7ef42a2687115",
																"typeString": "literal_string \"Borrow amount exceeds limit\""
															},
															"value": "Borrow amount exceeds limit"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0b13f011926795557929f438867da0012b263fbc8a672de2f5c7ef42a2687115",
																"typeString": "literal_string \"Borrow amount exceeds limit\""
															}
														],
														"id": 1146,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3436:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3436:63:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1152,
												"nodeType": "ExpressionStatement",
												"src": "3436:63:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1162,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1158,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3553:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_CoreLoanPlatform_$1545",
																					"typeString": "contract CoreLoanPlatform"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_CoreLoanPlatform_$1545",
																					"typeString": "contract CoreLoanPlatform"
																				}
																			],
																			"id": 1157,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3545:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1156,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3545:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3545:13:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1154,
																		"name": "BTC",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 851,
																		"src": "3531:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$225",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3535:9:6",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 182,
																	"src": "3531:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1160,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3531:28:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1161,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1095,
																"src": "3563:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3531:38:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742042544320696e20636f6e7472616374",
															"id": 1163,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3583:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2ad103ba1dc4e3e245c2b9ad8cbdb9bd016961ea614c79fe06c4a9b921438ddf",
																"typeString": "literal_string \"Insufficient BTC in contract\""
															},
															"value": "Insufficient BTC in contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2ad103ba1dc4e3e245c2b9ad8cbdb9bd016961ea614c79fe06c4a9b921438ddf",
																"typeString": "literal_string \"Insufficient BTC in contract\""
															}
														],
														"id": 1153,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3510:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3510:113:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1165,
												"nodeType": "ExpressionStatement",
												"src": "3510:113:6"
											},
											{
												"expression": {
													"id": 1177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1166,
															"name": "loans",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 886,
															"src": "3634:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Loan_$881_storage_$",
																"typeString": "mapping(address => struct CoreLoanPlatform.Loan storage ref)"
															}
														},
														"id": 1169,
														"indexExpression": {
															"expression": {
																"id": 1167,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3640:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3644:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3640:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3634:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Loan_$881_storage",
															"typeString": "struct CoreLoanPlatform.Loan storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1171,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1095,
																"src": "3672:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1172,
																"name": "requiredCollateral",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1116,
																"src": "3692:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 1173,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "3724:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1174,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3730:9:6",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "3724:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "74727565",
																"id": 1175,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3753:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"id": 1170,
															"name": "Loan",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "3654:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Loan_$881_storage_ptr_$",
																"typeString": "type(struct CoreLoanPlatform.Loan storage pointer)"
															}
														},
														"id": 1176,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3654:113:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Loan_$881_memory_ptr",
															"typeString": "struct CoreLoanPlatform.Loan memory"
														}
													},
													"src": "3634:133:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Loan_$881_storage",
														"typeString": "struct CoreLoanPlatform.Loan storage ref"
													}
												},
												"id": 1178,
												"nodeType": "ExpressionStatement",
												"src": "3634:133:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1182,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3794:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3798:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3794:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1184,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1095,
															"src": "3806:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1179,
															"name": "BTC",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 851,
															"src": "3777:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														"id": 1181,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3781:12:6",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 311,
														"src": "3777:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$225_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3777:36:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1186,
												"nodeType": "ExpressionStatement",
												"src": "3777:36:6"
											},
											{
												"expression": {
													"id": 1191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1187,
														"name": "totalBorrowed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 872,
														"src": "3824:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1190,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1188,
															"name": "totalBorrowed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 872,
															"src": "3840:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1189,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1095,
															"src": "3856:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3840:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3824:38:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1192,
												"nodeType": "ExpressionStatement",
												"src": "3824:38:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1194,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3888:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1195,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3892:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3888:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1196,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1095,
															"src": "3900:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1197,
															"name": "requiredCollateral",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1116,
															"src": "3908:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1193,
														"name": "LoanTaken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 902,
														"src": "3878:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3878:49:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1199,
												"nodeType": "EmitStatement",
												"src": "3873:54:6"
											}
										]
									},
									"functionSelector": "d1a40564",
									"id": 1201,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "borrowBTC",
									"nameLocation": "2912:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1096,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2930:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1201,
												"src": "2922:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1094,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2922:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2921:16:6"
									},
									"returnParameters": {
										"id": 1097,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2947:0:6"
									},
									"scope": 1545,
									"src": "2903:1031:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1217,
										"nodeType": "Block",
										"src": "4015:71:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1212,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1208,
																		"name": "userCollateral",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 890,
																		"src": "4033:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1210,
																	"indexExpression": {
																		"id": 1209,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1203,
																		"src": "4048:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4033:20:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1211,
																	"name": "BORROWABLE_RATIO",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 857,
																	"src": "4056:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4033:39:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1213,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4032:41:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 1214,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4076:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "4032:47:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1207,
												"id": 1216,
												"nodeType": "Return",
												"src": "4025:54:6"
											}
										]
									},
									"functionSelector": "691d1eb3",
									"id": 1218,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBorrowableAmount",
									"nameLocation": "3949:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1203,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3977:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1218,
												"src": "3969:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3969:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3968:14:6"
									},
									"returnParameters": {
										"id": 1207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1206,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1218,
												"src": "4006:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4006:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4005:9:6"
									},
									"scope": 1545,
									"src": "3940:146:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1229,
										"nodeType": "Block",
										"src": "4165:44:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1225,
														"name": "userCollateral",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 890,
														"src": "4182:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1227,
													"indexExpression": {
														"id": 1226,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1220,
														"src": "4197:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4182:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1224,
												"id": 1228,
												"nodeType": "Return",
												"src": "4175:27:6"
											}
										]
									},
									"functionSelector": "b6f7132f",
									"id": 1230,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserCollateral",
									"nameLocation": "4101:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1220,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "4127:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "4119:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4119:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4118:14:6"
									},
									"returnParameters": {
										"id": 1224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1223,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "4156:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4156:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4155:9:6"
									},
									"scope": 1545,
									"src": "4092:117:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1273,
										"nodeType": "Block",
										"src": "4260:271:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1238,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1236,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1232,
																"src": "4278:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1237,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4287:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4278:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
															"id": 1239,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4290:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															},
															"value": "Amount must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															}
														],
														"id": 1235,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4270:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4270:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1241,
												"nodeType": "ExpressionStatement",
												"src": "4270:52:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1245,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4353:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1246,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4357:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4353:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1249,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4373:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_CoreLoanPlatform_$1545",
																		"typeString": "contract CoreLoanPlatform"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_CoreLoanPlatform_$1545",
																		"typeString": "contract CoreLoanPlatform"
																	}
																],
																"id": 1248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4365:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1247,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4365:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1250,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4365:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1251,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1232,
															"src": "4380:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1242,
															"name": "BTC",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 851,
															"src": "4332:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														"id": 1244,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4336:16:6",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 338,
														"src": "4332:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$225_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4332:55:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1253,
												"nodeType": "ExpressionStatement",
												"src": "4332:55:6"
											},
											{
												"expression": {
													"id": 1259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1254,
															"name": "lenderBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 894,
															"src": "4397:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1257,
														"indexExpression": {
															"expression": {
																"id": 1255,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4412:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4416:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4412:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4397:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1258,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1232,
														"src": "4427:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4397:36:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1260,
												"nodeType": "ExpressionStatement",
												"src": "4397:36:6"
											},
											{
												"expression": {
													"id": 1265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1261,
														"name": "totalStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 869,
														"src": "4443:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1264,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1262,
															"name": "totalStaked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 869,
															"src": "4457:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1263,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1232,
															"src": "4471:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4457:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4443:34:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1266,
												"nodeType": "ExpressionStatement",
												"src": "4443:34:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1268,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4505:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1269,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4509:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4505:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1270,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1232,
															"src": "4517:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1267,
														"name": "BTCDeposited",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 928,
														"src": "4492:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4492:32:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1272,
												"nodeType": "EmitStatement",
												"src": "4487:37:6"
											}
										]
									},
									"functionSelector": "a6b6d798",
									"id": 1274,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "depositBTC",
									"nameLocation": "4224:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1232,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4243:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1274,
												"src": "4235:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4235:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4234:16:6"
									},
									"returnParameters": {
										"id": 1234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4260:0:6"
									},
									"scope": 1545,
									"src": "4215:316:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1323,
										"nodeType": "Block",
										"src": "4583:331:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1282,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1280,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1276,
																"src": "4601:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1281,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4610:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4601:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
															"id": 1283,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4613:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															},
															"value": "Amount must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															}
														],
														"id": 1279,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4593:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4593:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1285,
												"nodeType": "ExpressionStatement",
												"src": "4593:52:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1292,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1287,
																	"name": "lenderBalances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 894,
																	"src": "4663:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1290,
																"indexExpression": {
																	"expression": {
																		"id": 1288,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "4678:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1289,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4682:6:6",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "4678:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4663:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1291,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1276,
																"src": "4693:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4663:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e6365",
															"id": 1293,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4701:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															},
															"value": "Insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															}
														],
														"id": 1286,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4655:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4655:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1295,
												"nodeType": "ExpressionStatement",
												"src": "4655:69:6"
											},
											{
												"expression": {
													"id": 1301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1296,
															"name": "lenderBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 894,
															"src": "4734:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1299,
														"indexExpression": {
															"expression": {
																"id": 1297,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4749:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1298,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4753:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4749:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4734:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1300,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1276,
														"src": "4764:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4734:36:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1302,
												"nodeType": "ExpressionStatement",
												"src": "4734:36:6"
											},
											{
												"expression": {
													"id": 1307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1303,
														"name": "totalStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 869,
														"src": "4780:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1306,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1304,
															"name": "totalStaked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 869,
															"src": "4794:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1305,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1276,
															"src": "4808:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4794:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4780:34:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1308,
												"nodeType": "ExpressionStatement",
												"src": "4780:34:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1312,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4841:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1313,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4845:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4841:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1314,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1276,
															"src": "4853:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1309,
															"name": "BTC",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 851,
															"src": "4824:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														"id": 1311,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4828:12:6",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 311,
														"src": "4824:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$225_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4824:36:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1316,
												"nodeType": "ExpressionStatement",
												"src": "4824:36:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1318,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4888:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1319,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4892:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4888:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1320,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1276,
															"src": "4900:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1317,
														"name": "BTCWithdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 934,
														"src": "4875:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4875:32:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1322,
												"nodeType": "EmitStatement",
												"src": "4870:37:6"
											}
										]
									},
									"functionSelector": "90b4588b",
									"id": 1324,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawBTC",
									"nameLocation": "4546:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1276,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4566:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "4558:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4558:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4557:16:6"
									},
									"returnParameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4583:0:6"
									},
									"scope": 1545,
									"src": "4537:377:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1335,
										"nodeType": "Block",
										"src": "4989:44:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1331,
														"name": "lenderBalances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 894,
														"src": "5006:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1333,
													"indexExpression": {
														"id": 1332,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1326,
														"src": "5021:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5006:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1330,
												"id": 1334,
												"nodeType": "Return",
												"src": "4999:27:6"
											}
										]
									},
									"functionSelector": "dac3fc3f",
									"id": 1336,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserStaked",
									"nameLocation": "4929:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1326,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "4951:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "4943:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1325,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4943:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4942:14:6"
									},
									"returnParameters": {
										"id": 1330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1329,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "4980:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1328,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4980:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4979:9:6"
									},
									"scope": 1545,
									"src": "4920:113:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1343,
										"nodeType": "Block",
										"src": "5096:37:6",
										"statements": [
											{
												"expression": {
													"id": 1341,
													"name": "INTEREST_RATE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 860,
													"src": "5113:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1340,
												"id": 1342,
												"nodeType": "Return",
												"src": "5106:20:6"
											}
										]
									},
									"functionSelector": "f4925de5",
									"id": 1344,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCurrentApy",
									"nameLocation": "5048:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1337,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5061:2:6"
									},
									"returnParameters": {
										"id": 1340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1339,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1344,
												"src": "5087:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5086:9:6"
									},
									"scope": 1545,
									"src": "5039:94:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1431,
										"nodeType": "Block",
										"src": "5181:609:6",
										"statements": [
											{
												"assignments": [
													1351
												],
												"declarations": [
													{
														"constant": false,
														"id": 1351,
														"mutability": "mutable",
														"name": "loan",
														"nameLocation": "5204:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1431,
														"src": "5191:17:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Loan_$881_storage_ptr",
															"typeString": "struct CoreLoanPlatform.Loan"
														},
														"typeName": {
															"id": 1350,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1349,
																"name": "Loan",
																"nameLocations": [
																	"5191:4:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 881,
																"src": "5191:4:6"
															},
															"referencedDeclaration": 881,
															"src": "5191:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Loan_$881_storage_ptr",
																"typeString": "struct CoreLoanPlatform.Loan"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1355,
												"initialValue": {
													"baseExpression": {
														"id": 1352,
														"name": "loans",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 886,
														"src": "5211:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Loan_$881_storage_$",
															"typeString": "mapping(address => struct CoreLoanPlatform.Loan storage ref)"
														}
													},
													"id": 1354,
													"indexExpression": {
														"id": 1353,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1346,
														"src": "5217:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5211:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Loan_$881_storage",
														"typeString": "struct CoreLoanPlatform.Loan storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5191:31:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1357,
																"name": "loan",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1351,
																"src": "5240:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Loan_$881_storage_ptr",
																	"typeString": "struct CoreLoanPlatform.Loan storage pointer"
																}
															},
															"id": 1358,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5245:6:6",
															"memberName": "active",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 880,
															"src": "5240:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20616374697665206c6f616e",
															"id": 1359,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5253:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5d763a4fa76dcd5af45b10ebcfff84ed4476e04c563aef69c0eaf01d8a5ccfba",
																"typeString": "literal_string \"No active loan\""
															},
															"value": "No active loan"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5d763a4fa76dcd5af45b10ebcfff84ed4476e04c563aef69c0eaf01d8a5ccfba",
																"typeString": "literal_string \"No active loan\""
															}
														],
														"id": 1356,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5232:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5232:38:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1361,
												"nodeType": "ExpressionStatement",
												"src": "5232:38:6"
											},
											{
												"assignments": [
													1363
												],
												"declarations": [
													{
														"constant": false,
														"id": 1363,
														"mutability": "mutable",
														"name": "daysElapsed",
														"nameLocation": "5288:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 1431,
														"src": "5280:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1362,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5280:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1372,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1368,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1364,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "5303:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1365,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5309:9:6",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "5303:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"expression": {
																		"id": 1366,
																		"name": "loan",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1351,
																		"src": "5321:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Loan_$881_storage_ptr",
																			"typeString": "struct CoreLoanPlatform.Loan storage pointer"
																		}
																	},
																	"id": 1367,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5326:9:6",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 878,
																	"src": "5321:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5303:32:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1369,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5302:34:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1370,
														"name": "SECONDS_IN_A_DAY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 866,
														"src": "5351:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5302:65:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5280:87:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1376,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1374,
																"name": "daysElapsed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1363,
																"src": "5385:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "3330",
																"id": 1375,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5400:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_30_by_1",
																	"typeString": "int_const 30"
																},
																"value": "30"
															},
															"src": "5385:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c6f616e206475726174696f6e2065786365656465642033302064617973",
															"id": 1377,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5404:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a7a7a3281abb2373d36b680552e8d3f537ad1508b3db7c57c338d13cfa2860a9",
																"typeString": "literal_string \"Loan duration exceeded 30 days\""
															},
															"value": "Loan duration exceeded 30 days"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a7a7a3281abb2373d36b680552e8d3f537ad1508b3db7c57c338d13cfa2860a9",
																"typeString": "literal_string \"Loan duration exceeded 30 days\""
															}
														],
														"id": 1373,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5377:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5377:60:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1379,
												"nodeType": "ExpressionStatement",
												"src": "5377:60:6"
											},
											{
												"assignments": [
													1381
												],
												"declarations": [
													{
														"constant": false,
														"id": 1381,
														"mutability": "mutable",
														"name": "interest",
														"nameLocation": "5455:8:6",
														"nodeType": "VariableDeclaration",
														"scope": 1431,
														"src": "5447:16:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1380,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5447:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1391,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1387,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1385,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1382,
																			"name": "loan",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1351,
																			"src": "5467:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Loan_$881_storage_ptr",
																				"typeString": "struct CoreLoanPlatform.Loan storage pointer"
																			}
																		},
																		"id": 1383,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5472:6:6",
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 874,
																		"src": "5467:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1384,
																		"name": "INTEREST_RATE",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 860,
																		"src": "5481:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5467:27:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1386,
																	"name": "daysElapsed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1363,
																	"src": "5497:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5467:41:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1388,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5466:43:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3336353030",
														"id": 1389,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5512:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_36500_by_1",
															"typeString": "int_const 36500"
														},
														"value": "36500"
													},
													"src": "5466:51:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5447:70:6"
											},
											{
												"assignments": [
													1393
												],
												"declarations": [
													{
														"constant": false,
														"id": 1393,
														"mutability": "mutable",
														"name": "totalRepayment",
														"nameLocation": "5535:14:6",
														"nodeType": "VariableDeclaration",
														"scope": 1431,
														"src": "5527:22:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1392,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5527:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1398,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1394,
															"name": "loan",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1351,
															"src": "5552:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Loan_$881_storage_ptr",
																"typeString": "struct CoreLoanPlatform.Loan storage pointer"
															}
														},
														"id": 1395,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5557:6:6",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 874,
														"src": "5552:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1396,
														"name": "interest",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1381,
														"src": "5566:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5552:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5527:47:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1402,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1346,
															"src": "5605:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1405,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5619:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_CoreLoanPlatform_$1545",
																		"typeString": "contract CoreLoanPlatform"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_CoreLoanPlatform_$1545",
																		"typeString": "contract CoreLoanPlatform"
																	}
																],
																"id": 1404,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5611:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1403,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5611:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1406,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5611:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1407,
															"name": "totalRepayment",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1393,
															"src": "5626:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1399,
															"name": "BTC",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 851,
															"src": "5584:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														"id": 1401,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5588:16:6",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 338,
														"src": "5584:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$225_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5584:57:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1409,
												"nodeType": "ExpressionStatement",
												"src": "5584:57:6"
											},
											{
												"expression": {
													"id": 1414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1410,
															"name": "loan",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1351,
															"src": "5651:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Loan_$881_storage_ptr",
																"typeString": "struct CoreLoanPlatform.Loan storage pointer"
															}
														},
														"id": 1412,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5656:6:6",
														"memberName": "active",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 880,
														"src": "5651:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1413,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5665:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "5651:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1415,
												"nodeType": "ExpressionStatement",
												"src": "5651:19:6"
											},
											{
												"expression": {
													"id": 1421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1416,
														"name": "totalBorrowed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 872,
														"src": "5680:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1420,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1417,
															"name": "totalBorrowed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 872,
															"src": "5696:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"expression": {
																"id": 1418,
																"name": "loan",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1351,
																"src": "5712:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Loan_$881_storage_ptr",
																	"typeString": "struct CoreLoanPlatform.Loan storage pointer"
																}
															},
															"id": 1419,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5717:6:6",
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 874,
															"src": "5712:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5696:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5680:43:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1422,
												"nodeType": "ExpressionStatement",
												"src": "5680:43:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1424,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5749:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1425,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5753:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5749:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1426,
																"name": "loan",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1351,
																"src": "5761:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Loan_$881_storage_ptr",
																	"typeString": "struct CoreLoanPlatform.Loan storage pointer"
																}
															},
															"id": 1427,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5766:6:6",
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 874,
															"src": "5761:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1428,
															"name": "interest",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1381,
															"src": "5774:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1423,
														"name": "LoanRepaid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 910,
														"src": "5738:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5738:45:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1430,
												"nodeType": "EmitStatement",
												"src": "5733:50:6"
											}
										]
									},
									"functionSelector": "190ef1e6",
									"id": 1432,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "repayLoan",
									"nameLocation": "5148:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1346,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "5166:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1432,
												"src": "5158:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1345,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5158:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5157:14:6"
									},
									"returnParameters": {
										"id": 1348,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5181:0:6"
									},
									"scope": 1545,
									"src": "5139:651:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1478,
										"nodeType": "Block",
										"src": "5869:358:6",
										"statements": [
											{
												"assignments": [
													1441
												],
												"declarations": [
													{
														"constant": false,
														"id": 1441,
														"mutability": "mutable",
														"name": "loan",
														"nameLocation": "5892:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1478,
														"src": "5879:17:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Loan_$881_storage_ptr",
															"typeString": "struct CoreLoanPlatform.Loan"
														},
														"typeName": {
															"id": 1440,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1439,
																"name": "Loan",
																"nameLocations": [
																	"5879:4:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 881,
																"src": "5879:4:6"
															},
															"referencedDeclaration": 881,
															"src": "5879:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Loan_$881_storage_ptr",
																"typeString": "struct CoreLoanPlatform.Loan"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1445,
												"initialValue": {
													"baseExpression": {
														"id": 1442,
														"name": "loans",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 886,
														"src": "5899:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Loan_$881_storage_$",
															"typeString": "mapping(address => struct CoreLoanPlatform.Loan storage ref)"
														}
													},
													"id": 1444,
													"indexExpression": {
														"id": 1443,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1434,
														"src": "5905:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5899:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Loan_$881_storage",
														"typeString": "struct CoreLoanPlatform.Loan storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5879:31:6"
											},
											{
												"condition": {
													"expression": {
														"id": 1446,
														"name": "loan",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1441,
														"src": "5924:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Loan_$881_storage_ptr",
															"typeString": "struct CoreLoanPlatform.Loan storage pointer"
														}
													},
													"id": 1447,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5929:6:6",
													"memberName": "active",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 880,
													"src": "5924:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1476,
													"nodeType": "Block",
													"src": "6188:33:6",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1474,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6209:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1438,
															"id": 1475,
															"nodeType": "Return",
															"src": "6202:8:6"
														}
													]
												},
												"id": 1477,
												"nodeType": "IfStatement",
												"src": "5920:301:6",
												"trueBody": {
													"id": 1473,
													"nodeType": "Block",
													"src": "5937:245:6",
													"statements": [
														{
															"assignments": [
																1449
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1449,
																	"mutability": "mutable",
																	"name": "daysElapsed",
																	"nameLocation": "5959:11:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1473,
																	"src": "5951:19:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1448,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5951:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1458,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1457,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1454,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 1450,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "5974:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 1451,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5980:9:6",
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"src": "5974:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"expression": {
																					"id": 1452,
																					"name": "loan",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1441,
																					"src": "5992:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Loan_$881_storage_ptr",
																						"typeString": "struct CoreLoanPlatform.Loan storage pointer"
																					}
																				},
																				"id": 1453,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5997:9:6",
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 878,
																				"src": "5992:14:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5974:32:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1455,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "5973:34:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1456,
																	"name": "SECONDS_IN_A_DAY",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 866,
																	"src": "6026:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5973:69:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5951:91:6"
														},
														{
															"assignments": [
																1460
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1460,
																	"mutability": "mutable",
																	"name": "interest",
																	"nameLocation": "6064:8:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1473,
																	"src": "6056:16:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1459,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6056:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1470,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1469,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1466,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1464,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"expression": {
																						"id": 1461,
																						"name": "loan",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1441,
																						"src": "6076:4:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Loan_$881_storage_ptr",
																							"typeString": "struct CoreLoanPlatform.Loan storage pointer"
																						}
																					},
																					"id": 1462,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "6081:6:6",
																					"memberName": "amount",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 874,
																					"src": "6076:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 1463,
																					"name": "INTEREST_RATE",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 860,
																					"src": "6090:13:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "6076:27:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 1465,
																				"name": "daysElapsed",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1449,
																				"src": "6106:11:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6076:41:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1467,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "6075:43:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "3336353030",
																	"id": 1468,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6137:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_36500_by_1",
																		"typeString": "int_const 36500"
																	},
																	"value": "36500"
																},
																"src": "6075:67:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6056:86:6"
														},
														{
															"expression": {
																"id": 1471,
																"name": "interest",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1460,
																"src": "6163:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1438,
															"id": 1472,
															"nodeType": "Return",
															"src": "6156:15:6"
														}
													]
												}
											}
										]
									},
									"functionSelector": "e11932cf",
									"id": 1479,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateInterest",
									"nameLocation": "5805:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1434,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "5831:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1479,
												"src": "5823:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5823:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5822:14:6"
									},
									"returnParameters": {
										"id": 1438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1437,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1479,
												"src": "5860:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1436,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5860:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5859:9:6"
									},
									"scope": 1545,
									"src": "5796:431:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1491,
										"nodeType": "Block",
										"src": "6339:39:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1487,
														"name": "loans",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 886,
														"src": "6356:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Loan_$881_storage_$",
															"typeString": "mapping(address => struct CoreLoanPlatform.Loan storage ref)"
														}
													},
													"id": 1489,
													"indexExpression": {
														"id": 1488,
														"name": "borrower",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1481,
														"src": "6362:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6356:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Loan_$881_storage",
														"typeString": "struct CoreLoanPlatform.Loan storage ref"
													}
												},
												"functionReturnParameters": 1486,
												"id": 1490,
												"nodeType": "Return",
												"src": "6349:22:6"
											}
										]
									},
									"functionSelector": "e8a7da8e",
									"id": 1492,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLoanDetails",
									"nameLocation": "6242:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1481,
												"mutability": "mutable",
												"name": "borrower",
												"nameLocation": "6265:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1492,
												"src": "6257:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1480,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6257:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6256:18:6"
									},
									"returnParameters": {
										"id": 1486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1485,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1492,
												"src": "6322:11:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Loan_$881_memory_ptr",
													"typeString": "struct CoreLoanPlatform.Loan"
												},
												"typeName": {
													"id": 1484,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1483,
														"name": "Loan",
														"nameLocations": [
															"6322:4:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 881,
														"src": "6322:4:6"
													},
													"referencedDeclaration": 881,
													"src": "6322:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Loan_$881_storage_ptr",
														"typeString": "struct CoreLoanPlatform.Loan"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6321:13:6"
									},
									"scope": 1545,
									"src": "6233:145:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1503,
										"nodeType": "Block",
										"src": "6458:46:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1499,
														"name": "lenderBalances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 894,
														"src": "6475:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1501,
													"indexExpression": {
														"id": 1500,
														"name": "lender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1494,
														"src": "6490:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6475:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1498,
												"id": 1502,
												"nodeType": "Return",
												"src": "6468:29:6"
											}
										]
									},
									"functionSelector": "bd09085a",
									"id": 1504,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLenderBalance",
									"nameLocation": "6393:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1494,
												"mutability": "mutable",
												"name": "lender",
												"nameLocation": "6418:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1504,
												"src": "6410:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6410:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6409:16:6"
									},
									"returnParameters": {
										"id": 1498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1497,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1504,
												"src": "6449:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1496,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6449:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6448:9:6"
									},
									"scope": 1545,
									"src": "6384:120:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1511,
										"nodeType": "Block",
										"src": "6568:35:6",
										"statements": [
											{
												"expression": {
													"id": 1509,
													"name": "totalStaked",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 869,
													"src": "6585:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1508,
												"id": 1510,
												"nodeType": "Return",
												"src": "6578:18:6"
											}
										]
									},
									"functionSelector": "0917e776",
									"id": 1512,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTotalStaked",
									"nameLocation": "6519:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1505,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6533:2:6"
									},
									"returnParameters": {
										"id": 1508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1507,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1512,
												"src": "6559:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6559:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6558:9:6"
									},
									"scope": 1545,
									"src": "6510:93:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1519,
										"nodeType": "Block",
										"src": "6669:37:6",
										"statements": [
											{
												"expression": {
													"id": 1517,
													"name": "totalBorrowed",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 872,
													"src": "6686:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1516,
												"id": 1518,
												"nodeType": "Return",
												"src": "6679:20:6"
											}
										]
									},
									"functionSelector": "0307c4a1",
									"id": 1520,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTotalBorrowed",
									"nameLocation": "6618:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1513,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6634:2:6"
									},
									"returnParameters": {
										"id": 1516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1515,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1520,
												"src": "6660:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1514,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6660:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6659:9:6"
									},
									"scope": 1545,
									"src": "6609:97:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1543,
										"nodeType": "Block",
										"src": "6783:135:6",
										"statements": [
											{
												"assignments": [
													1529
												],
												"declarations": [
													{
														"constant": false,
														"id": 1529,
														"mutability": "mutable",
														"name": "loan",
														"nameLocation": "6806:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1543,
														"src": "6793:17:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Loan_$881_storage_ptr",
															"typeString": "struct CoreLoanPlatform.Loan"
														},
														"typeName": {
															"id": 1528,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1527,
																"name": "Loan",
																"nameLocations": [
																	"6793:4:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 881,
																"src": "6793:4:6"
															},
															"referencedDeclaration": 881,
															"src": "6793:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Loan_$881_storage_ptr",
																"typeString": "struct CoreLoanPlatform.Loan"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1533,
												"initialValue": {
													"baseExpression": {
														"id": 1530,
														"name": "loans",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 886,
														"src": "6813:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Loan_$881_storage_$",
															"typeString": "mapping(address => struct CoreLoanPlatform.Loan storage ref)"
														}
													},
													"id": 1532,
													"indexExpression": {
														"id": 1531,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1522,
														"src": "6819:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6813:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Loan_$881_storage",
														"typeString": "struct CoreLoanPlatform.Loan storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6793:31:6"
											},
											{
												"condition": {
													"expression": {
														"id": 1534,
														"name": "loan",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1529,
														"src": "6838:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Loan_$881_storage_ptr",
															"typeString": "struct CoreLoanPlatform.Loan storage pointer"
														}
													},
													"id": 1535,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "6843:6:6",
													"memberName": "active",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 880,
													"src": "6838:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1540,
												"nodeType": "IfStatement",
												"src": "6834:60:6",
												"trueBody": {
													"id": 1539,
													"nodeType": "Block",
													"src": "6851:43:6",
													"statements": [
														{
															"expression": {
																"expression": {
																	"id": 1536,
																	"name": "loan",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1529,
																	"src": "6872:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Loan_$881_storage_ptr",
																		"typeString": "struct CoreLoanPlatform.Loan storage pointer"
																	}
																},
																"id": 1537,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6877:6:6",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 874,
																"src": "6872:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1526,
															"id": 1538,
															"nodeType": "Return",
															"src": "6865:18:6"
														}
													]
												}
											},
											{
												"expression": {
													"hexValue": "30",
													"id": 1541,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6910:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1526,
												"id": 1542,
												"nodeType": "Return",
												"src": "6903:8:6"
											}
										]
									},
									"functionSelector": "e86ef40b",
									"id": 1544,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserBorrowed",
									"nameLocation": "6721:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1522,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "6745:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1544,
												"src": "6737:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6737:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6736:14:6"
									},
									"returnParameters": {
										"id": 1526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1525,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1544,
												"src": "6774:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1524,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6774:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6773:9:6"
									},
									"scope": 1545,
									"src": "6712:206:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1546,
							"src": "235:6685:6",
							"usedErrors": [
								13,
								18,
								278,
								559,
								564,
								567
							],
							"usedEvents": [
								24,
								902,
								910,
								916,
								922,
								928,
								934
							]
						}
					],
					"src": "32:6889:6"
				},
				"id": 6
			}
		}
	}
}